,Question,Choice,Topic,Level
0,ตัวแก้ไข (Decorator) ในภาษา Python ใช้สำหรับอะไร?,"[{'text': 'เพิ่มฟังก์ชันให้กับฟังก์ชันอื่น', 'weight': 1}, {'text': 'ลดฟังก์ชันออกจากฟังก์ชันอื่น', 'weight': 0}, {'text': 'สร้างคลาสใหม่', 'weight': 0}, {'text': 'ลบฟังก์ชันทิ้ง', 'weight': 0}]",Decorators,Easy
1,วิธีการเขียนตัวแก้ไข (Decorator) ใน Python คือ?,"[{'text': '@my_decorator', 'weight': 1}, {'text': 'my_decorator()', 'weight': 0}, {'text': 'def my_decorator:', 'weight': 0}, {'text': 'class my_decorator:', 'weight': 0}]",Decorators,Medium
2,Context Manager ใน Python ใช้สำหรับอะไร?,"[{'text': 'การจัดการทรัพยากรที่จำเป็นต้องปิดหรือปล่อยเมื่อใช้งานเสร็จ', 'weight': 1}, {'text': 'การสร้างฟังก์ชันใหม่', 'weight': 0}, {'text': 'การสร้างคลาสใหม่', 'weight': 0}, {'text': 'การลบทรัพยากรทิ้ง', 'weight': 0}]",Context Managers,Easy
3,คำสั่งไหนใน Python ที่ใช้สร้าง Context Manager?,"[{'text': 'with', 'weight': 1}, {'text': 'try', 'weight': 0}, {'text': 'except', 'weight': 0}, {'text': 'finally', 'weight': 0}]",Context Managers,Medium
4,ความแตกต่างระหว่าง Decorator และ Context Manager คือ?,"[{'text': 'Decorator ใช้เพิ่มฟังก์ชันให้กับฟังก์ชันอื่น ในขณะที่ Context Manager ใช้ในการจัดการทรัพยากร', 'weight': 1}, {'text': 'Decorator ใช้ในการจัดการทรัพยากร ในขณะที่ Context Manager ใช้เพิ่มฟังก์ชันให้กับฟังก์ชันอื่น', 'weight': 0}, {'text': 'Decorator และ Context Manager ไม่มีความแตกต่าง', 'weight': 0}, {'text': 'Decorator ใช้สร้างคลาสใหม่ ในขณะที่ Context Manager ใช้สร้างฟังก์ชันใหม่', 'weight': 0}]",Decorators and Context Managers,Hard
5,ตัวอย่างการใช้ Decorator ใน Python คือ?,"[{'text': 'การตรวจสอบการเข้าถึงฟังก์ชัน', 'weight': 1}, {'text': 'การสร้างฟังก์ชันใหม่', 'weight': 0}, {'text': 'การลบฟังก์ชันทิ้ง', 'weight': 0}, {'text': 'การสร้างคลาสใหม่', 'weight': 0}]",Decorators,Medium
6,ตัวอย่างการใช้ Context Manager ใน Python คือ?,"[{'text': 'การเปิดและปิดไฟล์', 'weight': 1}, {'text': 'การสร้างฟังก์ชันใหม่', 'weight': 0}, {'text': 'การลบไฟล์ทิ้ง', 'weight': 0}, {'text': 'การสร้างคลาสใหม่', 'weight': 0}]",Context Managers,Medium
7,ประโยชน์ของการใช้ Decorator ใน Python คือ?,"[{'text': 'สามารถเพิ่มฟังก์ชันให้กับฟังก์ชันอื่นได้โดยไม่ต้องแก้ไขโค้ดของฟังก์ชันนั้น', 'weight': 1}, {'text': 'สามารถลดฟังก์ชันออกจากฟังก์ชันอื่นได้', 'weight': 0}, {'text': 'สามารถสร้างคลาสใหม่ได้', 'weight': 0}, {'text': 'สามารถลบฟังก์ชันทิ้งได้', 'weight': 0}]",Decorators,Easy
8,ประโยชน์ของการใช้ Context Manager ใน Python คือ?,"[{'text': 'สามารถจัดการทรัพยากรที่จำเป็นต้องปิดหรือปล่อยเมื่อใช้งานเสร็จได้อย่างมีประสิทธิภาพ', 'weight': 1}, {'text': 'สามารถสร้างฟังก์ชันใหม่ได้', 'weight': 0}, {'text': 'สามารถสร้างคลาสใหม่ได้', 'weight': 0}, {'text': 'สามารถลบทรัพยากรทิ้งได้', 'weight': 0}]",Context Managers,Easy
9,การสร้าง list ใน Python สามารถทำได้โดยการใช้เครื่องหมายใด?,"[{'text': '()', 'weight': 0}, {'text': '[]', 'weight': 1}, {'text': '{}', 'weight': 0}, {'text': '<>', 'weight': 0}]",List,Easy
10,วิธีการเพิ่มข้อมูลใน list คือ?,"[{'text': '.append()', 'weight': 1}, {'text': '.insert()', 'weight': 0.5}, {'text': '.remove()', 'weight': 0}, {'text': '.pop()', 'weight': 0}]",List,Easy
11,คำสั่งใดใช้สำหรับการลบข้อมูลใน list?,"[{'text': '.append()', 'weight': 0}, {'text': '.remove()', 'weight': 1}, {'text': '.insert()', 'weight': 0}, {'text': '.pop()', 'weight': 0.5}]",List,Easy
12,การสร้าง dictionary ใน Python สามารถทำได้โดยการใช้เครื่องหมายใด?,"[{'text': '[]', 'weight': 0}, {'text': '()', 'weight': 0}, {'text': '{}', 'weight': 1}, {'text': '<>', 'weight': 0}]",Dictionary,Easy
13,วิธีการเพิ่มข้อมูลใน dictionary คือ?,"[{'text': '.update()', 'weight': 1}, {'text': '.append()', 'weight': 0}, {'text': '.insert()', 'weight': 0}, {'text': '.remove()', 'weight': 0}]",Dictionary,Medium
14,คำสั่งใดใช้สำหรับการลบข้อมูลใน dictionary?,"[{'text': '.update()', 'weight': 0}, {'text': '.pop()', 'weight': 1}, {'text': '.append()', 'weight': 0}, {'text': '.insert()', 'weight': 0}]",Dictionary,Medium
15,การสร้าง set ใน Python สามารถทำได้โดยการใช้เครื่องหมายใด?,"[{'text': '[]', 'weight': 0}, {'text': '()', 'weight': 0}, {'text': 'set()', 'weight': 1}, {'text': '<>', 'weight': 0}]",Set,Easy
16,วิธีการเพิ่มข้อมูลใน set คือ?,"[{'text': '.update()', 'weight': 1}, {'text': '.add()', 'weight': 0.5}, {'text': '.append()', 'weight': 0}, {'text': '.insert()', 'weight': 0}]",Set,Medium
17,คำสั่งใดใช้สำหรับการลบข้อมูลใน set?,"[{'text': '.update()', 'weight': 0}, {'text': '.remove()', 'weight': 1}, {'text': '.add()', 'weight': 0}, {'text': '.insert()', 'weight': 0}]",Set,Medium
18,การรวมข้อมูลระหว่าง list และ set สามารถทำได้โดยการใช้คำสั่งใด?,"[{'text': '.extend()', 'weight': 0}, {'text': '.update()', 'weight': 0}, {'text': 'list(set())', 'weight': 1}, {'text': 'set(list())', 'weight': 0.5}]",List and Set,Hard
19,อ็อบเจ็กต์ใดใน Python ที่สามารถวนซ้ำได้?,"[{'text': 'List', 'weight': 0}, {'text': 'Tuple', 'weight': 0}, {'text': 'Iterator', 'weight': 1}, {'text': 'Dictionary', 'weight': 0}]",Iterators,Easy
20,ฟังก์ชันใดใน Python ที่สร้าง iterator?,"[{'text': 'iter()', 'weight': 0.5}, {'text': 'next()', 'weight': 0}, {'text': 'range()', 'weight': 0.5}, {'text': 'len()', 'weight': 0}]",Iterators,Medium
21,เมื่อเรียกใช้ฟังก์ชัน next() บนอ็อบเจ็กต์ iterator จะเกิดอะไรขึ้น?,"[{'text': 'จะวนซ้ำไปที่ต้นของ iterator', 'weight': 0}, {'text': 'จะหยุดการทำงาน', 'weight': 0}, {'text': 'จะแสดงค่าถัดไป', 'weight': 1}, {'text': 'จะแสดงค่าทั้งหมด', 'weight': 0}]",Iterators,Medium
22,การใช้งาน generators ใน Python มีข้อดีอย่างไร?,"[{'text': 'ใช้พื้นที่หน่วยความจำมาก', 'weight': 0}, {'text': 'สามารถวนซ้ำได้ไม่จำกัด', 'weight': 0}, {'text': 'ประหยัดพื้นที่หน่วยความจำ', 'weight': 1}, {'text': 'เร็วขึ้นในการประมวลผล', 'weight': 0.5}]",Generators,Medium
23,ฟังก์ชันใดใน Python ที่สร้าง generator?,"[{'text': 'def', 'weight': 0}, {'text': 'yield', 'weight': 1}, {'text': 'return', 'weight': 0}, {'text': 'print', 'weight': 0}]",Generators,Medium
24,ความแตกต่างระหว่าง iterators และ generators คืออะไร?,"[{'text': 'iterators เป็นฟังก์ชัน ส่วน generators เป็นอ็อบเจ็กต์', 'weight': 0}, {'text': 'generators สามารถวนซ้ำได้ไม่จำกัด แต่ iterators ไม่สามารถ', 'weight': 0}, {'text': 'iterators เป็นอ็อบเจ็กต์ ส่วน generators เป็นฟังก์ชัน', 'weight': 1}, {'text': 'generators ใช้พื้นที่หน่วยความจำมาก ส่วน iterators ประหยัดพื้นที่หน่วยความจำ', 'weight': 0}]",Iterators and Generators,Hard
25,การสร้าง iterator ใน Python สามารถทำได้ด้วยวิธีใดบ้าง?,"[{'text': 'การสร้าง class ที่มี method __iter__ และ __next__', 'weight': 1}, {'text': 'การสร้างฟังก์ชันที่มี yield statement', 'weight': 0}, {'text': 'การสร้าง list หรือ tuple', 'weight': 0}, {'text': 'การสร้าง dictionary', 'weight': 0}]",Iterators,Hard
26,ฟังก์ชันใดใน Python ที่ใช้สำหรับการวนซ้ำ iterator?,"[{'text': 'for loop', 'weight': 1}, {'text': 'while loop', 'weight': 0}, {'text': 'if statement', 'weight': 0}, {'text': 'try-except block', 'weight': 0}]",Iterators,Easy
27,การสร้าง generator ใน Python สามารถทำได้ด้วยวิธีใดบ้าง?,"[{'text': 'การสร้างฟังก์ชันที่มี yield statement', 'weight': 1}, {'text': 'การสร้าง class ที่มี method __iter__ และ __next__', 'weight': 0}, {'text': 'การสร้าง list หรือ tuple', 'weight': 0}, {'text': 'การสร้าง dictionary', 'weight': 0}]",Generators,Medium
28,การสร้าง class ใน Python จะต้องใช้คำสั่งใด,"[{'text': 'class', 'weight': 1}, {'text': 'object', 'weight': 0}, {'text': 'inherit', 'weight': 0}, {'text': 'instance', 'weight': 0}]",Class and Objects,Easy
29,คุณสมบัติของ Object-Oriented Programming ที่สามารถทำให้ class หนึ่งรับมรดกจาก class อื่นได้คือ,"[{'text': 'Inheritance', 'weight': 1}, {'text': 'Encapsulation', 'weight': 0}, {'text': 'Abstraction', 'weight': 0}, {'text': 'Polymorphism', 'weight': 0}]",Inheritance,Medium
30,เมื่อเราสร้าง object จาก class ใน Python จะเกิดอะไรขึ้น,"[{'text': 'สร้าง instance ของ class นั้น', 'weight': 1}, {'text': 'ลบ class นั้น', 'weight': 0}, {'text': 'แก้ไข class นั้น', 'weight': 0}, {'text': 'ไม่มีอะไรเกิดขึ้น', 'weight': 0}]",Class and Objects,Easy
31,การซ่อนข้อมูลใน class เพื่อป้องกันการเข้าถึงโดยตรงจากภายนอก คุณสมบัติของ OOP ที่เกี่ยวข้องคือ,"[{'text': 'Encapsulation', 'weight': 1}, {'text': 'Inheritance', 'weight': 0}, {'text': 'Abstraction', 'weight': 0}, {'text': 'Polymorphism', 'weight': 0}]",Encapsulation,Medium
32,ฟังก์ชันที่ถูกกำหนดไว้ใน class เรียกว่า,"[{'text': 'Method', 'weight': 1}, {'text': 'Function', 'weight': 0}, {'text': 'Class', 'weight': 0}, {'text': 'Object', 'weight': 0}]",Methods,Easy
33,การแสดงผลลัพธ์ของ object ใน Python สามารถทำได้โดยใช้ฟังก์ชันใด,"[{'text': '__str__()', 'weight': 1}, {'text': '__init__()', 'weight': 0}, {'text': '__del__()', 'weight': 0}, {'text': '__repr__()', 'weight': 0}]",Special Methods,Medium
34,คุณสมบัติของ OOP ที่ช่วยให้เราสามารถสร้าง object ที่มีพฤติกรรมเหมือนกับ object อื่นได้คือ,"[{'text': 'Polymorphism', 'weight': 1}, {'text': 'Inheritance', 'weight': 0}, {'text': 'Encapsulation', 'weight': 0}, {'text': 'Abstraction', 'weight': 0}]",Polymorphism,Medium
35,การสร้าง class ใหม่ที่มีคุณสมบัติและพฤติกรรมเหมือน class อื่นแต่เพิ่มเติมหรือปรับปรุงบางส่วน เรียกว่า,"[{'text': 'Inheritance', 'weight': 1}, {'text': 'Encapsulation', 'weight': 0}, {'text': 'Abstraction', 'weight': 0}, {'text': 'Polymorphism', 'weight': 0}]",Inheritance,Medium
36,การป้องกันไม่ให้ผู้ใช้เข้าถึงข้อมูลภายใน object โดยตรง คุณสมบัติของ OOP ที่เกี่ยวข้องคือ,"[{'text': 'Encapsulation', 'weight': 1}, {'text': 'Inheritance', 'weight': 0}, {'text': 'Abstraction', 'weight': 0}, {'text': 'Polymorphism', 'weight': 0}]",Encapsulation,Medium
37,การสร้าง object ใหม่จาก class ที่มีอยู่แล้ว เรียกว่า,"[{'text': 'Instantiation', 'weight': 1}, {'text': 'Inheritance', 'weight': 0}, {'text': 'Encapsulation', 'weight': 0}, {'text': 'Polymorphism', 'weight': 0}]",Class and Objects,Easy
38,การสร้างโมดูลในภาษา Python สามารถทำได้โดยการสร้างไฟล์.py และเขียนโค้ด Python ลงในไฟล์นั้น,"[{'text': 'ถูกต้อง', 'weight': 1}, {'text': 'ไม่ถูกต้อง', 'weight': 0}, {'text': 'ขึ้นอยู่กับสถานการณ์', 'weight': 0.5}, {'text': 'ไม่มีความเกี่ยวข้อง', 'weight': 0}]",Modules,Easy
39,เมื่อเรียกใช้ฟังก์ชันจากโมดูลอื่น เราต้องทำอย่างไร?,"[{'text': 'นำโมดูลนั้นมาสู่โครงการของเรา', 'weight': 0}, {'text': 'นำฟังก์ชันนั้นมาสู่โครงการของเรา', 'weight': 0}, {'text': 'นำโมดูลนั้นมา import', 'weight': 1}, {'text': 'ไม่ต้องทำอะไร', 'weight': 0}]",Imports,Easy
40,คำสั่ง import ใน Python ใช้สำหรับอะไร?,"[{'text': 'สร้างโมดูลใหม่', 'weight': 0}, {'text': 'เรียกใช้โมดูลที่มีอยู่แล้ว', 'weight': 1}, {'text': 'ลบโมดูลที่ไม่ต้องการ', 'weight': 0}, {'text': 'แก้ไขโมดูลที่มีอยู่แล้ว', 'weight': 0}]",Imports,Easy
41,ถ้าเราต้องการใช้ฟังก์ชันเฉพาะจากโมดูล เราสามารถทำได้โดยการใช้คำสั่งอะไร?,"[{'text': 'import *', 'weight': 0}, {'text': 'from... import...', 'weight': 1}, {'text': 'import... as...', 'weight': 0.5}, {'text': 'ไม่สามารถทำได้', 'weight': 0}]",Imports,Medium
42,โมดูลที่มีอยู่แล้วใน Python มีอะไรบ้าง?,"[{'text': 'math, time, datetime', 'weight': 1}, {'text': 'random, os, sys', 'weight': 1}, {'text': 'ทั้งหมดข้างบน', 'weight': 1}, {'text': 'ไม่มี', 'weight': 0}]",Modules,Medium
43,เราสามารถสร้างโมดูลของเราเองได้หรือไม่?,"[{'text': 'สามารถ', 'weight': 1}, {'text': 'ไม่สามารถ', 'weight': 0}, {'text': 'ขึ้นอยู่กับสถานการณ์', 'weight': 0.5}, {'text': 'ไม่มีความเกี่ยวข้อง', 'weight': 0}]",Modules,Easy
44,การ import โมดูลที่ไม่มีอยู่จริงจะทำให้เกิดอะไรขึ้น?,"[{'text': 'ไม่มีอะไรเกิดขึ้น', 'weight': 0}, {'text': 'โปรแกรมจะทำงานต่อไป', 'weight': 0}, {'text': 'จะเกิด Error', 'weight': 1}, {'text': 'โปรแกรมจะหยุดทำงาน', 'weight': 0.5}]",Imports,Medium
45,เราสามารถ import ฟังก์ชันจากโมดูลอื่นได้หรือไม่?,"[{'text': 'สามารถ', 'weight': 1}, {'text': 'ไม่สามารถ', 'weight': 0}, {'text': 'ขึ้นอยู่กับสถานการณ์', 'weight': 0.5}, {'text': 'ไม่มีความเกี่ยวข้อง', 'weight': 0}]",Imports,Easy
46,การ import โมดูลทั้งหมด (import *) จะมีข้อเสียอะไร?,"[{'text': 'ทำให้โปรแกรมทำงานช้าลง', 'weight': 0.5}, {'text': 'ทำให้เกิด conflict ของชื่อฟังก์ชัน', 'weight': 1}, {'text': 'ไม่มีข้อเสีย', 'weight': 0}, {'text': 'ทำให้โปรแกรมไม่สามารถทำงานได้', 'weight': 0}]",Imports,Hard
47,การทำอะไรบ้างใน Python เพื่อจัดการกับข้อผิดพลาด?,"[{'text': 'การใช้คำสั่ง try-except', 'weight': 1}, {'text': 'การใช้คำสั่ง if-else', 'weight': 0}, {'text': 'การใช้คำสั่ง for loop', 'weight': 0}, {'text': 'การใช้คำสั่ง while loop', 'weight': 0}]",ErrorHandling,Easy
48,คำสั่งไหนที่ใช้เพื่อรับข้อความข้อผิดพลาดใน Python?,"[{'text': 'except Exception as e:', 'weight': 1}, {'text': 'try:', 'weight': 0}, {'text': 'finally:', 'weight': 0}, {'text': 'raise:', 'weight': 0}]",ErrorHandling,Medium
49,การทำอะไรบ้างใน Python เพื่อสร้างข้อผิดพลาด?,"[{'text': 'การใช้คำสั่ง raise', 'weight': 1}, {'text': 'การใช้คำสั่ง try', 'weight': 0}, {'text': 'การใช้คำสั่ง except', 'weight': 0}, {'text': 'การใช้คำสั่ง finally', 'weight': 0}]",ErrorHandling,Medium
50,คำสั่งไหนที่ใช้เพื่อทำการล้างข้อมูลหลังจากการทำรายการใน Python?,"[{'text': 'finally:', 'weight': 1}, {'text': 'except:', 'weight': 0}, {'text': 'try:', 'weight': 0}, {'text': 'raise:', 'weight': 0}]",ErrorHandling,Medium
51,การทำอะไรบ้างใน Python เพื่อตรวจสอบและจัดการกับข้อผิดพลาด?,"[{'text': 'การใช้คำสั่ง try-except', 'weight': 1}, {'text': 'การใช้คำสั่ง if-else', 'weight': 0}, {'text': 'การใช้คำสั่ง for loop', 'weight': 0}, {'text': 'การใช้คำสั่ง while loop', 'weight': 0}]",ErrorHandling,Easy
52,คำสั่งไหนที่ใช้เพื่อทำการเรียกขึ้นข้อผิดพลาดใน Python?,"[{'text': ""raise Exception('message')"", 'weight': 1}, {'text': 'try:', 'weight': 0}, {'text': 'except:', 'weight': 0}, {'text': 'finally:', 'weight': 0}]",ErrorHandling,Medium
53,การทำอะไรบ้างใน Python เพื่อจัดการกับข้อผิดพลาดที่เกิดขึ้นจากการทำงานของโปรแกรม?,"[{'text': 'การใช้คำสั่ง try-except-finally', 'weight': 1}, {'text': 'การใช้คำสั่ง if-else', 'weight': 0}, {'text': 'การใช้คำสั่ง for loop', 'weight': 0}, {'text': 'การใช้คำสั่ง while loop', 'weight': 0}]",ErrorHandling,Hard
54,คำสั่งไหนที่ใช้เพื่อทำการแสดงข้อความข้อผิดพลาดใน Python?,"[{'text': 'print(e)', 'weight': 1}, {'text': ""raise Exception('message')"", 'weight': 0.5}, {'text': 'try:', 'weight': 0}, {'text': 'except:', 'weight': 0}]",ErrorHandling,Medium
55,การทำอะไรบ้างใน Python เพื่อทำการตรวจสอบและจัดการกับข้อผิดพลาดที่เกิดขึ้นจากการทำงานของโปรแกรม?,"[{'text': 'การใช้คำสั่ง try-except-finally', 'weight': 1}, {'text': 'การใช้คำสั่ง if-else', 'weight': 0}, {'text': 'การใช้คำสั่ง for loop', 'weight': 0}, {'text': 'การใช้คำสั่ง while loop', 'weight': 0}]",ErrorHandling,Hard
56,การแสดงผลข้อความในภาษา Python สามารถทำได้โดยใช้ฟังก์ชันใด,"[{'text': 'print()', 'weight': 1}, {'text': 'display()', 'weight': 0}, {'text': 'show()', 'weight': 0}, {'text': 'output()', 'weight': 0}]",Input and Output,Easy
57,ฟังก์ชันใดที่ใช้รับข้อมูลเข้ามาจากผู้ใช้ในภาษา Python,"[{'text': 'input()', 'weight': 1}, {'text': 'read()', 'weight': 0}, {'text': 'get()', 'weight': 0}, {'text': 'receive()', 'weight': 0}]",Input and Output,Easy
58,เมื่อเรียกใช้ฟังก์ชัน print() ในภาษา Python แล้วไม่มีการระบุ argument ใดๆ จะเกิดอะไรขึ้น,"[{'text': 'จะแสดงข้อความว่าง', 'weight': 1}, {'text': ""จะแสดงข้อความ 'None'"", 'weight': 0}, {'text': ""จะแสดงข้อความ 'print()'"", 'weight': 0}, {'text': ""จะแสดงข้อความ 'Error'"", 'weight': 0}]",Input and Output,Medium
59,"การรับข้อมูลที่มีหลายประเภท เช่น string, integer, float สามารถทำได้โดยใช้ฟังก์ชันใด","[{'text': 'eval(input())', 'weight': 1}, {'text': 'int(input())', 'weight': 0}, {'text': 'float(input())', 'weight': 0}, {'text': 'str(input())', 'weight': 0}]",Input and Output,Medium
60,ถ้าเราต้องการแสดงผลข้อมูลหลายชนิดข้อมูลในคำสั่งเดียว ควรใช้วิธีการใด,"[{'text': 'การใช้ฟังก์ชัน print() ร่วมกับการใช้คอมมาร์ (,)', 'weight': 1}, {'text': 'การใช้ฟังก์ชัน print() ร่วมกับการใช้ +', 'weight': 0}, {'text': 'การใช้ฟังก์ชัน display() ร่วมกับการใช้คอมมาร์ (,)', 'weight': 0}, {'text': 'การใช้ฟังก์ชัน show() ร่วมกับการใช้ +', 'weight': 0}]",Input and Output,Medium
61,การรับข้อมูลจากผู้ใช้ที่มีหลายบรรทัด สามารถทำได้โดยใช้ฟังก์ชันใด,"[{'text': 'input() ไม่สามารถรับข้อมูลหลายบรรทัด', 'weight': 1}, {'text': 'multiline_input()', 'weight': 0}, {'text': 'getlines()', 'weight': 0}, {'text': 'readlines()', 'weight': 0}]",Input and Output,Hard
62,การแสดงผลข้อมูลที่มีการจัดการตำแหน่งและรูปแบบของข้อมูล สามารถทำได้โดยใช้ฟังก์ชันใด,"[{'text': 'format()', 'weight': 1}, {'text': 'display()', 'weight': 0}, {'text': 'show()', 'weight': 0}, {'text': 'print()', 'weight': 0}]",Input and Output,Hard
63,การแสดงผลข้อมูลที่มีการจัดการตำแหน่งและรูปแบบของข้อมูลในรูปแบบใหม่ สามารถทำได้โดยใช้ฟังก์ชันใด,"[{'text': 'f-string', 'weight': 1}, {'text': 'format()', 'weight': 0}, {'text': 'display()', 'weight': 0}, {'text': 'show()', 'weight': 0}]",Input and Output,Hard
64,การแสดงผลข้อมูลที่มีการจัดการตำแหน่งและรูปแบบของข้อมูลในรูปแบบใหม่ สามารถทำได้โดยใช้วิธีการใด,"[{'text': 'การใช้สัญลักษณ์ { } และ.format()', 'weight': 1}, {'text': 'การใช้สัญลักษณ์ %', 'weight': 0}, {'text': 'การใช้สัญลักษณ์ $', 'weight': 0}, {'text': 'การใช้สัญลักษณ์ #', 'weight': 0}]",Input and Output,Hard
65,เซตในภาษาไพธอนสามารถสร้างได้โดยการใช้สัญลักษณ์อะไร?,"[{'text': '{ }', 'weight': 1}, {'text': '[ ]', 'weight': 0}, {'text': '( )', 'weight': 0}, {'text': '<>', 'weight': 0}]",Set,Easy
66,เซตในภาษาไพธอนสามารถจัดการกับข้อมูลแบบใดได้?,"[{'text': 'ข้อมูลที่ไม่ซ้ำกัน', 'weight': 1}, {'text': 'ข้อมูลที่ซ้ำกัน', 'weight': 0}, {'text': 'ข้อมูลที่มีการเรียงลำดับ', 'weight': 0}, {'text': 'ข้อมูลที่ไม่มีการเรียงลำดับ', 'weight': 0}]",Set,Easy
67,การสร้างเซตในภาษาไพธอนสามารถทำได้โดยการใช้คำสั่งอะไร?,"[{'text': 'set()', 'weight': 1}, {'text': 'list()', 'weight': 0}, {'text': 'tuple()', 'weight': 0}, {'text': 'dict()', 'weight': 0}]",Set,Medium
68,เซตในภาษาไพธอนสามารถใช้ในการตรวจสอบความเป็นสมาชิกของข้อมูลได้หรือไม่?,"[{'text': 'ใช่', 'weight': 1}, {'text': 'ไม่ใช่', 'weight': 0}]",Set,Medium
69,การรวมเซตในภาษาไพธอนสามารถทำได้โดยการใช้คำสั่งอะไร?,"[{'text': 'union()', 'weight': 1}, {'text': 'intersection()', 'weight': 0}, {'text': 'difference()', 'weight': 0}, {'text': 'symmetric_difference()', 'weight': 0}]",Set,Medium
70,เซตในภาษาไพธอนสามารถเปลี่ยนแปลงข้อมูลภายในเซตได้หรือไม่?,"[{'text': 'ไม่สามารถเปลี่ยนแปลงได้', 'weight': 1}, {'text': 'สามารถเปลี่ยนแปลงได้', 'weight': 0}]",Set,Hard
71,การหาข้อมูลที่ไม่ซ้ำกันระหว่างสองเซตในภาษาไพธอนสามารถทำได้โดยการใช้คำสั่งอะไร?,"[{'text': 'symmetric_difference()', 'weight': 1}, {'text': 'union()', 'weight': 0}, {'text': 'intersection()', 'weight': 0}, {'text': 'difference()', 'weight': 0}]",Set,Hard
72,เซตในภาษาไพธอนสามารถใช้ในการหาข้อมูลที่ซ้ำกันระหว่างสองเซตได้หรือไม่?,"[{'text': 'ใช่', 'weight': 1}, {'text': 'ไม่ใช่', 'weight': 0}]",Set,Hard
73,เซตในภาษาไพธอนสามารถใช้ในการหาข้อมูลที่ไม่ซ้ำกันระหว่างสองเซตได้หรือไม่?,"[{'text': 'ใช่', 'weight': 1}, {'text': 'ไม่ใช่', 'weight': 0}]",Set,Hard
74,การสร้าง dictionary ในภาษา Python สามารถทำได้โดยการใช้สัญลักษณ์อะไร?,"[{'text': '()', 'weight': 0}, {'text': '[]', 'weight': 0}, {'text': '{}', 'weight': 1}, {'text': '<>', 'weight': 0}]",การสร้าง Dictionary,"['Easy', 'Medium', 'Hard']"
75,คำสั่งไหนใช้สำหรับการเพิ่มค่าใน dictionary?,"[{'text': 'append()', 'weight': 0}, {'text': 'update()', 'weight': 1}, {'text': 'insert()', 'weight': 0}, {'text': 'add()', 'weight': 0}]",การเพิ่มค่าใน Dictionary,"['Easy', 'Medium', 'Hard']"
76,วิธีการเข้าถึงค่าใน dictionary คืออะไร?,"[{'text': 'ด้วยการใช้ index', 'weight': 0}, {'text': 'ด้วยการใช้ key', 'weight': 1}, {'text': 'ด้วยการใช้ value', 'weight': 0}, {'text': 'ด้วยการใช้ function', 'weight': 0}]",การเข้าถึงค่าใน Dictionary,"['Easy', 'Medium', 'Hard']"
77,การลบค่าใน dictionary สามารถทำได้โดยการใช้คำสั่งอะไร?,"[{'text': 'del()', 'weight': 1}, {'text': 'remove()', 'weight': 0}, {'text': 'pop()', 'weight': 0.5}, {'text': 'delete()', 'weight': 0}]",การลบค่าใน Dictionary,"['Easy', 'Medium', 'Hard']"
78,คำสั่งไหนใช้สำหรับการคัดลอก dictionary?,"[{'text': 'copy()', 'weight': 1}, {'text': 'duplicate()', 'weight': 0}, {'text': 'clone()', 'weight': 0}, {'text': 'replicate()', 'weight': 0}]",การคัดลอก Dictionary,"['Easy', 'Medium', 'Hard']"
79,คำสั่งไหนใช้สำหรับการตรวจสอบว่ามีคีย์ใน dictionary หรือไม่?,"[{'text': 'in', 'weight': 1}, {'text': 'exists()', 'weight': 0}, {'text': 'check()', 'weight': 0}, {'text': 'contains()', 'weight': 0}]",การตรวจสอบคีย์ใน Dictionary,"['Easy', 'Medium', 'Hard']"
80,การเรียงลำดับค่าใน dictionary สามารถทำได้โดยการใช้คำสั่งอะไร?,"[{'text': 'sort()', 'weight': 0.5}, {'text': 'sorted()', 'weight': 1}, {'text': 'order()', 'weight': 0}, {'text': 'arrange()', 'weight': 0}]",การเรียงลำดับค่าใน Dictionary,"['Medium', 'Hard']"
81,คำสั่งไหนใช้สำหรับการรวม dictionary?,"[{'text': 'update()', 'weight': 1}, {'text': 'merge()', 'weight': 0.5}, {'text': 'join()', 'weight': 0}, {'text': 'combine()', 'weight': 0}]",การรวม Dictionary,"['Medium', 'Hard']"
82,การแปลง dictionary เป็น string สามารถทำได้โดยการใช้คำสั่งอะไร?,"[{'text': 'str()', 'weight': 1}, {'text': 'stringify()', 'weight': 0}, {'text': 'toString()', 'weight': 0}, {'text': 'format()', 'weight': 0}]",การแปลง Dictionary เป็น String,"['Medium', 'Hard']"
83,การสร้าง tuple ในภาษา Python สามารถทำได้โดยการใช้สัญลักษณ์อะไร?,"[{'text': '()', 'weight': 1}, {'text': '[]', 'weight': 0}, {'text': '{}', 'weight': 0}, {'text': '<>', 'weight': 0}]",Tuple,Easy
84,คำสั่งไหนที่สามารถใช้เพื่อเข้าถึงสมาชิกใน tuple?,"[{'text': 'append()', 'weight': 0}, {'text': 'insert()', 'weight': 0}, {'text': 'index()', 'weight': 1}, {'text': 'sort()', 'weight': 0}]",Tuple,Easy
85,"เมื่อเรามี tuple ที่ชื่อว่า my_tuple = (1, 2, 3, 4, 5) เราสามารถเข้าถึงสมาชิกที่ 3 ของ tuple นี้ได้โดยใช้วิธีการใด?","[{'text': 'my_tuple[2]', 'weight': 1}, {'text': 'my_tuple(2)', 'weight': 0}, {'text': 'my_tuple.get(2)', 'weight': 0}, {'text': 'my_tuple[3]', 'weight': 0}]",Tuple,Easy
86,tuple เป็นชนิดข้อมูลที่สามารถแก้ไขได้หรือไม่?,"[{'text': 'สามารถแก้ไขได้', 'weight': 0}, {'text': 'ไม่สามารถแก้ไขได้', 'weight': 1}, {'text': 'ขึ้นอยู่กับการใช้งาน', 'weight': 0}, {'text': 'ไม่แน่ใจ', 'weight': 0}]",Tuple,Medium
87,การสร้าง tuple ที่มีสมาชิกเดียวใน Python จำเป็นต้องมีสัญลักษณ์อะไร?,"[{'text': ',', 'weight': 0}, {'text': '.', 'weight': 0}, {'text': ',', 'weight': 1}, {'text': ';', 'weight': 0}]",Tuple,Medium
88,เราสามารถแปลง list เป็น tuple ได้โดยใช้ฟังก์ชันใด?,"[{'text': 'tuple()', 'weight': 1}, {'text': 'list()', 'weight': 0}, {'text': 'set()', 'weight': 0}, {'text': 'dict()', 'weight': 0}]",Tuple,Medium
89,เราสามารถแปลง tuple เป็น list ได้โดยใช้ฟังก์ชันใด?,"[{'text': 'list()', 'weight': 1}, {'text': 'tuple()', 'weight': 0}, {'text': 'set()', 'weight': 0}, {'text': 'dict()', 'weight': 0}]",Tuple,Medium
90,ฟังก์ชันใดที่ใช้สำหรับการค้นหาตำแหน่งของสมาชิกใน tuple?,"[{'text': 'index()', 'weight': 1}, {'text': 'find()', 'weight': 0}, {'text': 'search()', 'weight': 0}, {'text': 'locate()', 'weight': 0}]",Tuple,Hard
91,เราสามารถลบสมาชิกออกจาก tuple ได้หรือไม่?,"[{'text': 'สามารถลบได้', 'weight': 0}, {'text': 'ไม่สามารถลบได้', 'weight': 1}, {'text': 'ขึ้นอยู่กับการใช้งาน', 'weight': 0}, {'text': 'ไม่แน่ใจ', 'weight': 0}]",Tuple,Hard
92,ฟังก์ชันใดที่ใช้สำหรับการนับจำนวนที่สมาชิกใน tuple?,"[{'text': 'count()', 'weight': 1}, {'text': 'len()', 'weight': 0}, {'text': 'num()', 'weight': 0}, {'text': 'size()', 'weight': 0}]",Tuple,Hard
93,การสร้าง list comprehension ในภาษา Python จะใช้รูปแบบใด,"[{'text': '[x for x in range(5)]', 'weight': 1}, {'text': '{x: x for x in range(5)}', 'weight': 0}, {'text': '(x for x in range(5))', 'weight': 0}, {'text': '{x for x in range(5)}', 'weight': 0}]",List Comprehension,Easy
94,"ผลลัพธ์ของโค้ดต่อไปนี้คืออะไร my_list = [1, 2, 3, 4, 5] print(my_list[-1])","[{'text': '1', 'weight': 0}, {'text': '5', 'weight': 1}, {'text': '0', 'weight': 0}, {'text': '6', 'weight': 0}]",Lists,Easy
95,การเข้าถึงสมาชิกของ list ใน Python เริ่มที่ดัชนีใด,"[{'text': '0', 'weight': 1}, {'text': '1', 'weight': 0}, {'text': '-1', 'weight': 0}, {'text': 'None', 'weight': 0}]",Lists,Easy
96,วิธีการเพิ่มสมาชิกใหม่เข้าไปใน list คือ,"[{'text': 'append', 'weight': 1}, {'text': 'insert', 'weight': 0.5}, {'text': 'add', 'weight': 0}, {'text': 'push', 'weight': 0}]",Lists,Medium
97,list comprehension สามารถใช้เงื่อนไข if เพิ่มเติมได้หรือไม่,"[{'text': 'สามารถ', 'weight': 1}, {'text': 'ไม่สามารถ', 'weight': 0}]",List Comprehension,Medium
98,การลบสมาชิกออกจาก list สามารถทำได้โดยใช้ method อะไร,"[{'text': 'remove', 'weight': 1}, {'text': 'delete', 'weight': 0}, {'text': 'pop', 'weight': 0.5}, {'text': 'clear', 'weight': 0}]",Lists,Medium
99,list comprehension สามารถใช้ในการสร้าง list ที่มีสมาชิกซ้ำๆ ได้หรือไม่,"[{'text': 'สามารถ', 'weight': 1}, {'text': 'ไม่สามารถ', 'weight': 0}]",List Comprehension,Medium
100,การสลับตำแหน่งสมาชิกของ list สามารถทำได้โดยใช้ method อะไร,"[{'text': 'reverse', 'weight': 1}, {'text': 'sort', 'weight': 0}, {'text': 'shuffle', 'weight': 0}, {'text': 'swap', 'weight': 0}]",Lists,Hard
101,การรวม list หลายๆ อันเข้าเป็น list เดียวสามารถทำได้โดยใช้ operator อะไร,"[{'text': '+', 'weight': 1}, {'text': '*', 'weight': 0}, {'text': '/', 'weight': 0}, {'text': '-', 'weight': 0}]",Lists,Hard
102,การแปลง list เป็น string สามารถทำได้โดยใช้ method อะไร,"[{'text': 'join', 'weight': 1}, {'text': 'split', 'weight': 0}, {'text': 'strip', 'weight': 0}, {'text': 'format', 'weight': 0}]",Lists,Hard
103,ฟังก์ชันในภาษาไพธอนสามารถรับค่าอะไรได้บ้าง?,"[{'text': 'ตัวเลข', 'weight': 0.25}, {'text': 'ข้อความ', 'weight': 0.25}, {'text': 'ทั้งหมดข้างต้น', 'weight': 1}, {'text': 'ไม่สามารถรับค่าอะไรได้', 'weight': 0}]",Function Inputs,Easy
104,คำสั่งใดใช้ในการเรียกใช้งานฟังก์ชันในภาษาไพธอน?,"[{'text': 'call()', 'weight': 0}, {'text': 'run()', 'weight': 0}, {'text': 'ชื่อฟังก์ชันตามด้วยวงเล็บ', 'weight': 1}, {'text': 'execute()', 'weight': 0}]",Calling Functions,Easy
105,ฟังก์ชันในภาษาไพธอนสามารถคืนค่าได้หลายอย่างพร้อมกันหรือไม่?,"[{'text': 'ไม่สามารถคืนค่าได้หลายอย่างพร้อมกัน', 'weight': 0}, {'text': 'สามารถคืนค่าได้หลายอย่างพร้อมกัน', 'weight': 1}, {'text': 'ขึ้นอยู่กับขนาดของฟังก์ชัน', 'weight': 0}, {'text': 'ขึ้นอยู่กับการกำหนดค่าเริ่มต้น', 'weight': 0}]",Function Returns,Medium
106,ฟังก์ชันในภาษาไพธอนสามารถมีพารามิเตอร์เริ่มต้นได้หรือไม่?,"[{'text': 'ไม่สามารถมีพารามิเตอร์เริ่มต้น', 'weight': 0}, {'text': 'สามารถมีพารามิเตอร์เริ่มต้น', 'weight': 1}, {'text': 'ขึ้นอยู่กับขนาดของฟังก์ชัน', 'weight': 0}, {'text': 'ขึ้นอยู่กับการกำหนดค่าเริ่มต้น', 'weight': 0}]",Function Parameters,Medium
107,ฟังก์ชันในภาษาไพธอนสามารถเรียกใช้งานฟังก์ชันภายในตัวเองได้หรือไม่?,"[{'text': 'ไม่สามารถเรียกใช้งานฟังก์ชันภายในตัวเอง', 'weight': 0}, {'text': 'สามารถเรียกใช้งานฟังก์ชันภายในตัวเอง', 'weight': 1}, {'text': 'ขึ้นอยู่กับขนาดของฟังก์ชัน', 'weight': 0}, {'text': 'ขึ้นอยู่กับการกำหนดค่าเริ่มต้น', 'weight': 0}]",Recursive Functions,Medium
108,ฟังก์ชันในภาษาไพธอนสามารถเปลี่ยนแปลงค่าของตัวแปรภายนอกได้หรือไม่?,"[{'text': 'ไม่สามารถเปลี่ยนแปลงค่าของตัวแปรภายนอก', 'weight': 0}, {'text': 'สามารถเปลี่ยนแปลงค่าของตัวแปรภายนอก', 'weight': 1}, {'text': 'ขึ้นอยู่กับขนาดของฟังก์ชัน', 'weight': 0}, {'text': 'ขึ้นอยู่กับการกำหนดค่าเริ่มต้น', 'weight': 0}]",Function Scope,Hard
109,ฟังก์ชันในภาษาไพธอนสามารถเป็นสมาชิกของโครงสร้างข้อมูลอื่นๆ ได้หรือไม่?,"[{'text': 'ไม่สามารถเป็นสมาชิกของโครงสร้างข้อมูลอื่นๆ', 'weight': 0}, {'text': 'สามารถเป็นสมาชิกของโครงสร้างข้อมูลอื่นๆ', 'weight': 1}, {'text': 'ขึ้นอยู่กับขนาดของฟังก์ชัน', 'weight': 0}, {'text': 'ขึ้นอยู่กับการกำหนดค่าเริ่มต้น', 'weight': 0}]",Function as Data,Hard
110,ฟังก์ชันในภาษาไพธอนสามารถใช้เป็นตัวกรองข้อมูลได้หรือไม่?,"[{'text': 'ไม่สามารถใช้เป็นตัวกรองข้อมูล', 'weight': 0}, {'text': 'สามารถใช้เป็นตัวกรองข้อมูล', 'weight': 1}, {'text': 'ขึ้นอยู่กับขนาดของฟังก์ชัน', 'weight': 0}, {'text': 'ขึ้นอยู่กับการกำหนดค่าเริ่มต้น', 'weight': 0}]",Function as Filter,Hard
111,ฟังก์ชันในภาษาไพธอนสามารถใช้เป็นตัวแปลงข้อมูลได้หรือไม่?,"[{'text': 'ไม่สามารถใช้เป็นตัวแปลงข้อมูล', 'weight': 0}, {'text': 'สามารถใช้เป็นตัวแปลงข้อมูล', 'weight': 1}, {'text': 'ขึ้นอยู่กับขนาดของฟังก์ชัน', 'weight': 0}, {'text': 'ขึ้นอยู่กับการกำหนดค่าเริ่มต้น', 'weight': 0}]",Function as Transformer,Hard
112,ฟังก์ชันในภาษาไพธอนสามารถใช้เป็นตัวสร้างข้อมูลได้หรือไม่?,"[{'text': 'ไม่สามารถใช้เป็นตัวสร้างข้อมูล', 'weight': 0}, {'text': 'สามารถใช้เป็นตัวสร้างข้อมูล', 'weight': 1}, {'text': 'ขึ้นอยู่กับขนาดของฟังก์ชัน', 'weight': 0}, {'text': 'ขึ้นอยู่กับการกำหนดค่าเริ่มต้น', 'weight': 0}]",Function as Generator,Hard
113,คำสั่ง loop ในภาษา Python ที่ใช้สำหรับการวนซ้ำคือ?,"[{'text': 'for', 'weight': 1}, {'text': 'while', 'weight': 0.75}, {'text': 'if', 'weight': 0}, {'text': 'else', 'weight': 0}]",Loops,Easy
114,การใช้ loop for ในภาษา Python สามารถวนซ้ำได้กี่รอบ?,"[{'text': 'ไม่จำกัด', 'weight': 1}, {'text': '10 รอบ', 'weight': 0}, {'text': '100 รอบ', 'weight': 0}, {'text': '1000 รอบ', 'weight': 0}]",Loops,Easy
115,ใน loop while ควรจะมีการเพิ่มหรือลดค่าของตัวแปรที่ใช้เป็นเงื่อนไขอย่างไร?,"[{'text': 'เพิ่มหรือลดค่าในทุกๆ รอบ', 'weight': 1}, {'text': 'ไม่ควรเปลี่ยนแปลงค่า', 'weight': 0}, {'text': 'เพิ่มค่าเฉพาะรอบแรก', 'weight': 0}, {'text': 'ลดค่าเฉพาะรอบสุดท้าย', 'weight': 0}]",Loops,Medium
116,คำสั่ง break ในภาษา Python ใช้สำหรับ?,"[{'text': 'ออกจาก loop ทันที', 'weight': 1}, {'text': 'วนซ้ำ loop อีกครั้ง', 'weight': 0}, {'text': 'ไปที่ส่วนอื่นของโปรแกรม', 'weight': 0}, {'text': 'หยุดการทำงานของโปรแกรม', 'weight': 0}]",Loops,Medium
117,คำสั่ง continue ในภาษา Python ใช้สำหรับ?,"[{'text': 'ข้ามไปยังรอบถัดไปของ loop', 'weight': 1}, {'text': 'ออกจาก loop ทันที', 'weight': 0}, {'text': 'วนซ้ำ loop อีกครั้ง', 'weight': 0}, {'text': 'หยุดการทำงานของโปรแกรม', 'weight': 0}]",Loops,Medium
118,ในการใช้ loop for ในภาษา Python เราสามารถวนซ้ำผ่าน list หรือ tuple ได้โดยตรง?,"[{'text': 'สามารถ', 'weight': 1}, {'text': 'ไม่สามารถ', 'weight': 0}, {'text': 'บางกรณี', 'weight': 0}, {'text': 'ขึ้นอยู่กับขนาดของ list หรือ tuple', 'weight': 0}]",Loops,Easy
119,ในการใช้ loop while ในภาษา Python เราต้องกำหนดเงื่อนไขในการวนซ้ำอย่างไร?,"[{'text': 'เป็นคำสั่งที่ต้องการให้ true', 'weight': 1}, {'text': 'เป็นคำสั่งที่ต้องการให้ false', 'weight': 0}, {'text': 'ไม่ต้องกำหนดเงื่อนไข', 'weight': 0}, {'text': 'ขึ้นอยู่กับความต้องการของผู้เขียน', 'weight': 0}]",Loops,Medium
120,ใน loop for ถ้าเราต้องการวนซ้ำผ่าน range ของตัวเลข เราสามารถทำได้โดยใช้คำสั่ง?,"[{'text': 'range()', 'weight': 1}, {'text': 'len()', 'weight': 0}, {'text': 'enumerate()', 'weight': 0}, {'text': 'zip()', 'weight': 0}]",Loops,Medium
121,การวนซ้ำผ่าน dictionary ในภาษา Python สามารถทำได้โดยใช้ loop?,"[{'text': 'for', 'weight': 1}, {'text': 'while', 'weight': 0}, {'text': 'if', 'weight': 0}, {'text': 'else', 'weight': 0}]",Loops,Hard
122,การเขียนโปรแกรมภาษา Python จะใช้คำสั่ง if เพื่อทำอะไร?,"[{'text': 'เพื่อสร้างฟังก์ชัน', 'weight': 0}, {'text': 'เพื่อทำการวนซ้ำ', 'weight': 0}, {'text': 'เพื่อตรวจสอบเงื่อนไข', 'weight': 1}, {'text': 'เพื่อสร้างคลาส', 'weight': 0}]",Control Flow,Easy
123,คำสั่ง elif ใน Python ใช้เพื่ออะไร?,"[{'text': 'เพื่อตรวจสอบเงื่อนไขหลัก', 'weight': 0}, {'text': 'เพื่อตรวจสอบเงื่อนไขที่สอง', 'weight': 1}, {'text': 'เพื่อสร้างฟังก์ชัน', 'weight': 0}, {'text': 'เพื่อทำการวนซ้ำ', 'weight': 0}]",Control Flow,Medium
124,คำสั่ง else ใน Python ใช้เพื่ออะไร?,"[{'text': 'เพื่อตรวจสอบเงื่อนไขหลัก', 'weight': 0}, {'text': 'เพื่อทำการวนซ้ำ', 'weight': 0}, {'text': 'เพื่อสร้างฟังก์ชัน', 'weight': 0}, {'text': 'เพื่อทำงานเมื่อเงื่อนไขไม่เป็นจริง', 'weight': 1}]",Control Flow,Easy
125,การเขียนโปรแกรมภาษา Python จะใช้คำสั่ง for เพื่อทำอะไร?,"[{'text': 'เพื่อตรวจสอบเงื่อนไข', 'weight': 0}, {'text': 'เพื่อทำการวนซ้ำ', 'weight': 1}, {'text': 'เพื่อสร้างฟังก์ชัน', 'weight': 0}, {'text': 'เพื่อสร้างคลาส', 'weight': 0}]",Control Flow,Easy
126,คำสั่ง break ใน Python ใช้เพื่ออะไร?,"[{'text': 'เพื่อยุติการทำงานของ loop', 'weight': 1}, {'text': 'เพื่อเริ่มการทำงานของ loop', 'weight': 0}, {'text': 'เพื่อตรวจสอบเงื่อนไข', 'weight': 0}, {'text': 'เพื่อสร้างฟังก์ชัน', 'weight': 0}]",Control Flow,Medium
127,คำสั่ง continue ใน Python ใช้เพื่ออะไร?,"[{'text': 'เพื่อยุติการทำงานของ loop', 'weight': 0}, {'text': 'เพื่อข้ามไปยังรอบถัดไปของ loop', 'weight': 1}, {'text': 'เพื่อตรวจสอบเงื่อนไข', 'weight': 0}, {'text': 'เพื่อสร้างฟังก์ชัน', 'weight': 0}]",Control Flow,Medium
128,การเขียนโปรแกรมภาษา Python จะใช้คำสั่ง while เพื่อทำอะไร?,"[{'text': 'เพื่อตรวจสอบเงื่อนไข', 'weight': 0}, {'text': 'เพื่อทำการวนซ้ำ', 'weight': 1}, {'text': 'เพื่อสร้างฟังก์ชัน', 'weight': 0}, {'text': 'เพื่อสร้างคลาส', 'weight': 0}]",Control Flow,Medium
129,คำสั่ง pass ใน Python ใช้เพื่ออะไร?,"[{'text': 'เพื่อทำการวนซ้ำ', 'weight': 0}, {'text': 'เพื่อตรวจสอบเงื่อนไข', 'weight': 0}, {'text': 'เพื่อสร้างฟังก์ชัน', 'weight': 0}, {'text': 'เพื่อไม่ทำอะไรและผ่านไปยังบรรทัดถัดไป', 'weight': 1}]",Control Flow,Hard
130,คำสั่ง try-except-finally ใน Python ใช้เพื่ออะไร?,"[{'text': 'เพื่อตรวจสอบเงื่อนไข', 'weight': 0}, {'text': 'เพื่อทำการวนซ้ำ', 'weight': 0}, {'text': 'เพื่อจัดการกับข้อผิดพลาด', 'weight': 1}, {'text': 'เพื่อสร้างฟังก์ชัน', 'weight': 0}]",Control Flow,Hard
131,ตัวแปรในภาษา Python สามารถเก็บค่าได้กี่ชนิด?,"[{'text': '2 ชนิด', 'weight': 0}, {'text': '3 ชนิด', 'weight': 0.25}, {'text': 'หลายชนิด', 'weight': 1}, {'text': 'ไม่จำกัด', 'weight': 0.5}]",Variables and Data Types,Easy
132,ตัวอย่างของตัวแปรแบบอักขระใน Python คืออะไร?,"[{'text': '123', 'weight': 0}, {'text': ""'Hello, World!'"", 'weight': 1}, {'text': '123.45', 'weight': 0.25}, {'text': 'True', 'weight': 0.5}]",Variables and Data Types,Easy
133,การแปลงตัวแปรจากชนิดหนึ่งเป็นอีกชนิดหนึ่งใน Python ทำได้โดยการใช้ฟังก์ชันอะไร?,"[{'text': 'type()', 'weight': 0.25}, {'text': 'convert()', 'weight': 0}, {'text': 'int(), float(), str() ฯลฯ', 'weight': 1}, {'text': 'change()', 'weight': 0.5}]",Variables and Data Types,Medium
134,ตัวอย่างของตัวแปรแบบจำนวนเต็มใน Python คืออะไร?,"[{'text': '123.45', 'weight': 0}, {'text': ""'Hello, World!'"", 'weight': 0.25}, {'text': '123', 'weight': 1}, {'text': 'True', 'weight': 0.5}]",Variables and Data Types,Easy
135,การสร้างตัวแปรใน Python สามารถทำได้โดยการใช้สัญลักษณ์อะไร?,"[{'text': '=', 'weight': 1}, {'text': '==', 'weight': 0}, {'text': '<>', 'weight': 0.25}, {'text': '!=', 'weight': 0.5}]",Variables and Data Types,Easy
136,ตัวอย่างของตัวแปรแบบตรรกศาสตร์ใน Python คืออะไร?,"[{'text': '123', 'weight': 0}, {'text': ""'Hello, World!'"", 'weight': 0.25}, {'text': 'True', 'weight': 1}, {'text': '123.45', 'weight': 0.5}]",Variables and Data Types,Easy
137,การตรวจสอบชนิดของตัวแปรใน Python สามารถทำได้โดยการใช้ฟังก์ชันอะไร?,"[{'text': 'type()', 'weight': 1}, {'text': 'check_type()', 'weight': 0}, {'text': 'isinstance()', 'weight': 0.5}, {'text': 'typeof()', 'weight': 0.25}]",Variables and Data Types,Medium
138,ตัวอย่างของตัวแปรแบบจำนวนจริงใน Python คืออะไร?,"[{'text': '123', 'weight': 0}, {'text': ""'Hello, World!'"", 'weight': 0.25}, {'text': '123.45', 'weight': 1}, {'text': 'True', 'weight': 0.5}]",Variables and Data Types,Easy
139,การกำหนดค่าเริ่มต้นให้กับตัวแปรใน Python สามารถทำได้โดยการใช้สัญลักษณ์อะไร?,"[{'text': '=', 'weight': 1}, {'text': '==', 'weight': 0}, {'text': '<>', 'weight': 0.25}, {'text': '!=', 'weight': 0.5}]",Variables and Data Types,Easy
0,Context Manager คืออะไร?,"[{'text': 'คลาสพิเศษที่ช่วยจัดการทรัพยากรใน Python', 'weight': 1}, {'text': 'ฟังก์ชันที่ใช้เพื่อจัดการทรัพยากร', 'weight': 0.25}, {'text': 'โมดูลที่ใช้เพื่อจัดการทรัพยากร', 'weight': 0}, {'text': 'ไม่มีความหมายใดๆ', 'weight': 0}]",Context Manager,Easy
1,วัตถุประสงค์ของ Context Manager คืออะไร?,"[{'text': 'เพื่อจัดการทรัพยากร เช่น การเปิด/ปิดไฟล์ หรือการเชื่อมต่อฐานข้อมูล', 'weight': 1}, {'text': 'เพื่อเพิ่มความเร็วในการทำงานของโปรแกรม', 'weight': 0}, {'text': 'เพื่อลดขนาดของโค้ด', 'weight': 0}, {'text': 'เพื่อเพิ่มความปลอดภัยในการเขียนโปรแกรม', 'weight': 0.25}]",Context Manager,Medium
2,ตัวอย่างการใช้งาน Context Manager คืออะไร?,"[{'text': ""with open('file.txt', 'r') as file:"", 'weight': 1}, {'text': ""file = open('file.txt', 'r')"", 'weight': 0.25}, {'text': 'import contextmanager', 'weight': 0}, {'text': 'from contextlib import contextmanager', 'weight': 0.5}]",Context Manager,Medium
3,Context Manager สามารถใช้กับทรัพยากรใดบ้าง?,"[{'text': 'ไฟล์, ฐานข้อมูล, โซคเก็ต, ล็อก', 'weight': 1}, {'text': 'ไฟล์, ฐานข้อมูล', 'weight': 0.5}, {'text': 'ล็อก, โซคเก็ต', 'weight': 0.25}, {'text': 'ไม่สามารถใช้กับทรัพยากรใดๆ', 'weight': 0}]",Context Manager,Medium
4,การทำงานของ Context Manager มีขั้นตอนใดบ้าง?,"[{'text': '__enter__ และ __exit__', 'weight': 1}, {'text': '__init__ และ __del__', 'weight': 0.25}, {'text': '__str__ และ __repr__', 'weight': 0}, {'text': '__add__ และ __sub__', 'weight': 0}]",Context Manager,Hard
5,ความสำคัญของ Context Manager คืออะไร?,"[{'text': 'ช่วยลดความซับซ้อนในการจัดการทรัพยากร', 'weight': 1}, {'text': 'ช่วยเพิ่มความเร็วในการทำงานของโปรแกรม', 'weight': 0}, {'text': 'ช่วยลดขนาดของโค้ด', 'weight': 0}, {'text': 'ช่วยเพิ่มความปลอดภัยในการเขียนโปรแกรม', 'weight': 0.25}]",Context Manager,Medium
6,การใช้งาน Context Manager มีข้อจำกัดใดบ้าง?,"[{'text': 'ไม่สามารถใช้กับทรัพยากรที่ไม่สนับสนุน', 'weight': 1}, {'text': 'สามารถใช้กับทุกทรัพยากร', 'weight': 0}, {'text': 'ไม่สามารถใช้กับทรัพยากรที่มีขนาดใหญ่', 'weight': 0.25}, {'text': 'ไม่สามารถใช้กับทรัพยากรที่มีความซับซ้อน', 'weight': 0.5}]",Context Manager,Hard
7,Context Manager สามารถใช้ร่วมกับทรัพยากรใดบ้าง?,"[{'text': 'ไฟล์, ฐานข้อมูล, โซคเก็ต, ล็อก', 'weight': 1}, {'text': 'ไฟล์, ฐานข้อมูล', 'weight': 0.5}, {'text': 'ล็อก, โซคเก็ต', 'weight': 0.25}, {'text': 'ไม่สามารถใช้ร่วมกับทรัพยากรใดๆ', 'weight': 0}]",Context Manager,Medium
8,Context Manager มีประโยชน์อย่างไร?,"[{'text': 'ช่วยลดความซับซ้อนในการจัดการทรัพยากร', 'weight': 1}, {'text': 'ช่วยเพิ่มความเร็วในการทำงานของโปรแกรม', 'weight': 0}, {'text': 'ช่วยลดขนาดของโค้ด', 'weight': 0}, {'text': 'ไม่มีประโยชน์ใดๆ', 'weight': 0}]",Context Manager,Easy
9,ต้องการใช้ Decorator เพื่อเพิ่มฟังก์ชันให้กับฟังก์ชันอื่นๆ ใน Python ควรใช้คำสั่งอะไร?,"[{'text': '@decorator_name', 'weight': 1}, {'text': 'def decorator_name:', 'weight': 0}, {'text': 'import decorator_name', 'weight': 0}, {'text': 'from decorator import *', 'weight': 0}]",การใช้งานเบื้องต้นของ Decorator,Easy
10,เมื่อเรียกใช้ฟังก์ชันที่ถูกตกแต่งด้วย Decorator จะเกิดอะไรขึ้น?,"[{'text': 'ฟังก์ชันจะถูกเรียกใช้โดยตรง', 'weight': 0}, {'text': 'ฟังก์ชันจะถูกแทนที่ด้วย Decorator', 'weight': 0}, {'text': 'ฟังก์ชันจะถูกเรียกใช้ผ่าน Decorator', 'weight': 1}, {'text': 'ไม่มีการทำงานใดๆ เกิดขึ้น', 'weight': 0}]",การทำงานของ Decorator,Medium
11,ฟังก์ชันใดใน Python ที่ถือว่าเป็น Decorator?,"[{'text': 'len()', 'weight': 0}, {'text': 'type()', 'weight': 0}, {'text': 'classmethod()', 'weight': 0.5}, {'text': 'staticmethod()', 'weight': 0.5}]",การใช้งานเบื้องต้นของ Decorator,Medium
12,คำสั่งใดที่ใช้สำหรับการสร้าง Decorator ใน Python?,"[{'text': 'def', 'weight': 0}, {'text': 'class', 'weight': 0}, {'text': '@', 'weight': 1}, {'text': 'import', 'weight': 0}]",การใช้งานเบื้องต้นของ Decorator,Easy
13,ฟังก์ชันใดที่สามารถใช้เป็น Decorator ใน Python?,"[{'text': 'ฟังก์ชันที่รับค่า argument เพียง 1 ตัว', 'weight': 0}, {'text': 'ฟังก์ชันที่ไม่รับค่า argument ใดๆ', 'weight': 0}, {'text': 'ฟังก์ชันที่รับค่า argument เป็นจำนวนมาก', 'weight': 1}, {'text': 'ฟังก์ชันที่ไม่คืนค่า', 'weight': 0}]",การใช้งานเบื้องต้นของ Decorator,Medium
14,การใช้งาน Decorator มีข้อดีอย่างไร?,"[{'text': 'เพิ่มความซับซ้อนของโค้ด', 'weight': 0}, {'text': 'ลดความสามารถในการแก้ไขโค้ด', 'weight': 0}, {'text': 'ช่วยให้โค้ดมีความกระชับและอ่านง่าย', 'weight': 1}, {'text': 'ทำให้การทำงานของโปรแกรมช้าลง', 'weight': 0}]",การใช้งานเบื้องต้นของ Decorator,Medium
15,การตกแต่งฟังก์ชันด้วย Decorator สามารถทำได้กับฟังก์ชันใดบ้าง?,"[{'text': 'ฟังก์ชันที่ไม่มีการคืนค่า', 'weight': 0}, {'text': 'ฟังก์ชันที่มีการคืนค่า', 'weight': 1}, {'text': 'ฟังก์ชันที่รับค่า argument เพียง 1 ตัว', 'weight': 0}, {'text': 'ฟังก์ชันที่ไม่รับค่า argument ใดๆ', 'weight': 0}]",การใช้งานเบื้องต้นของ Decorator,Hard
16,การตกแต่งฟังก์ชันด้วย Decorator สามารถทำได้กับคลาสใดบ้าง?,"[{'text': 'คลาสที่ไม่มี __init__ method', 'weight': 0}, {'text': 'คลาสที่มี __init__ method', 'weight': 1}, {'text': 'คลาสที่มีเฉพาะ static method', 'weight': 0}, {'text': 'คลาสที่ไม่มี method ใดๆ', 'weight': 0}]",การใช้งานเบื้องต้นของ Decorator,Hard
17,ฟังก์ชันใดใน Python ที่ถือว่าเป็น Decorator แบบ built-in?,"[{'text': 'classmethod()', 'weight': 0.5}, {'text': 'staticmethod()', 'weight': 0.5}, {'text': 'property()', 'weight': 0}, {'text': 'all of the above', 'weight': 1}]",การใช้งานเบื้องต้นของ Decorator,Hard
18,การตกแต่งฟังก์ชันด้วย Decorator สามารถทำได้กับฟังก์ชันใดบ้าง?,"[{'text': 'ฟังก์ชันที่ไม่มีการคืนค่า', 'weight': 1}, {'text': 'ฟังก์ชันที่มีการคืนค่า', 'weight': 1}, {'text': 'ฟังก์ชันที่รับค่า argument เพียง 1 ตัว', 'weight': 1}, {'text': 'ฟังก์ชันที่ไม่รับค่า argument ใดๆ', 'weight': 1}]",การใช้งานเบื้องต้นของ Decorator,Hard
19,การใช้งาน iterators ใน Python คืออะไร?,"[{'text': 'การวนลูปผ่านข้อมูลที่มีอยู่', 'weight': 1}, {'text': 'การสร้างฟังก์ชันที่สามารถเรียกใช้ได้หลายครั้ง', 'weight': 0}, {'text': 'การแปลงข้อมูลจากชนิดข้อมูลหนึ่งเป็นอีกชนิดข้อมูลหนึ่ง', 'weight': 0}, {'text': 'การตรวจสอบความถูกต้องของข้อมูล', 'weight': 0}]",Iterators,Easy
20,วิธีการสร้าง iterator ใน Python คืออะไร?,"[{'text': 'การใช้ฟังก์ชัน iter()', 'weight': 1}, {'text': 'การใช้ฟังก์ชัน next()', 'weight': 0}, {'text': 'การใช้ keyword yield', 'weight': 0}, {'text': 'การใช้ loop for', 'weight': 0}]",Iterators,Medium
21,ความแตกต่างระหว่าง iterators และ generators ใน Python คืออะไร?,"[{'text': 'generators สามารถสร้างข้อมูลได้ในขณะที่ iterators ไม่สามารถ', 'weight': 1}, {'text': 'iterators สามารถสร้างข้อมูลได้ในขณะที่ generators ไม่สามารถ', 'weight': 0}, {'text': 'generators และ iterators ทั้งคู่สามารถสร้างข้อมูลได้', 'weight': 0}, {'text': 'generators และ iterators ทั้งคู่ไม่สามารถสร้างข้อมูลได้', 'weight': 0}]",Iterators_and_Generators,Hard
22,วัตถุประสงค์ของการใช้ generators ใน Python คืออะไร?,"[{'text': 'เพื่อลดการใช้ทรัพยากรในการจัดเก็บข้อมูล', 'weight': 1}, {'text': 'เพื่อเพิ่มความเร็วในการประมวลผล', 'weight': 0}, {'text': 'เพื่อลดขนาดของโค้ด', 'weight': 0}, {'text': 'เพื่อเพิ่มความซับซ้อนของโค้ด', 'weight': 0}]",Generators,Medium
23,คำสั่งไหนใน Python ที่ใช้สำหรับการสร้าง generators?,"[{'text': 'yield', 'weight': 1}, {'text': 'return', 'weight': 0}, {'text': 'print', 'weight': 0}, {'text': 'break', 'weight': 0}]",Generators,Easy
24,ฟังก์ชันไหนใน Python ที่ใช้สำหรับการสร้าง iterators?,"[{'text': 'iter()', 'weight': 1}, {'text': 'next()', 'weight': 0}, {'text': 'len()', 'weight': 0}, {'text': 'type()', 'weight': 0}]",Iterators,Medium
25,วิธีการวนลูปผ่าน iterators ใน Python คืออะไร?,"[{'text': 'การใช้ loop for', 'weight': 1}, {'text': 'การใช้ฟังก์ชัน next()', 'weight': 0}, {'text': 'การใช้ฟังก์ชัน iter()', 'weight': 0}, {'text': 'การใช้ keyword yield', 'weight': 0}]",Iterators,Easy
26,ความสำคัญของการใช้ iterators และ generators ใน Python คืออะไร?,"[{'text': 'เพื่อการประหยัดทรัพยากรและเพิ่มความเร็วในการประมวลผล', 'weight': 1}, {'text': 'เพื่อเพิ่มความซับซ้อนของโค้ด', 'weight': 0}, {'text': 'เพื่อลดขนาดของโค้ด', 'weight': 0}, {'text': 'เพื่อเพิ่มความยืดหยุ่นของโค้ด', 'weight': 0}]",Iterators_and_Generators,Hard
27,การใช้ iterators และ generators มีข้อจำกัดอะไรบ้าง?,"[{'text': 'ไม่สามารถวนลูปผ่านข้อมูลได้หลายครั้ง', 'weight': 1}, {'text': 'สามารถวนลูปผ่านข้อมูลได้หลายครั้ง', 'weight': 0}, {'text': 'สามารถใช้งานได้กับข้อมูลชนิดใดๆ', 'weight': 0}, {'text': 'สามารถใช้งานได้กับข้อมูลชนิด String เท่านั้น', 'weight': 0}]",Iterators_and_Generators,Medium
28,วิธีการตรวจสอบว่า object เป็น iterators หรือไม่ใน Python คืออะไร?,"[{'text': 'การใช้ฟังก์ชัน hasattr() และตรวจสอบว่ามี method __iter__ หรือไม่', 'weight': 1}, {'text': 'การใช้ฟังก์ชัน isinstance() และตรวจสอบว่าเป็นชนิด iterator หรือไม่', 'weight': 0}, {'text': 'การใช้ฟังก์ชัน type() และตรวจสอบว่าเป็นชนิด iterator หรือไม่', 'weight': 0}, {'text': 'การใช้ฟังก์ชัน len() และตรวจสอบว่าเป็นชนิด iterator หรือไม่', 'weight': 0}]",Iterators,Hard
29,การสร้างคลาสใหม่ในภาษา Python จำเป็นต้องใช้คำสั่งใด?,"[{'text': 'class', 'weight': 1}, {'text': 'object', 'weight': 0}, {'text': 'instantiate', 'weight': 0}, {'text': 'inherit', 'weight': 0}]",Class Creation,Easy
30,เมื่อเราสร้าง object จากคลาสใดๆ ในภาษา Python จะเกิดอะไรขึ้น?,"[{'text': 'การสร้าง instance ของคลาสนั้นๆ', 'weight': 1}, {'text': 'การลบคลาสนั้นๆ', 'weight': 0}, {'text': 'การแก้ไขคลาสนั้นๆ', 'weight': 0}, {'text': 'ไม่มีอะไรเกิดขึ้น', 'weight': 0}]",Object Instantiation,Easy
31,วิธีการที่ใช้สืบทอดคุณสมบัติจากคลาสหนึ่งไปยังคลาสอื่นในภาษา Python คือ?,"[{'text': 'inheritance', 'weight': 1}, {'text': 'polymorphism', 'weight': 0}, {'text': 'encapsulation', 'weight': 0}, {'text': 'abstraction', 'weight': 0}]",Inheritance,Medium
32,การกำหนดค่าเริ่มต้นให้กับ attribute ของคลาสในภาษา Python ทำได้โดยการใช้คำสั่งใด?,"[{'text': '__init__', 'weight': 1}, {'text': '__str__', 'weight': 0}, {'text': '__repr__', 'weight': 0}, {'text': '__del__', 'weight': 0}]",Constructor,Medium
33,การเขียนโค้ดเพื่อให้ object สามารถแสดงผลลัพธ์เป็น string ได้ ใช้ method ใด?,"[{'text': '__str__', 'weight': 1}, {'text': '__repr__', 'weight': 0.5}, {'text': '__init__', 'weight': 0}, {'text': '__del__', 'weight': 0}]",String Representation,Medium
34,การสร้าง method ที่สามารถทำงานได้กับหลายประเภทของข้อมูลในภาษา Python เรียกว่าอะไร?,"[{'text': 'polymorphism', 'weight': 1}, {'text': 'inheritance', 'weight': 0}, {'text': 'encapsulation', 'weight': 0}, {'text': 'abstraction', 'weight': 0}]",Polymorphism,Hard
35,การสร้าง method ที่ไม่สามารถเข้าถึงได้จากภายนอกคลาสในภาษา Python ใช้วิธีการใด?,"[{'text': 'encapsulation', 'weight': 1}, {'text': 'inheritance', 'weight': 0}, {'text': 'polymorphism', 'weight': 0}, {'text': 'abstraction', 'weight': 0}]",Encapsulation,Hard
36,การสร้างคลาสที่ไม่มีการ implement method แต่สามารถสืบทอดไปยังคลาสอื่นได้ในภาษา Python เรียกว่าอะไร?,"[{'text': 'abstract class', 'weight': 1}, {'text': 'interface', 'weight': 0.5}, {'text': 'concrete class', 'weight': 0}, {'text': 'nested class', 'weight': 0}]",Abstract Class,Hard
37,การสร้าง attribute หรือ method ที่ไม่สามารถเปลี่ยนแปลงได้ในภาษา Python ใช้วิธีการใด?,"[{'text': 'immutable', 'weight': 1}, {'text': 'mutable', 'weight': 0}, {'text': 'public', 'weight': 0}, {'text': 'private', 'weight': 0}]",Immutability,Hard
38,การสร้าง method ที่สามารถทำงานได้กับ object หลายๆ ตัวในภาษา Python เรียกว่าอะไร?,"[{'text': 'static method', 'weight': 1}, {'text': 'class method', 'weight': 0.5}, {'text': 'instance method', 'weight': 0}, {'text': 'built-in method', 'weight': 0}]",Static Method,Hard
39,การนำเข้าโมดูลในภาษา Python สามารถทำได้หลายวิธี วิธีที่ถูกต้องคือ,"[{'text': 'ใช้คำสั่ง import', 'weight': 1}, {'text': 'ใช้คำสั่ง load', 'weight': 0}, {'text': 'ใช้คำสั่ง include', 'weight': 0}, {'text': 'ใช้คำสั่ง require', 'weight': 0}]",Modules and Imports,Easy
40,เมื่อเรียกใช้ฟังก์ชันจากโมดูล math ใน Python ควรใช้คำสั่งแบบใด?,"[{'text': 'import math', 'weight': 0.5}, {'text': 'from math import *', 'weight': 0.5}, {'text': 'load math', 'weight': 0}, {'text': 'include math', 'weight': 0}]",Modules and Imports,Medium
41,โมดูลที่มีอยู่ใน Python Standard Library คือ?,"[{'text': 'math', 'weight': 1}, {'text': 'custom_module', 'weight': 0}, {'text': 'external_module', 'weight': 0}, {'text': 'third_party_module', 'weight': 0}]",Modules and Imports,Easy
42,เมื่อต้องการนำเข้าเฉพาะฟังก์ชัน sin จากโมดูล math ควรใช้คำสั่งแบบใด?,"[{'text': 'from math import sin', 'weight': 1}, {'text': 'import math.sin', 'weight': 0}, {'text': 'from math import *', 'weight': 0.25}, {'text': 'import math', 'weight': 0}]",Modules and Imports,Medium
43,การสร้างโมดูลของตนเองใน Python สามารถทำได้โดยการสร้างไฟล์.py ที่มีชื่อ?,"[{'text': 'ตามที่เราต้องการ', 'weight': 1}, {'text': 'ต้องเป็นชื่อที่เฉพาะเจาะจง', 'weight': 0}, {'text': 'ไม่สามารถสร้างโมดูลของตนเองได้', 'weight': 0}, {'text': 'ต้องเป็นชื่อที่เริ่มต้นด้วย _', 'weight': 0}]",Modules and Imports,Medium
44,การใช้คำสั่ง from... import * จะทำให้เกิดผลกระทบอย่างไร?,"[{'text': 'อาจทำให้เกิดการชนชื่อฟังก์ชันหรือตัวแปร', 'weight': 1}, {'text': 'จะทำให้โปรแกรมทำงานเร็วขึ้น', 'weight': 0}, {'text': 'จะทำให้โปรแกรมทำงานช้าลง', 'weight': 0}, {'text': 'ไม่มีผลกระทบใดๆ', 'weight': 0}]",Modules and Imports,Hard
45,การนำเข้าโมดูลใน Python สามารถทำได้หลายวิธี วิธีที่ไม่ถูกต้องคือ,"[{'text': 'ใช้คำสั่ง load', 'weight': 1}, {'text': 'ใช้คำสั่ง import', 'weight': 0}, {'text': 'ใช้คำสั่ง include', 'weight': 1}, {'text': 'ใช้คำสั่ง require', 'weight': 1}]",Modules and Imports,Medium
46,โมดูลไหนบ้างที่มีอยู่ใน Python Standard Library?,"[{'text': 'math, random, time', 'weight': 1}, {'text': 'custom_module, external_module', 'weight': 0}, {'text': 'third_party_module, user_module', 'weight': 0}, {'text': 'all of the above', 'weight': 0}]",Modules and Imports,Hard
47,การนำเข้าโมดูลทั้งหมดใน Python Standard Library สามารถทำได้โดยใช้คำสั่ง?,"[{'text': 'ไม่สามารถทำได้', 'weight': 1}, {'text': 'import *', 'weight': 0}, {'text': 'from python import *', 'weight': 0}, {'text': 'import all', 'weight': 0}]",Modules and Imports,Medium
48,การใช้คำสั่ง try-except ในภาษา Python มีประโยชน์อย่างไร?,"[{'text': 'เพื่อควบคุมการทำงานของโปรแกรมให้ไม่เกิด Error', 'weight': 1}, {'text': 'เพื่อเพิ่มความเร็วในการทำงานของโปรแกรม', 'weight': 0}, {'text': 'เพื่อลดขนาดของโค้ด', 'weight': 0}, {'text': 'เพื่อสร้างฟังก์ชันใหม่', 'weight': 0}]",ErrorHandling,Easy
49,คำสั่งไหนที่ใช้สำหรับการจัดการ Error ในภาษา Python?,"[{'text': 'try-except', 'weight': 1}, {'text': 'for loop', 'weight': 0}, {'text': 'while loop', 'weight': 0}, {'text': 'if statement', 'weight': 0}]",ErrorHandling,Easy
50,ถ้าไม่มีการจัดการ Error ในโค้ด Python อาจจะเกิดอะไรขึ้น?,"[{'text': 'โปรแกรมอาจจะหยุดทำงานและแสดง Error Message', 'weight': 1}, {'text': 'โปรแกรมจะทำงานต่อไปโดยไม่แสดง Error', 'weight': 0}, {'text': 'โปรแกรมจะทำงานช้าลง', 'weight': 0}, {'text': 'โปรแกรมจะใช้หน่วยความจำมากขึ้น', 'weight': 0}]",ErrorHandling,Medium
51,คำสั่ง except ในภาษา Python ใช้สำหรับอะไร?,"[{'text': 'รับ Error ที่เกิดขึ้นและทำการประมวลผลต่อ', 'weight': 1}, {'text': 'สร้าง Error ใหม่', 'weight': 0}, {'text': 'ลบ Error ที่เกิดขึ้น', 'weight': 0}, {'text': 'แสดง Error Message', 'weight': 0}]",ErrorHandling,Medium
52,คำสั่ง else ใน block try-except ใช้สำหรับอะไร?,"[{'text': 'ประมวลผลโค้ดเมื่อไม่เกิด Error', 'weight': 1}, {'text': 'ประมวลผลโค้ดเมื่อเกิด Error', 'weight': 0}, {'text': 'หยุดการทำงานของโปรแกรม', 'weight': 0}, {'text': 'เรียกฟังก์ชันใหม่', 'weight': 0}]",ErrorHandling,Medium
53,คำสั่ง finally ใน block try-except ใช้สำหรับอะไร?,"[{'text': 'ประมวลผลโค้ดทุกครั้ง ไม่ว่าจะเกิด Error หรือไม่', 'weight': 1}, {'text': 'ประมวลผลโค้ดเฉพาะเมื่อเกิด Error', 'weight': 0}, {'text': 'ประมวลผลโค้ดเฉพาะเมื่อไม่เกิด Error', 'weight': 0}, {'text': 'หยุดการทำงานของโปรแกรม', 'weight': 0}]",ErrorHandling,Hard
54,การสร้าง custom exception ใน Python ทำได้โดยการสร้าง class ที่สืบทอดจากอะไร?,"[{'text': 'Exception', 'weight': 1}, {'text': 'Error', 'weight': 0}, {'text': 'CustomError', 'weight': 0}, {'text': 'MyException', 'weight': 0}]",ErrorHandling,Hard
55,การใช้คำสั่ง raise ในภาษา Python มีประโยชน์อย่างไร?,"[{'text': 'เพื่อสร้างและยกเลิก Error ใหม่', 'weight': 1}, {'text': 'เพื่อเพิ่มความเร็วในการทำงานของโปรแกรม', 'weight': 0}, {'text': 'เพื่อลดขนาดของโค้ด', 'weight': 0}, {'text': 'เพื่อสร้างฟังก์ชันใหม่', 'weight': 0}]",ErrorHandling,Medium
56,การเขียนโค้ด try-except-finally ในภาษา Python สามารถจัดการ Error ได้ทั้งหมดกี่ประเภท?,"[{'text': '3 ประเภท', 'weight': 1}, {'text': '2 ประเภท', 'weight': 0}, {'text': '1 ประเภท', 'weight': 0}, {'text': 'ไม่สามารถจัดการ Error ได้', 'weight': 0}]",ErrorHandling,Hard
57,การทำงานของคำสั่ง print() ในภาษา Python คืออะไร?,"[{'text': 'แสดงข้อความบนหน้าจอ', 'weight': 1}, {'text': 'รับข้อมูลจากผู้ใช้', 'weight': 0}, {'text': 'คำนวณผลรวมของค่า', 'weight': 0}, {'text': 'ตรวจสอบเงื่อนไขที่กำหนด', 'weight': 0}]",Input and Output,Easy
58,ฟังก์ชันใดในภาษา Python ที่ใช้รับข้อมูลจากผู้ใช้?,"[{'text': 'print()', 'weight': 0}, {'text': 'input()', 'weight': 1}, {'text': 'len()', 'weight': 0}, {'text': 'type()', 'weight': 0}]",Input and Output,Easy
59,ถ้าเราต้องการให้ผู้ใช้ป้อนข้อมูลเข้ามาทางคีย์บอร์ด เราควรใช้คำสั่งใด?,"[{'text': ""print('Message')"", 'weight': 0}, {'text': ""input('Message')"", 'weight': 1}, {'text': ""len('Message')"", 'weight': 0}, {'text': ""type('Message')"", 'weight': 0}]",Input and Output,Easy
60,คำสั่งไหนในภาษา Python ที่ใช้สำหรับการแสดงผลลัพธ์?,"[{'text': 'print()', 'weight': 1}, {'text': 'input()', 'weight': 0}, {'text': 'len()', 'weight': 0}, {'text': 'type()', 'weight': 0}]",Input and Output,Easy
61,"ถ้าเราต้องการแสดงข้อความ 'Hello, World!' บนหน้าจอ ควรใช้คำสั่งใด?","[{'text': ""print('Hello, World!')"", 'weight': 1}, {'text': ""input('Hello, World!')"", 'weight': 0}, {'text': ""len('Hello, World!')"", 'weight': 0}, {'text': ""type('Hello, World!')"", 'weight': 0}]",Input and Output,Easy
62,การทำงานของฟังก์ชัน input() ในภาษา Python คืออะไร?,"[{'text': 'แสดงข้อความบนหน้าจอ', 'weight': 0}, {'text': 'รับข้อมูลจากผู้ใช้', 'weight': 1}, {'text': 'คำนวณผลรวมของค่า', 'weight': 0}, {'text': 'ตรวจสอบเงื่อนไขที่กำหนด', 'weight': 0}]",Input and Output,Medium
63,เราสามารถใช้ฟังก์ชัน print() เพื่อแสดงผลลัพธ์ของการคำนวณได้หรือไม่?,"[{'text': 'ไม่สามารถ', 'weight': 0}, {'text': 'สามารถ', 'weight': 1}, {'text': 'ขึ้นอยู่กับเงื่อนไข', 'weight': 0}, {'text': 'ต้องใช้ฟังก์ชันอื่น', 'weight': 0}]",Input and Output,Medium
64,ถ้าเราต้องการรับข้อมูลที่เป็นตัวเลขจากผู้ใช้ เราควรทำอย่างไร?,"[{'text': 'ใช้ฟังก์ชัน input() และไม่ต้องทำอะไรเพิ่มเติม', 'weight': 0}, {'text': 'ใช้ฟังก์ชัน input() และแปลงข้อมูลเป็นตัวเลขด้วย int() หรือ float()', 'weight': 1}, {'text': 'ใช้ฟังก์ชัน print() และไม่ต้องทำอะไรเพิ่มเติม', 'weight': 0}, {'text': 'ใช้ฟังก์ชัน len() และไม่ต้องทำอะไรเพิ่มเติม', 'weight': 0}]",Input and Output,Hard
65,ถ้าเราต้องการแสดงผลลัพธ์ที่มีการจัดรูปแบบ เช่น การเว้นวรรคหรือขึ้นบรรทัดใหม่ เราควรใช้คำสั่งใด?,"[{'text': ""print('Message')"", 'weight': 0}, {'text': ""print('Message', end=' ')"", 'weight': 0.5}, {'text': ""print('Message', sep=' ', end='\n\n')"", 'weight': 1}, {'text': ""print('Message', file=sys.stdout)"", 'weight': 0}]",Input and Output,Hard
66,การทำงานของคำสั่ง input() เมื่อมีผู้ใช้ป้อนข้อมูลเข้ามา คืออะไร?,"[{'text': 'แสดงข้อความที่ผู้ใช้ป้อน', 'weight': 0}, {'text': 'รับข้อมูลที่ผู้ใช้ป้อนและเก็บไว้ในตัวแปร', 'weight': 1}, {'text': 'คำนวณผลรวมของค่าที่ผู้ใช้ป้อน', 'weight': 0}, {'text': 'ตรวจสอบเงื่อนไขที่กำหนดจากข้อมูลที่ผู้ใช้ป้อน', 'weight': 0}]",Input and Output,Hard
67,เซตในภาษา Python คืออะไร?,"[{'text': 'ชนิดของข้อมูลที่สามารถเก็บค่าได้หลายๆ ค่า', 'weight': 0}, {'text': 'ชนิดของข้อมูลที่ไม่สามารถมีค่าซ้ำกัน', 'weight': 1}, {'text': 'ชนิดของข้อมูลที่สามารถเก็บค่าเป็นลำดับ', 'weight': 0}, {'text': 'ฟังก์ชันที่ใช้ในการประมวลผลข้อมูล', 'weight': 0}]",Basic Set,Easy
68,การสร้างเซตในภาษา Python สามารถทำได้โดยใช้สัญลักษณ์อะไร?,"[{'text': '()', 'weight': 0}, {'text': '[]', 'weight': 0}, {'text': '{}', 'weight': 1}, {'text': '<>', 'weight': 0}]",Set Creation,Easy
69,เซตในภาษา Python มีลักษณะสำคัญอย่างไร?,"[{'text': 'สามารถเก็บค่าเป็นลำดับ', 'weight': 0}, {'text': 'ไม่สามารถมีค่าซ้ำกัน', 'weight': 1}, {'text': 'สามารถเปลี่ยนแปลงค่าได้', 'weight': 0}, {'text': 'สามารถเก็บค่าเป็นแบบอ้างอิง', 'weight': 0}]",Set Properties,Medium
70,"ถ้าเรามีเซต A = {1, 2, 3} และ B = {3, 4, 5} ผลลัพธ์ของการรวมเซต A และ B จะเป็นอย่างไร?","[{'text': '{1, 2, 3, 4, 5}', 'weight': 1}, {'text': '{3}', 'weight': 0}, {'text': '{1, 2, 4, 5}', 'weight': 0}, {'text': '{3, 6, 8}', 'weight': 0}]",Set Operations,Medium
71,"ถ้าเรามีเซต A = {1, 2, 3} และ B = {3, 4, 5} ผลลัพธ์ของการหาความแตกต่างของเซต A และ B จะเป็นอย่างไร?","[{'text': '{1, 2, 4, 5}', 'weight': 1}, {'text': '{3}', 'weight': 0}, {'text': '{1, 2, 3, 4, 5}', 'weight': 0}, {'text': '{3, 6, 8}', 'weight': 0}]",Set Operations,Medium
72,"ถ้าเรามีเซต A = {1, 2, 3} และ B = {3, 4, 5} ผลลัพธ์ของการหาข้อมูลที่ซ้ำกันของเซต A และ B จะเป็นอย่างไร?","[{'text': '{3}', 'weight': 1}, {'text': '{1, 2, 3, 4, 5}', 'weight': 0}, {'text': '{1, 2, 4, 5}', 'weight': 0}, {'text': '{3, 6, 8}', 'weight': 0}]",Set Operations,Medium
73,วิธีการเพิ่มข้อมูลเข้าไปในเซตในภาษา Python คืออะไร?,"[{'text': 'ใช้ฟังก์ชัน append', 'weight': 0}, {'text': 'ใช้ฟังก์ชัน add', 'weight': 1}, {'text': 'ใช้ฟังก์ชัน insert', 'weight': 0}, {'text': 'ใช้ฟังก์ชัน extend', 'weight': 0}]",Set Operations,Medium
74,วิธีการลบข้อมูลออกจากเซตในภาษา Python คืออะไร?,"[{'text': 'ใช้ฟังก์ชัน remove', 'weight': 1}, {'text': 'ใช้ฟังก์ชัน delete', 'weight': 0}, {'text': 'ใช้ฟังก์ชัน discard', 'weight': 0}, {'text': 'ใช้ฟังก์ชัน pop', 'weight': 0}]",Set Operations,Medium
75,เซตในภาษา Python สามารถทำอะไรบ้าง?,"[{'text': 'สามารถเก็บค่าเป็นลำดับและสามารถเปลี่ยนแปลงค่าได้', 'weight': 0}, {'text': 'สามารถหาความแตกต่างและความเหมือนกันของเซต', 'weight': 1}, {'text': 'สามารถแปลงเป็นชนิดข้อมูลอื่นได้', 'weight': 0}, {'text': 'สามารถทำการคำนวณทางคณิตศาสตร์ได้', 'weight': 0}]",Set Applications,Hard
76,เซตในภาษา Python มีข้อจำกัดอะไรบ้าง?,"[{'text': 'ไม่สามารถเก็บค่าเป็นลำดับ', 'weight': 1}, {'text': 'สามารถเปลี่ยนแปลงค่าได้', 'weight': 0}, {'text': 'ไม่สามารถมีค่าซ้ำกัน', 'weight': 1}, {'text': 'สามารถทำการคำนวณทางคณิตศาสตร์ได้', 'weight': 0}]",Set Limitations,Hard
77,การสร้าง Dictionary ในภาษา Python สามารถทำได้โดยใช้คำสั่งใด?,"[{'text': 'dict()', 'weight': 1}, {'text': 'Dictionary()', 'weight': 0}, {'text': 'dictionary()', 'weight': 0}, {'text': 'create_dict()', 'weight': 0}]",Dictionary,Easy
78,วิธีการเข้าถึงค่าใน Dictionary คืออะไร?,"[{'text': 'ใช้คีย์', 'weight': 1}, {'text': 'ใช้ค่า', 'weight': 0}, {'text': 'ใช้ทั้งคีย์และค่า', 'weight': 0}, {'text': 'ไม่สามารถเข้าถึงได้', 'weight': 0}]",Dictionary,Easy
79,เมื่อใช้วิธีการเข้าถึงค่าใน Dictionary ผ่านคีย์ที่ไม่มีอยู่ จะเกิดอะไรขึ้น?,"[{'text': 'จะแสดงข้อความ Error', 'weight': 1}, {'text': 'จะแสดงค่า None', 'weight': 0}, {'text': 'จะแสดงค่า Default', 'weight': 0}, {'text': 'ไม่มีอะไรเกิดขึ้น', 'weight': 0}]",Dictionary,Medium
80,การเพิ่มคู่ค่า-คีย์ใหม่ใน Dictionary สามารถทำได้โดยใช้วิธีการใด?,"[{'text': ""การใช้สัญลักษณ์ ['คีย์'] = 'ค่า'"", 'weight': 1}, {'text': ""การใช้คำสั่ง dict.add('คีย์', 'ค่า')"", 'weight': 0}, {'text': ""การใช้คำสั่ง dict.append('คีย์', 'ค่า')"", 'weight': 0}, {'text': 'ไม่สามารถเพิ่มคู่ค่า-คีย์ใหม่ได้', 'weight': 0}]",Dictionary,Medium
81,การลบคู่ค่า-คีย์ใน Dictionary สามารถทำได้โดยใช้วิธีการใด?,"[{'text': ""การใช้คำสั่ง del dict['คีย์']"", 'weight': 1}, {'text': ""การใช้คำสั่ง dict.remove('คีย์')"", 'weight': 0}, {'text': ""การใช้คำสั่ง dict.delete('คีย์')"", 'weight': 0}, {'text': 'ไม่สามารถลบคู่ค่า-คีย์ได้', 'weight': 0}]",Dictionary,Medium
82,วิธีการวน loop ผ่าน Dictionary ทั้งหมดคืออะไร?,"[{'text': 'การใช้คำสั่ง for key in dict:', 'weight': 1}, {'text': 'การใช้คำสั่ง for value in dict.values():', 'weight': 0.5}, {'text': 'การใช้คำสั่ง for item in dict.items():', 'weight': 0.5}, {'text': 'ไม่สามารถวน loop ผ่าน Dictionary ได้', 'weight': 0}]",Dictionary,Hard
83,วิธีการตรวจสอบว่าคีย์มีอยู่ใน Dictionary หรือไม่คืออะไร?,"[{'text': ""การใช้คำสั่ง 'คีย์' in dict"", 'weight': 1}, {'text': ""การใช้คำสั่ง dict.has_key('คีย์')"", 'weight': 0}, {'text': ""การใช้คำสั่ง dict.contains('คีย์')"", 'weight': 0}, {'text': 'ไม่สามารถตรวจสอบได้', 'weight': 0}]",Dictionary,Medium
84,การคัดลอก Dictionary สามารถทำได้โดยใช้วิธีการใด?,"[{'text': 'การใช้คำสั่ง dict_new = dict.copy()', 'weight': 1}, {'text': 'การใช้คำสั่ง dict_new = dict.clone()', 'weight': 0}, {'text': 'การใช้คำสั่ง dict_new = dict dup()', 'weight': 0}, {'text': 'ไม่สามารถคัดลอก Dictionary ได้', 'weight': 0}]",Dictionary,Medium
85,การค้นหาค่าที่มากที่สุดหรือน้อยที่สุดใน Dictionary สามารถทำได้โดยใช้วิธีการใด?,"[{'text': 'การใช้คำสั่ง max(dict.values()) และ min(dict.values())', 'weight': 1}, {'text': 'การใช้คำสั่ง dict.max() และ dict.min()', 'weight': 0}, {'text': 'การใช้คำสั่ง dict.find_max() และ dict.find_min()', 'weight': 0}, {'text': 'ไม่สามารถค้นหาค่าที่มากที่สุดหรือน้อยที่สุดได้', 'weight': 0}]",Dictionary,Hard
86,การเรียงลำดับ Dictionary สามารถทำได้โดยใช้วิธีการใด?,"[{'text': 'การใช้คำสั่ง sorted(dict.items())', 'weight': 1}, {'text': 'การใช้คำสั่ง dict.sort()', 'weight': 0}, {'text': 'การใช้คำสั่ง dict.order()', 'weight': 0}, {'text': 'ไม่สามารถเรียงลำดับ Dictionary ได้', 'weight': 0}]",Dictionary,Hard
87,การสร้าง tuple ในภาษา Python สามารถทำได้โดยการใช้สัญลักษณ์ใด,"[{'text': '()', 'weight': 1}, {'text': '[]', 'weight': 0}, {'text': '{}', 'weight': 0}, {'text': '<>', 'weight': 0}]",Tuple,Easy
88,คำสั่งใดที่ใช้ในการเข้าถึงสมาชิกของ tuple,"[{'text': 'print()', 'weight': 0}, {'text': 'len()', 'weight': 0}, {'text': 'tuple[index]', 'weight': 1}, {'text': 'tuple.key', 'weight': 0}]",Tuple,Medium
89,คุณสามารถแก้ไขสมาชิกของ tuple ได้หรือไม่,"[{'text': 'ไม่สามารถแก้ไข', 'weight': 1}, {'text': 'สามารถแก้ไข', 'weight': 0}, {'text': 'ขึ้นอยู่กับขนาดของ tuple', 'weight': 0}, {'text': 'ขึ้นอยู่กับค่าของสมาชิก', 'weight': 0}]",Tuple,Medium
90,คำสั่งใดที่ใช้ในการรวม tuple หลายๆ อัน,"[{'text': 'tuple1 + tuple2', 'weight': 1}, {'text': 'tuple1 - tuple2', 'weight': 0}, {'text': 'tuple1 * tuple2', 'weight': 0}, {'text': 'tuple1 / tuple2', 'weight': 0}]",Tuple,Medium
91,"การสร้าง tuple ที่มีสมาชิกเดียว จำเป็นต้องมีคอมม่า (,) ท้ายสุดหรือไม่","[{'text': 'จำเป็น', 'weight': 1}, {'text': 'ไม่จำเป็น', 'weight': 0}, {'text': 'ขึ้นอยู่กับขนาดของ tuple', 'weight': 0}, {'text': 'ขึ้นอยู่กับค่าของสมาชิก', 'weight': 0}]",Tuple,Medium
92,คำสั่งใดที่ใช้ในการตรวจสอบว่ามีสมาชิกใดๆ ใน tuple หรือไม่,"[{'text': 'in', 'weight': 1}, {'text': 'not in', 'weight': 0.5}, {'text': 'is', 'weight': 0}, {'text': 'is not', 'weight': 0}]",Tuple,Hard
93,คำสั่งใดที่ใช้ในการสลับตำแหน่งของสมาชิกใน tuple,"[{'text': 'reverse()', 'weight': 1}, {'text': 'sorted()', 'weight': 0}, {'text': 'shuffle()', 'weight': 0}, {'text': 'swap()', 'weight': 0}]",Tuple,Hard
94,คำสั่งใดที่ใช้ในการแปลง tuple เป็น list,"[{'text': 'list()', 'weight': 1}, {'text': 'tuple()', 'weight': 0}, {'text': 'str()', 'weight': 0}, {'text': 'int()', 'weight': 0}]",Tuple,Medium
95,คำสั่งใดที่ใช้ในการหาค่าสมาชิกที่ซ้ำกันมากที่สุดใน tuple,"[{'text': 'max()', 'weight': 0}, {'text': 'min()', 'weight': 0}, {'text': 'count()', 'weight': 0.5}, {'text': 'Counter()', 'weight': 1}]",Tuple,Hard
96,คำสั่งใดที่ใช้ในการหาค่าสมาชิกที่มีค่าน้อยที่สุดใน tuple,"[{'text': 'min()', 'weight': 1}, {'text': 'max()', 'weight': 0}, {'text': 'sum()', 'weight': 0}, {'text': 'len()', 'weight': 0}]",Tuple,Medium
97,การสร้าง list ในภาษา Python สามารถทำได้โดยการใช้สัญลักษณ์อะไร,"[{'text': '()', 'weight': 0}, {'text': '[]', 'weight': 1}, {'text': '{}', 'weight': 0}, {'text': '<>', 'weight': 0}]",Basic of List,Easy
98,คำสั่งไหนที่ใช้เพื่อเพิ่มสมาชิกเข้าไปใน list,"[{'text': 'append', 'weight': 1}, {'text': 'insert', 'weight': 0.5}, {'text': 'extend', 'weight': 0.25}, {'text': 'remove', 'weight': 0}]",List Methods,Easy
99,วิธีการเข้าถึงสมาชิกของ list คือ,"[{'text': 'ด้วยการใช้ index ที่เป็นเลข', 'weight': 1}, {'text': 'ด้วยการใช้ key ที่เป็นตัวอักษร', 'weight': 0}, {'text': 'ด้วยการใช้ function', 'weight': 0}, {'text': 'ด้วยการใช้ loop', 'weight': 0}]",Basic of List,Easy
100,list ใน Python เป็นแบบ,"[{'text': 'mutable', 'weight': 1}, {'text': 'immutable', 'weight': 0}, {'text': 'tuple', 'weight': 0}, {'text': 'set', 'weight': 0}]",Basic of List,Easy
101,เมื่อเรียกใช้ฟังก์ชัน sort() กับ list จะเกิดอะไรขึ้น,"[{'text': 'จะเรียงลำดับสมาชิกใน list จากน้อยไปมาก', 'weight': 1}, {'text': 'จะเรียงลำดับสมาชิกใน list จากมากไปน้อย', 'weight': 0.5}, {'text': 'จะไม่มีผลกระทบใดๆต่อ list', 'weight': 0}, {'text': 'จะทำให้ list ว่าง', 'weight': 0}]",List Methods,Medium
102,การลบสมาชิกออกจาก list สามารถทำได้โดยการใช้คำสั่ง,"[{'text': 'remove', 'weight': 1}, {'text': 'pop', 'weight': 0.5}, {'text': 'del', 'weight': 0.25}, {'text': 'clear', 'weight': 0}]",List Methods,Medium
103,การสลับตำแหน่งสมาชิกใน list สามารถทำได้โดยการใช้คำสั่ง,"[{'text': 'reverse', 'weight': 1}, {'text': 'sort', 'weight': 0.5}, {'text': 'shuffle', 'weight': 0.25}, {'text': 'swap', 'weight': 0}]",List Methods,Medium
104,การคัดลอก list สามารถทำได้โดยการใช้คำสั่ง,"[{'text': 'copy', 'weight': 1}, {'text': 'clone', 'weight': 0.5}, {'text': 'duplicate', 'weight': 0.25}, {'text': 'replicate', 'weight': 0}]",List Methods,Medium
105,การรวม list หลายๆอันเข้าด้วยกันสามารถทำได้โดยการใช้คำสั่ง,"[{'text': 'extend', 'weight': 1}, {'text': 'append', 'weight': 0.5}, {'text': 'join', 'weight': 0.25}, {'text': 'merge', 'weight': 0}]",List Methods,Hard
106,การตรวจสอบว่าสมาชิกใดๆอยู่ใน list หรือไม่สามารถทำได้โดยการใช้คำสั่ง,"[{'text': 'in', 'weight': 1}, {'text': 'exists', 'weight': 0.5}, {'text': 'find', 'weight': 0.25}, {'text': 'search', 'weight': 0}]",List Methods,Hard
107,ฟังก์ชันในภาษา Python สามารถรับค่าอะไรได้บ้าง?,"[{'text': 'ค่าเดียว', 'weight': 0}, {'text': 'ค่าหลายๆ ค่า', 'weight': 1}, {'text': 'ไม่สามารถรับค่าใดๆ', 'weight': 0}, {'text': 'ขึ้นอยู่กับโปรแกรมนั้นๆ', 'weight': 0}]",Function Arguments,Easy
108,คำสั่งไหนใช้สำหรับการเรียกฟังก์ชันใน Python?,"[{'text': 'call()', 'weight': 0}, {'text': 'run()', 'weight': 0}, {'text': 'ชื่อฟังก์ชันตามด้วยวงเล็บ', 'weight': 1}, {'text': 'execute()', 'weight': 0}]",Calling a Function,Easy
109,การสร้างฟังก์ชันใน Python จะต้องมีคำสั่งใด?,"[{'text': 'print()', 'weight': 0}, {'text': 'def', 'weight': 1}, {'text': 'function', 'weight': 0}, {'text': 'create()', 'weight': 0}]",Defining a Function,Medium
110,ฟังก์ชันใน Python สามารถคืนค่าได้หรือไม่?,"[{'text': 'ไม่สามารถคืนค่า', 'weight': 0}, {'text': 'สามารถคืนค่าได้', 'weight': 1}, {'text': 'ขึ้นอยู่กับโปรแกรมนั้นๆ', 'weight': 0}, {'text': 'ไม่แน่ใจ', 'weight': 0}]",Function Return,Medium
111,ฟังก์ชันใน Python สามารถรับค่า default ได้หรือไม่?,"[{'text': 'ไม่สามารถรับค่า default', 'weight': 0}, {'text': 'สามารถรับค่า default ได้', 'weight': 1}, {'text': 'ขึ้นอยู่กับโปรแกรมนั้นๆ', 'weight': 0}, {'text': 'ไม่แน่ใจ', 'weight': 0}]",Function Default Arguments,Medium
112,ฟังก์ชันใน Python สามารถรับค่า keyword argument ได้หรือไม่?,"[{'text': 'ไม่สามารถรับค่า keyword argument', 'weight': 0}, {'text': 'สามารถรับค่า keyword argument ได้', 'weight': 1}, {'text': 'ขึ้นอยู่กับโปรแกรมนั้นๆ', 'weight': 0}, {'text': 'ไม่แน่ใจ', 'weight': 0}]",Function Keyword Arguments,Hard
113,ฟังก์ชันใน Python สามารถรับค่า variable-length argument ได้หรือไม่?,"[{'text': 'ไม่สามารถรับค่า variable-length argument', 'weight': 0}, {'text': 'สามารถรับค่า variable-length argument ได้', 'weight': 1}, {'text': 'ขึ้นอยู่กับโปรแกรมนั้นๆ', 'weight': 0}, {'text': 'ไม่แน่ใจ', 'weight': 0}]",Function Variable-Length Arguments,Hard
114,ฟังก์ชันใน Python สามารถทำอะไรได้บ้าง?,"[{'text': 'เพียงแค่แสดงผล', 'weight': 0}, {'text': 'สามารถประมวลผลและคืนค่า', 'weight': 1}, {'text': 'สามารถทำได้เฉพาะในบางกรณี', 'weight': 0}, {'text': 'ไม่สามารถทำอะไร', 'weight': 0}]",Function Purpose,Easy
115,ฟังก์ชันใน Python สามารถถูกเรียกซ้ำได้หรือไม่?,"[{'text': 'ไม่สามารถถูกเรียกซ้ำ', 'weight': 0}, {'text': 'สามารถถูกเรียกซ้ำได้', 'weight': 1}, {'text': 'ขึ้นอยู่กับโปรแกรมนั้นๆ', 'weight': 0}, {'text': 'ไม่แน่ใจ', 'weight': 0}]",Function Reusability,Medium
116,ฟังก์ชันใน Python สามารถรับค่า argument หลายๆ ค่าได้หรือไม่?,"[{'text': 'ไม่สามารถรับค่า argument หลายๆ ค่า', 'weight': 0}, {'text': 'สามารถรับค่า argument หลายๆ ค่าได้', 'weight': 1}, {'text': 'ขึ้นอยู่กับโปรแกรมนั้นๆ', 'weight': 0}, {'text': 'ไม่แน่ใจ', 'weight': 0}]",Function Multiple Arguments,Medium
117,คำสั่งวน loop ที่ใช้ในการวนซ้ำๆ กับข้อมูลที่อยู่ใน list คือ?,"[{'text': 'for', 'weight': 1}, {'text': 'while', 'weight': 0}, {'text': 'if', 'weight': 0}, {'text': 'else', 'weight': 0}]",Loops,Easy
118,การทำงานของ loop while คือ?,"[{'text': 'วนซ้ำๆ จนกว่าเงื่อนไขจะเป็น false', 'weight': 1}, {'text': 'วนซ้ำๆ จนกว่าเงื่อนไขจะเป็น true', 'weight': 0}, {'text': 'วนซ้ำๆ เพียงครั้งเดียว', 'weight': 0}, {'text': 'วนซ้ำๆ ไม่มีเงื่อนไข', 'weight': 0}]",Loops,Medium
119,ถ้าเราต้องการให้ loop for วนซ้ำๆ กับข้อมูลใน list เราสามารถทำได้โดยการใช้คำสั่ง?,"[{'text': 'for item in list:', 'weight': 1}, {'text': 'while item in list:', 'weight': 0}, {'text': 'if item in list:', 'weight': 0}, {'text': 'else item in list:', 'weight': 0}]",Loops,Easy
120,คำสั่ง break ใน loop มีหน้าที่อะไร?,"[{'text': 'หยุดการวน loop ทันที', 'weight': 1}, {'text': 'วน loop ต่อไป', 'weight': 0}, {'text': 'วน loop กลับไปยังจุดเริ่มต้น', 'weight': 0}, {'text': 'ไม่มีผลต่อการวน loop', 'weight': 0}]",Loops,Medium
121,คำสั่ง continue ใน loop มีหน้าที่อะไร?,"[{'text': 'วน loop กลับไปยังจุดเริ่มต้น', 'weight': 1}, {'text': 'หยุดการวน loop ทันที', 'weight': 0}, {'text': 'วน loop ต่อไป', 'weight': 0}, {'text': 'ไม่มีผลต่อการวน loop', 'weight': 0}]",Loops,Medium
122,ในการวน loop ผ่าน list เราสามารถใช้คำสั่ง range() เพื่อกำหนดจำนวนครั้งที่ต้องการวนได้หรือไม่?,"[{'text': 'ใช่', 'weight': 1}, {'text': 'ไม่ใช่', 'weight': 0}]",Loops,Easy
123,ถ้าเราใช้ loop for และ loop while ร่วมกัน จะเกิดอะไรขึ้น?,"[{'text': 'การวน loop จะไม่ทำงาน', 'weight': 0.5}, {'text': 'การวน loop จะทำงานสลับกัน', 'weight': 0.5}, {'text': 'การวน loop จะทำงานพร้อมกัน', 'weight': 0}, {'text': 'ไม่มีผลต่อการวน loop', 'weight': 0}]",Loops,Hard
124,ในการวน loop ผ่าน dictionary เราสามารถใช้คำสั่ง items() เพื่อวนผ่านคู่ key-value ได้หรือไม่?,"[{'text': 'ใช่', 'weight': 1}, {'text': 'ไม่ใช่', 'weight': 0}]",Loops,Medium
125,คำสั่ง pass ใน loop มีหน้าที่อะไร?,"[{'text': 'ไม่มีการกระทำใดๆ', 'weight': 1}, {'text': 'หยุดการวน loop ทันที', 'weight': 0}, {'text': 'วน loop กลับไปยังจุดเริ่มต้น', 'weight': 0}, {'text': 'วน loop ต่อไป', 'weight': 0}]",Loops,Medium
126,การใช้คำสั่ง if ในภาษา Python ใช้สำหรับอะไร?,"[{'text': 'การวนลูป', 'weight': 0}, {'text': 'การตรวจสอบเงื่อนไข', 'weight': 1}, {'text': 'การรับข้อมูลจากผู้ใช้', 'weight': 0}, {'text': 'การแสดงผล', 'weight': 0}]",Control Flow,Easy
127,คำสั่ง elif ในภาษา Python ใช้สำหรับอะไร?,"[{'text': 'การตรวจสอบเงื่อนไขหลัก', 'weight': 0}, {'text': 'การตรวจสอบเงื่อนไขเพิ่มเติม', 'weight': 1}, {'text': 'การวนลูป', 'weight': 0}, {'text': 'การแสดงผล', 'weight': 0}]",Control Flow,Medium
128,คำสั่ง else ในภาษา Python ใช้สำหรับอะไร?,"[{'text': 'การตรวจสอบเงื่อนไขหลัก', 'weight': 0}, {'text': 'การทำงานเมื่อเงื่อนไขไม่ตรง', 'weight': 1}, {'text': 'การวนลูป', 'weight': 0}, {'text': 'การแสดงผล', 'weight': 0}]",Control Flow,Medium
129,การใช้คำสั่ง for ในภาษา Python ใช้สำหรับอะไร?,"[{'text': 'การตรวจสอบเงื่อนไข', 'weight': 0}, {'text': 'การวนลูป', 'weight': 1}, {'text': 'การรับข้อมูลจากผู้ใช้', 'weight': 0}, {'text': 'การแสดงผล', 'weight': 0}]",Control Flow,Easy
130,การใช้คำสั่ง while ในภาษา Python ใช้สำหรับอะไร?,"[{'text': 'การตรวจสอบเงื่อนไข', 'weight': 0}, {'text': 'การวนลูป', 'weight': 1}, {'text': 'การรับข้อมูลจากผู้ใช้', 'weight': 0}, {'text': 'การแสดงผล', 'weight': 0}]",Control Flow,Medium
131,การใช้คำสั่ง break ในภาษา Python ใช้สำหรับอะไร?,"[{'text': 'การวนลูป', 'weight': 0}, {'text': 'การออกจากลูป', 'weight': 1}, {'text': 'การตรวจสอบเงื่อนไข', 'weight': 0}, {'text': 'การแสดงผล', 'weight': 0}]",Control Flow,Medium
132,การใช้คำสั่ง continue ในภาษา Python ใช้สำหรับอะไร?,"[{'text': 'การวนลูป', 'weight': 0}, {'text': 'การข้ามไปยังรอบถัดไป', 'weight': 1}, {'text': 'การตรวจสอบเงื่อนไข', 'weight': 0}, {'text': 'การแสดงผล', 'weight': 0}]",Control Flow,Medium
133,การใช้คำสั่ง pass ในภาษา Python ใช้สำหรับอะไร?,"[{'text': 'การตรวจสอบเงื่อนไข', 'weight': 0}, {'text': 'การวนลูป', 'weight': 0}, {'text': 'การไม่ทำอะไร', 'weight': 1}, {'text': 'การแสดงผล', 'weight': 0}]",Control Flow,Hard
134,การใช้คำสั่ง try-except-finally ในภาษา Python ใช้สำหรับอะไร?,"[{'text': 'การตรวจสอบเงื่อนไข', 'weight': 0}, {'text': 'การวนลูป', 'weight': 0}, {'text': 'การจัดการข้อผิดพลาด', 'weight': 1}, {'text': 'การแสดงผล', 'weight': 0}]",Control Flow,Hard
135,การกำหนดค่าให้กับตัวแปรในภาษา Python สามารถทำได้โดยการใช้สัญลักษณ์อะไร?,"[{'text': '=', 'weight': 1}, {'text': ',', 'weight': 0}, {'text': ';', 'weight': 0}, {'text': ':', 'weight': 0}]",Variables_and_DataTypes,Easy
136,ตัวอย่างของตัวแปรในภาษา Python คืออะไร?,"[{'text': ""name = 'John'"", 'weight': 1}, {'text': 'age 30', 'weight': 0}, {'text': 'city; Bangkok', 'weight': 0}, {'text': 'height : 180', 'weight': 0}]",Variables_and_DataTypes,Easy
137,"ในภาษา Python, ตัวแปรที่มีค่าเป็นจำนวนเต็มจะถูกจัดอยู่ในประเภทข้อมูลอะไร?","[{'text': 'string', 'weight': 0}, {'text': 'float', 'weight': 0}, {'text': 'int', 'weight': 1}, {'text': 'bool', 'weight': 0}]",Variables_and_DataTypes,Medium
138,ตัวอย่างของค่าที่เป็นประเภทข้อมูล string ในภาษา Python คืออะไร?,"[{'text': '123', 'weight': 0}, {'text': ""'Hello, World!'"", 'weight': 1}, {'text': 'True', 'weight': 0}, {'text': '3.14', 'weight': 0}]",Variables_and_DataTypes,Easy
139,"ในการทำงานกับข้อมูลประเภท list ในภาษา Python, เราสามารถใช้วิธีการไหนในการเข้าถึงสมาชิกใน list?","[{'text': 'ด้วยการใช้สัญลักษณ์.', 'weight': 0}, {'text': 'ด้วยการใช้สัญลักษณ์ []', 'weight': 1}, {'text': 'ด้วยการใช้สัญลักษณ์ {}', 'weight': 0}, {'text': 'ด้วยการใช้สัญลักษณ์ {}', 'weight': 0}]",Variables_and_DataTypes,Medium
140,การแปลงข้อมูลจากประเภท int เป็นประเภท float ในภาษา Python สามารถทำได้โดยใช้ฟังก์ชันอะไร?,"[{'text': 'str()', 'weight': 0}, {'text': 'int()', 'weight': 0}, {'text': 'float()', 'weight': 1}, {'text': 'bool()', 'weight': 0}]",Variables_and_DataTypes,Medium
141,"ในภาษา Python, การตรวจสอบว่าตัวแปรมีค่าเป็น None หรือไม่สามารถทำได้โดยใช้คำสั่งอะไร?","[{'text': 'is not None', 'weight': 1}, {'text': '== None', 'weight': 0.5}, {'text': '= None', 'weight': 0}, {'text': '!= None', 'weight': 0.5}]",Variables_and_DataTypes,Medium
142,ตัวอย่างของค่าที่เป็นประเภทข้อมูล bool ในภาษา Python คืออะไร?,"[{'text': '123', 'weight': 0}, {'text': ""'Hello, World!'"", 'weight': 0}, {'text': 'True', 'weight': 1}, {'text': '3.14', 'weight': 0}]",Variables_and_DataTypes,Easy
143,"ในภาษา Python, การกำหนดค่าเริ่มต้นให้กับตัวแปรสามารถทำได้โดยการใช้วิธีการไหน?","[{'text': 'การกำหนดค่าในทันที', 'weight': 1}, {'text': 'การใช้คำสั่ง input()', 'weight': 0}, {'text': 'การใช้คำสั่ง print()', 'weight': 0}, {'text': 'การใช้คำสั่ง len()', 'weight': 0}]",Variables_and_DataTypes,Medium
