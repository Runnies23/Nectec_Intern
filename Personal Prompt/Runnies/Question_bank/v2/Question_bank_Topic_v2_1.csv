,Question,Choice,Topic,Level
0,ตัวแก้ไข (Decorator) ในภาษา Python ใช้สำหรับอะไร?,"[{'text': 'เพิ่มฟังก์ชันให้กับฟังก์ชันอื่น', 'weight': 1}, {'text': 'ลดฟังก์ชันออกจากฟังก์ชันอื่น', 'weight': 0}, {'text': 'สร้างคลาสใหม่', 'weight': 0}, {'text': 'ลบฟังก์ชันทิ้ง', 'weight': 0}]",Decorators,Easy
1,วิธีการเขียนตัวแก้ไข (Decorator) ใน Python คือ?,"[{'text': '@my_decorator', 'weight': 1}, {'text': 'my_decorator()', 'weight': 0}, {'text': 'def my_decorator:', 'weight': 0}, {'text': 'class my_decorator:', 'weight': 0}]",Decorators,Medium
2,Context Manager ใน Python ใช้สำหรับอะไร?,"[{'text': 'การจัดการทรัพยากรที่จำเป็นต้องปิดหรือปล่อยเมื่อใช้งานเสร็จ', 'weight': 1}, {'text': 'การสร้างฟังก์ชันใหม่', 'weight': 0}, {'text': 'การสร้างคลาสใหม่', 'weight': 0}, {'text': 'การลบทรัพยากรทิ้ง', 'weight': 0}]",Context Managers,Easy
3,คำสั่งไหนใน Python ที่ใช้สร้าง Context Manager?,"[{'text': 'with', 'weight': 1}, {'text': 'try', 'weight': 0}, {'text': 'except', 'weight': 0}, {'text': 'finally', 'weight': 0}]",Context Managers,Medium
4,ความแตกต่างระหว่าง Decorator และ Context Manager คือ?,"[{'text': 'Decorator ใช้เพิ่มฟังก์ชันให้กับฟังก์ชันอื่น ในขณะที่ Context Manager ใช้ในการจัดการทรัพยากร', 'weight': 1}, {'text': 'Decorator ใช้ในการจัดการทรัพยากร ในขณะที่ Context Manager ใช้เพิ่มฟังก์ชันให้กับฟังก์ชันอื่น', 'weight': 0}, {'text': 'Decorator และ Context Manager ไม่มีความแตกต่าง', 'weight': 0}, {'text': 'Decorator ใช้สร้างคลาสใหม่ ในขณะที่ Context Manager ใช้สร้างฟังก์ชันใหม่', 'weight': 0}]",Decorators and Context Managers,Hard
5,ตัวอย่างการใช้ Decorator ใน Python คือ?,"[{'text': 'การตรวจสอบการเข้าถึงฟังก์ชัน', 'weight': 1}, {'text': 'การสร้างฟังก์ชันใหม่', 'weight': 0}, {'text': 'การลบฟังก์ชันทิ้ง', 'weight': 0}, {'text': 'การสร้างคลาสใหม่', 'weight': 0}]",Decorators,Medium
6,ตัวอย่างการใช้ Context Manager ใน Python คือ?,"[{'text': 'การเปิดและปิดไฟล์', 'weight': 1}, {'text': 'การสร้างฟังก์ชันใหม่', 'weight': 0}, {'text': 'การลบไฟล์ทิ้ง', 'weight': 0}, {'text': 'การสร้างคลาสใหม่', 'weight': 0}]",Context Managers,Medium
7,ประโยชน์ของการใช้ Decorator ใน Python คือ?,"[{'text': 'สามารถเพิ่มฟังก์ชันให้กับฟังก์ชันอื่นได้โดยไม่ต้องแก้ไขโค้ดของฟังก์ชันนั้น', 'weight': 1}, {'text': 'สามารถลดฟังก์ชันออกจากฟังก์ชันอื่นได้', 'weight': 0}, {'text': 'สามารถสร้างคลาสใหม่ได้', 'weight': 0}, {'text': 'สามารถลบฟังก์ชันทิ้งได้', 'weight': 0}]",Decorators,Easy
8,ประโยชน์ของการใช้ Context Manager ใน Python คือ?,"[{'text': 'สามารถจัดการทรัพยากรที่จำเป็นต้องปิดหรือปล่อยเมื่อใช้งานเสร็จได้อย่างมีประสิทธิภาพ', 'weight': 1}, {'text': 'สามารถสร้างฟังก์ชันใหม่ได้', 'weight': 0}, {'text': 'สามารถสร้างคลาสใหม่ได้', 'weight': 0}, {'text': 'สามารถลบทรัพยากรทิ้งได้', 'weight': 0}]",Context Managers,Easy
9,การสร้าง list ใน Python สามารถทำได้โดยการใช้เครื่องหมายใด?,"[{'text': '()', 'weight': 0}, {'text': '[]', 'weight': 1}, {'text': '{}', 'weight': 0}, {'text': '<>', 'weight': 0}]",List,Easy
10,วิธีการเพิ่มข้อมูลใน list คือ?,"[{'text': '.append()', 'weight': 1}, {'text': '.insert()', 'weight': 0.5}, {'text': '.remove()', 'weight': 0}, {'text': '.pop()', 'weight': 0}]",List,Easy
11,คำสั่งใดใช้สำหรับการลบข้อมูลใน list?,"[{'text': '.append()', 'weight': 0}, {'text': '.remove()', 'weight': 1}, {'text': '.insert()', 'weight': 0}, {'text': '.pop()', 'weight': 0.5}]",List,Easy
12,การสร้าง dictionary ใน Python สามารถทำได้โดยการใช้เครื่องหมายใด?,"[{'text': '[]', 'weight': 0}, {'text': '()', 'weight': 0}, {'text': '{}', 'weight': 1}, {'text': '<>', 'weight': 0}]",Dictionary,Easy
13,วิธีการเพิ่มข้อมูลใน dictionary คือ?,"[{'text': '.update()', 'weight': 1}, {'text': '.append()', 'weight': 0}, {'text': '.insert()', 'weight': 0}, {'text': '.remove()', 'weight': 0}]",Dictionary,Medium
14,คำสั่งใดใช้สำหรับการลบข้อมูลใน dictionary?,"[{'text': '.update()', 'weight': 0}, {'text': '.pop()', 'weight': 1}, {'text': '.append()', 'weight': 0}, {'text': '.insert()', 'weight': 0}]",Dictionary,Medium
15,การสร้าง set ใน Python สามารถทำได้โดยการใช้เครื่องหมายใด?,"[{'text': '[]', 'weight': 0}, {'text': '()', 'weight': 0}, {'text': 'set()', 'weight': 1}, {'text': '<>', 'weight': 0}]",Set,Easy
16,วิธีการเพิ่มข้อมูลใน set คือ?,"[{'text': '.update()', 'weight': 1}, {'text': '.add()', 'weight': 0.5}, {'text': '.append()', 'weight': 0}, {'text': '.insert()', 'weight': 0}]",Set,Medium
17,คำสั่งใดใช้สำหรับการลบข้อมูลใน set?,"[{'text': '.update()', 'weight': 0}, {'text': '.remove()', 'weight': 1}, {'text': '.add()', 'weight': 0}, {'text': '.insert()', 'weight': 0}]",Set,Medium
18,การรวมข้อมูลระหว่าง list และ set สามารถทำได้โดยการใช้คำสั่งใด?,"[{'text': '.extend()', 'weight': 0}, {'text': '.update()', 'weight': 0}, {'text': 'list(set())', 'weight': 1}, {'text': 'set(list())', 'weight': 0.5}]",List and Set,Hard
19,อ็อบเจ็กต์ใดใน Python ที่สามารถวนซ้ำได้?,"[{'text': 'List', 'weight': 0}, {'text': 'Tuple', 'weight': 0}, {'text': 'Iterator', 'weight': 1}, {'text': 'Dictionary', 'weight': 0}]",Iterators,Easy
20,ฟังก์ชันใดใน Python ที่สร้าง iterator?,"[{'text': 'iter()', 'weight': 0.5}, {'text': 'next()', 'weight': 0}, {'text': 'range()', 'weight': 0.5}, {'text': 'len()', 'weight': 0}]",Iterators,Medium
21,เมื่อเรียกใช้ฟังก์ชัน next() บนอ็อบเจ็กต์ iterator จะเกิดอะไรขึ้น?,"[{'text': 'จะวนซ้ำไปที่ต้นของ iterator', 'weight': 0}, {'text': 'จะหยุดการทำงาน', 'weight': 0}, {'text': 'จะแสดงค่าถัดไป', 'weight': 1}, {'text': 'จะแสดงค่าทั้งหมด', 'weight': 0}]",Iterators,Medium
22,การใช้งาน generators ใน Python มีข้อดีอย่างไร?,"[{'text': 'ใช้พื้นที่หน่วยความจำมาก', 'weight': 0}, {'text': 'สามารถวนซ้ำได้ไม่จำกัด', 'weight': 0}, {'text': 'ประหยัดพื้นที่หน่วยความจำ', 'weight': 1}, {'text': 'เร็วขึ้นในการประมวลผล', 'weight': 0.5}]",Generators,Medium
23,ฟังก์ชันใดใน Python ที่สร้าง generator?,"[{'text': 'def', 'weight': 0}, {'text': 'yield', 'weight': 1}, {'text': 'return', 'weight': 0}, {'text': 'print', 'weight': 0}]",Generators,Medium
24,ความแตกต่างระหว่าง iterators และ generators คืออะไร?,"[{'text': 'iterators เป็นฟังก์ชัน ส่วน generators เป็นอ็อบเจ็กต์', 'weight': 0}, {'text': 'generators สามารถวนซ้ำได้ไม่จำกัด แต่ iterators ไม่สามารถ', 'weight': 0}, {'text': 'iterators เป็นอ็อบเจ็กต์ ส่วน generators เป็นฟังก์ชัน', 'weight': 1}, {'text': 'generators ใช้พื้นที่หน่วยความจำมาก ส่วน iterators ประหยัดพื้นที่หน่วยความจำ', 'weight': 0}]",Iterators and Generators,Hard
25,การสร้าง iterator ใน Python สามารถทำได้ด้วยวิธีใดบ้าง?,"[{'text': 'การสร้าง class ที่มี method __iter__ และ __next__', 'weight': 1}, {'text': 'การสร้างฟังก์ชันที่มี yield statement', 'weight': 0}, {'text': 'การสร้าง list หรือ tuple', 'weight': 0}, {'text': 'การสร้าง dictionary', 'weight': 0}]",Iterators,Hard
26,ฟังก์ชันใดใน Python ที่ใช้สำหรับการวนซ้ำ iterator?,"[{'text': 'for loop', 'weight': 1}, {'text': 'while loop', 'weight': 0}, {'text': 'if statement', 'weight': 0}, {'text': 'try-except block', 'weight': 0}]",Iterators,Easy
27,การสร้าง generator ใน Python สามารถทำได้ด้วยวิธีใดบ้าง?,"[{'text': 'การสร้างฟังก์ชันที่มี yield statement', 'weight': 1}, {'text': 'การสร้าง class ที่มี method __iter__ และ __next__', 'weight': 0}, {'text': 'การสร้าง list หรือ tuple', 'weight': 0}, {'text': 'การสร้าง dictionary', 'weight': 0}]",Generators,Medium
28,การสร้าง class ใน Python จะต้องใช้คำสั่งใด,"[{'text': 'class', 'weight': 1}, {'text': 'object', 'weight': 0}, {'text': 'inherit', 'weight': 0}, {'text': 'instance', 'weight': 0}]",Class and Objects,Easy
29,คุณสมบัติของ Object-Oriented Programming ที่สามารถทำให้ class หนึ่งรับมรดกจาก class อื่นได้คือ,"[{'text': 'Inheritance', 'weight': 1}, {'text': 'Encapsulation', 'weight': 0}, {'text': 'Abstraction', 'weight': 0}, {'text': 'Polymorphism', 'weight': 0}]",Inheritance,Medium
30,เมื่อเราสร้าง object จาก class ใน Python จะเกิดอะไรขึ้น,"[{'text': 'สร้าง instance ของ class นั้น', 'weight': 1}, {'text': 'ลบ class นั้น', 'weight': 0}, {'text': 'แก้ไข class นั้น', 'weight': 0}, {'text': 'ไม่มีอะไรเกิดขึ้น', 'weight': 0}]",Class and Objects,Easy
31,การซ่อนข้อมูลใน class เพื่อป้องกันการเข้าถึงโดยตรงจากภายนอก คุณสมบัติของ OOP ที่เกี่ยวข้องคือ,"[{'text': 'Encapsulation', 'weight': 1}, {'text': 'Inheritance', 'weight': 0}, {'text': 'Abstraction', 'weight': 0}, {'text': 'Polymorphism', 'weight': 0}]",Encapsulation,Medium
32,ฟังก์ชันที่ถูกกำหนดไว้ใน class เรียกว่า,"[{'text': 'Method', 'weight': 1}, {'text': 'Function', 'weight': 0}, {'text': 'Class', 'weight': 0}, {'text': 'Object', 'weight': 0}]",Methods,Easy
33,การแสดงผลลัพธ์ของ object ใน Python สามารถทำได้โดยใช้ฟังก์ชันใด,"[{'text': '__str__()', 'weight': 1}, {'text': '__init__()', 'weight': 0}, {'text': '__del__()', 'weight': 0}, {'text': '__repr__()', 'weight': 0}]",Special Methods,Medium
34,คุณสมบัติของ OOP ที่ช่วยให้เราสามารถสร้าง object ที่มีพฤติกรรมเหมือนกับ object อื่นได้คือ,"[{'text': 'Polymorphism', 'weight': 1}, {'text': 'Inheritance', 'weight': 0}, {'text': 'Encapsulation', 'weight': 0}, {'text': 'Abstraction', 'weight': 0}]",Polymorphism,Medium
35,การสร้าง class ใหม่ที่มีคุณสมบัติและพฤติกรรมเหมือน class อื่นแต่เพิ่มเติมหรือปรับปรุงบางส่วน เรียกว่า,"[{'text': 'Inheritance', 'weight': 1}, {'text': 'Encapsulation', 'weight': 0}, {'text': 'Abstraction', 'weight': 0}, {'text': 'Polymorphism', 'weight': 0}]",Inheritance,Medium
36,การป้องกันไม่ให้ผู้ใช้เข้าถึงข้อมูลภายใน object โดยตรง คุณสมบัติของ OOP ที่เกี่ยวข้องคือ,"[{'text': 'Encapsulation', 'weight': 1}, {'text': 'Inheritance', 'weight': 0}, {'text': 'Abstraction', 'weight': 0}, {'text': 'Polymorphism', 'weight': 0}]",Encapsulation,Medium
37,การสร้าง object ใหม่จาก class ที่มีอยู่แล้ว เรียกว่า,"[{'text': 'Instantiation', 'weight': 1}, {'text': 'Inheritance', 'weight': 0}, {'text': 'Encapsulation', 'weight': 0}, {'text': 'Polymorphism', 'weight': 0}]",Class and Objects,Easy
38,การสร้างโมดูลในภาษา Python สามารถทำได้โดยการสร้างไฟล์.py และเขียนโค้ด Python ลงในไฟล์นั้น,"[{'text': 'ถูกต้อง', 'weight': 1}, {'text': 'ไม่ถูกต้อง', 'weight': 0}, {'text': 'ขึ้นอยู่กับสถานการณ์', 'weight': 0.5}, {'text': 'ไม่มีความเกี่ยวข้อง', 'weight': 0}]",Modules,Easy
39,เมื่อเรียกใช้ฟังก์ชันจากโมดูลอื่น เราต้องทำอย่างไร?,"[{'text': 'นำโมดูลนั้นมาสู่โครงการของเรา', 'weight': 0}, {'text': 'นำฟังก์ชันนั้นมาสู่โครงการของเรา', 'weight': 0}, {'text': 'นำโมดูลนั้นมา import', 'weight': 1}, {'text': 'ไม่ต้องทำอะไร', 'weight': 0}]",Imports,Easy
40,คำสั่ง import ใน Python ใช้สำหรับอะไร?,"[{'text': 'สร้างโมดูลใหม่', 'weight': 0}, {'text': 'เรียกใช้โมดูลที่มีอยู่แล้ว', 'weight': 1}, {'text': 'ลบโมดูลที่ไม่ต้องการ', 'weight': 0}, {'text': 'แก้ไขโมดูลที่มีอยู่แล้ว', 'weight': 0}]",Imports,Easy
41,ถ้าเราต้องการใช้ฟังก์ชันเฉพาะจากโมดูล เราสามารถทำได้โดยการใช้คำสั่งอะไร?,"[{'text': 'import *', 'weight': 0}, {'text': 'from... import...', 'weight': 1}, {'text': 'import... as...', 'weight': 0.5}, {'text': 'ไม่สามารถทำได้', 'weight': 0}]",Imports,Medium
42,โมดูลที่มีอยู่แล้วใน Python มีอะไรบ้าง?,"[{'text': 'math, time, datetime', 'weight': 1}, {'text': 'random, os, sys', 'weight': 1}, {'text': 'ทั้งหมดข้างบน', 'weight': 1}, {'text': 'ไม่มี', 'weight': 0}]",Modules,Medium
43,เราสามารถสร้างโมดูลของเราเองได้หรือไม่?,"[{'text': 'สามารถ', 'weight': 1}, {'text': 'ไม่สามารถ', 'weight': 0}, {'text': 'ขึ้นอยู่กับสถานการณ์', 'weight': 0.5}, {'text': 'ไม่มีความเกี่ยวข้อง', 'weight': 0}]",Modules,Easy
44,การ import โมดูลที่ไม่มีอยู่จริงจะทำให้เกิดอะไรขึ้น?,"[{'text': 'ไม่มีอะไรเกิดขึ้น', 'weight': 0}, {'text': 'โปรแกรมจะทำงานต่อไป', 'weight': 0}, {'text': 'จะเกิด Error', 'weight': 1}, {'text': 'โปรแกรมจะหยุดทำงาน', 'weight': 0.5}]",Imports,Medium
45,เราสามารถ import ฟังก์ชันจากโมดูลอื่นได้หรือไม่?,"[{'text': 'สามารถ', 'weight': 1}, {'text': 'ไม่สามารถ', 'weight': 0}, {'text': 'ขึ้นอยู่กับสถานการณ์', 'weight': 0.5}, {'text': 'ไม่มีความเกี่ยวข้อง', 'weight': 0}]",Imports,Easy
46,การ import โมดูลทั้งหมด (import *) จะมีข้อเสียอะไร?,"[{'text': 'ทำให้โปรแกรมทำงานช้าลง', 'weight': 0.5}, {'text': 'ทำให้เกิด conflict ของชื่อฟังก์ชัน', 'weight': 1}, {'text': 'ไม่มีข้อเสีย', 'weight': 0}, {'text': 'ทำให้โปรแกรมไม่สามารถทำงานได้', 'weight': 0}]",Imports,Hard
47,การทำอะไรบ้างใน Python เพื่อจัดการกับข้อผิดพลาด?,"[{'text': 'การใช้คำสั่ง try-except', 'weight': 1}, {'text': 'การใช้คำสั่ง if-else', 'weight': 0}, {'text': 'การใช้คำสั่ง for loop', 'weight': 0}, {'text': 'การใช้คำสั่ง while loop', 'weight': 0}]",ErrorHandling,Easy
48,คำสั่งไหนที่ใช้เพื่อรับข้อความข้อผิดพลาดใน Python?,"[{'text': 'except Exception as e:', 'weight': 1}, {'text': 'try:', 'weight': 0}, {'text': 'finally:', 'weight': 0}, {'text': 'raise:', 'weight': 0}]",ErrorHandling,Medium
49,การทำอะไรบ้างใน Python เพื่อสร้างข้อผิดพลาด?,"[{'text': 'การใช้คำสั่ง raise', 'weight': 1}, {'text': 'การใช้คำสั่ง try', 'weight': 0}, {'text': 'การใช้คำสั่ง except', 'weight': 0}, {'text': 'การใช้คำสั่ง finally', 'weight': 0}]",ErrorHandling,Medium
50,คำสั่งไหนที่ใช้เพื่อทำการล้างข้อมูลหลังจากการทำรายการใน Python?,"[{'text': 'finally:', 'weight': 1}, {'text': 'except:', 'weight': 0}, {'text': 'try:', 'weight': 0}, {'text': 'raise:', 'weight': 0}]",ErrorHandling,Medium
51,การทำอะไรบ้างใน Python เพื่อตรวจสอบและจัดการกับข้อผิดพลาด?,"[{'text': 'การใช้คำสั่ง try-except', 'weight': 1}, {'text': 'การใช้คำสั่ง if-else', 'weight': 0}, {'text': 'การใช้คำสั่ง for loop', 'weight': 0}, {'text': 'การใช้คำสั่ง while loop', 'weight': 0}]",ErrorHandling,Easy
52,คำสั่งไหนที่ใช้เพื่อทำการเรียกขึ้นข้อผิดพลาดใน Python?,"[{'text': ""raise Exception('message')"", 'weight': 1}, {'text': 'try:', 'weight': 0}, {'text': 'except:', 'weight': 0}, {'text': 'finally:', 'weight': 0}]",ErrorHandling,Medium
53,การทำอะไรบ้างใน Python เพื่อจัดการกับข้อผิดพลาดที่เกิดขึ้นจากการทำงานของโปรแกรม?,"[{'text': 'การใช้คำสั่ง try-except-finally', 'weight': 1}, {'text': 'การใช้คำสั่ง if-else', 'weight': 0}, {'text': 'การใช้คำสั่ง for loop', 'weight': 0}, {'text': 'การใช้คำสั่ง while loop', 'weight': 0}]",ErrorHandling,Hard
54,คำสั่งไหนที่ใช้เพื่อทำการแสดงข้อความข้อผิดพลาดใน Python?,"[{'text': 'print(e)', 'weight': 1}, {'text': ""raise Exception('message')"", 'weight': 0.5}, {'text': 'try:', 'weight': 0}, {'text': 'except:', 'weight': 0}]",ErrorHandling,Medium
55,การทำอะไรบ้างใน Python เพื่อทำการตรวจสอบและจัดการกับข้อผิดพลาดที่เกิดขึ้นจากการทำงานของโปรแกรม?,"[{'text': 'การใช้คำสั่ง try-except-finally', 'weight': 1}, {'text': 'การใช้คำสั่ง if-else', 'weight': 0}, {'text': 'การใช้คำสั่ง for loop', 'weight': 0}, {'text': 'การใช้คำสั่ง while loop', 'weight': 0}]",ErrorHandling,Hard
56,การแสดงผลข้อความในภาษา Python สามารถทำได้โดยใช้ฟังก์ชันใด,"[{'text': 'print()', 'weight': 1}, {'text': 'display()', 'weight': 0}, {'text': 'show()', 'weight': 0}, {'text': 'output()', 'weight': 0}]",Input and Output,Easy
57,ฟังก์ชันใดที่ใช้รับข้อมูลเข้ามาจากผู้ใช้ในภาษา Python,"[{'text': 'input()', 'weight': 1}, {'text': 'read()', 'weight': 0}, {'text': 'get()', 'weight': 0}, {'text': 'receive()', 'weight': 0}]",Input and Output,Easy
58,เมื่อเรียกใช้ฟังก์ชัน print() ในภาษา Python แล้วไม่มีการระบุ argument ใดๆ จะเกิดอะไรขึ้น,"[{'text': 'จะแสดงข้อความว่าง', 'weight': 1}, {'text': ""จะแสดงข้อความ 'None'"", 'weight': 0}, {'text': ""จะแสดงข้อความ 'print()'"", 'weight': 0}, {'text': ""จะแสดงข้อความ 'Error'"", 'weight': 0}]",Input and Output,Medium
59,"การรับข้อมูลที่มีหลายประเภท เช่น string, integer, float สามารถทำได้โดยใช้ฟังก์ชันใด","[{'text': 'eval(input())', 'weight': 1}, {'text': 'int(input())', 'weight': 0}, {'text': 'float(input())', 'weight': 0}, {'text': 'str(input())', 'weight': 0}]",Input and Output,Medium
60,ถ้าเราต้องการแสดงผลข้อมูลหลายชนิดข้อมูลในคำสั่งเดียว ควรใช้วิธีการใด,"[{'text': 'การใช้ฟังก์ชัน print() ร่วมกับการใช้คอมมาร์ (,)', 'weight': 1}, {'text': 'การใช้ฟังก์ชัน print() ร่วมกับการใช้ +', 'weight': 0}, {'text': 'การใช้ฟังก์ชัน display() ร่วมกับการใช้คอมมาร์ (,)', 'weight': 0}, {'text': 'การใช้ฟังก์ชัน show() ร่วมกับการใช้ +', 'weight': 0}]",Input and Output,Medium
61,การรับข้อมูลจากผู้ใช้ที่มีหลายบรรทัด สามารถทำได้โดยใช้ฟังก์ชันใด,"[{'text': 'input() ไม่สามารถรับข้อมูลหลายบรรทัด', 'weight': 1}, {'text': 'multiline_input()', 'weight': 0}, {'text': 'getlines()', 'weight': 0}, {'text': 'readlines()', 'weight': 0}]",Input and Output,Hard
62,การแสดงผลข้อมูลที่มีการจัดการตำแหน่งและรูปแบบของข้อมูล สามารถทำได้โดยใช้ฟังก์ชันใด,"[{'text': 'format()', 'weight': 1}, {'text': 'display()', 'weight': 0}, {'text': 'show()', 'weight': 0}, {'text': 'print()', 'weight': 0}]",Input and Output,Hard
63,การแสดงผลข้อมูลที่มีการจัดการตำแหน่งและรูปแบบของข้อมูลในรูปแบบใหม่ สามารถทำได้โดยใช้ฟังก์ชันใด,"[{'text': 'f-string', 'weight': 1}, {'text': 'format()', 'weight': 0}, {'text': 'display()', 'weight': 0}, {'text': 'show()', 'weight': 0}]",Input and Output,Hard
64,การแสดงผลข้อมูลที่มีการจัดการตำแหน่งและรูปแบบของข้อมูลในรูปแบบใหม่ สามารถทำได้โดยใช้วิธีการใด,"[{'text': 'การใช้สัญลักษณ์ { } และ.format()', 'weight': 1}, {'text': 'การใช้สัญลักษณ์ %', 'weight': 0}, {'text': 'การใช้สัญลักษณ์ $', 'weight': 0}, {'text': 'การใช้สัญลักษณ์ #', 'weight': 0}]",Input and Output,Hard
65,เซตในภาษาไพธอนสามารถสร้างได้โดยการใช้สัญลักษณ์อะไร?,"[{'text': '{ }', 'weight': 1}, {'text': '[ ]', 'weight': 0}, {'text': '( )', 'weight': 0}, {'text': '<>', 'weight': 0}]",Set,Easy
66,เซตในภาษาไพธอนสามารถจัดการกับข้อมูลแบบใดได้?,"[{'text': 'ข้อมูลที่ไม่ซ้ำกัน', 'weight': 1}, {'text': 'ข้อมูลที่ซ้ำกัน', 'weight': 0}, {'text': 'ข้อมูลที่มีการเรียงลำดับ', 'weight': 0}, {'text': 'ข้อมูลที่ไม่มีการเรียงลำดับ', 'weight': 0}]",Set,Easy
67,การสร้างเซตในภาษาไพธอนสามารถทำได้โดยการใช้คำสั่งอะไร?,"[{'text': 'set()', 'weight': 1}, {'text': 'list()', 'weight': 0}, {'text': 'tuple()', 'weight': 0}, {'text': 'dict()', 'weight': 0}]",Set,Medium
68,เซตในภาษาไพธอนสามารถใช้ในการตรวจสอบความเป็นสมาชิกของข้อมูลได้หรือไม่?,"[{'text': 'ใช่', 'weight': 1}, {'text': 'ไม่ใช่', 'weight': 0}]",Set,Medium
69,การรวมเซตในภาษาไพธอนสามารถทำได้โดยการใช้คำสั่งอะไร?,"[{'text': 'union()', 'weight': 1}, {'text': 'intersection()', 'weight': 0}, {'text': 'difference()', 'weight': 0}, {'text': 'symmetric_difference()', 'weight': 0}]",Set,Medium
70,เซตในภาษาไพธอนสามารถเปลี่ยนแปลงข้อมูลภายในเซตได้หรือไม่?,"[{'text': 'ไม่สามารถเปลี่ยนแปลงได้', 'weight': 1}, {'text': 'สามารถเปลี่ยนแปลงได้', 'weight': 0}]",Set,Hard
71,การหาข้อมูลที่ไม่ซ้ำกันระหว่างสองเซตในภาษาไพธอนสามารถทำได้โดยการใช้คำสั่งอะไร?,"[{'text': 'symmetric_difference()', 'weight': 1}, {'text': 'union()', 'weight': 0}, {'text': 'intersection()', 'weight': 0}, {'text': 'difference()', 'weight': 0}]",Set,Hard
72,เซตในภาษาไพธอนสามารถใช้ในการหาข้อมูลที่ซ้ำกันระหว่างสองเซตได้หรือไม่?,"[{'text': 'ใช่', 'weight': 1}, {'text': 'ไม่ใช่', 'weight': 0}]",Set,Hard
73,เซตในภาษาไพธอนสามารถใช้ในการหาข้อมูลที่ไม่ซ้ำกันระหว่างสองเซตได้หรือไม่?,"[{'text': 'ใช่', 'weight': 1}, {'text': 'ไม่ใช่', 'weight': 0}]",Set,Hard
74,การสร้าง dictionary ในภาษา Python สามารถทำได้โดยการใช้สัญลักษณ์อะไร?,"[{'text': '()', 'weight': 0}, {'text': '[]', 'weight': 0}, {'text': '{}', 'weight': 1}, {'text': '<>', 'weight': 0}]",การสร้าง Dictionary,"['Easy', 'Medium', 'Hard']"
75,คำสั่งไหนใช้สำหรับการเพิ่มค่าใน dictionary?,"[{'text': 'append()', 'weight': 0}, {'text': 'update()', 'weight': 1}, {'text': 'insert()', 'weight': 0}, {'text': 'add()', 'weight': 0}]",การเพิ่มค่าใน Dictionary,"['Easy', 'Medium', 'Hard']"
76,วิธีการเข้าถึงค่าใน dictionary คืออะไร?,"[{'text': 'ด้วยการใช้ index', 'weight': 0}, {'text': 'ด้วยการใช้ key', 'weight': 1}, {'text': 'ด้วยการใช้ value', 'weight': 0}, {'text': 'ด้วยการใช้ function', 'weight': 0}]",การเข้าถึงค่าใน Dictionary,"['Easy', 'Medium', 'Hard']"
77,การลบค่าใน dictionary สามารถทำได้โดยการใช้คำสั่งอะไร?,"[{'text': 'del()', 'weight': 1}, {'text': 'remove()', 'weight': 0}, {'text': 'pop()', 'weight': 0.5}, {'text': 'delete()', 'weight': 0}]",การลบค่าใน Dictionary,"['Easy', 'Medium', 'Hard']"
78,คำสั่งไหนใช้สำหรับการคัดลอก dictionary?,"[{'text': 'copy()', 'weight': 1}, {'text': 'duplicate()', 'weight': 0}, {'text': 'clone()', 'weight': 0}, {'text': 'replicate()', 'weight': 0}]",การคัดลอก Dictionary,"['Easy', 'Medium', 'Hard']"
79,คำสั่งไหนใช้สำหรับการตรวจสอบว่ามีคีย์ใน dictionary หรือไม่?,"[{'text': 'in', 'weight': 1}, {'text': 'exists()', 'weight': 0}, {'text': 'check()', 'weight': 0}, {'text': 'contains()', 'weight': 0}]",การตรวจสอบคีย์ใน Dictionary,"['Easy', 'Medium', 'Hard']"
80,การเรียงลำดับค่าใน dictionary สามารถทำได้โดยการใช้คำสั่งอะไร?,"[{'text': 'sort()', 'weight': 0.5}, {'text': 'sorted()', 'weight': 1}, {'text': 'order()', 'weight': 0}, {'text': 'arrange()', 'weight': 0}]",การเรียงลำดับค่าใน Dictionary,"['Medium', 'Hard']"
81,คำสั่งไหนใช้สำหรับการรวม dictionary?,"[{'text': 'update()', 'weight': 1}, {'text': 'merge()', 'weight': 0.5}, {'text': 'join()', 'weight': 0}, {'text': 'combine()', 'weight': 0}]",การรวม Dictionary,"['Medium', 'Hard']"
82,การแปลง dictionary เป็น string สามารถทำได้โดยการใช้คำสั่งอะไร?,"[{'text': 'str()', 'weight': 1}, {'text': 'stringify()', 'weight': 0}, {'text': 'toString()', 'weight': 0}, {'text': 'format()', 'weight': 0}]",การแปลง Dictionary เป็น String,"['Medium', 'Hard']"
83,การสร้าง tuple ในภาษา Python สามารถทำได้โดยการใช้สัญลักษณ์อะไร?,"[{'text': '()', 'weight': 1}, {'text': '[]', 'weight': 0}, {'text': '{}', 'weight': 0}, {'text': '<>', 'weight': 0}]",Tuple,Easy
84,คำสั่งไหนที่สามารถใช้เพื่อเข้าถึงสมาชิกใน tuple?,"[{'text': 'append()', 'weight': 0}, {'text': 'insert()', 'weight': 0}, {'text': 'index()', 'weight': 1}, {'text': 'sort()', 'weight': 0}]",Tuple,Easy
85,"เมื่อเรามี tuple ที่ชื่อว่า my_tuple = (1, 2, 3, 4, 5) เราสามารถเข้าถึงสมาชิกที่ 3 ของ tuple นี้ได้โดยใช้วิธีการใด?","[{'text': 'my_tuple[2]', 'weight': 1}, {'text': 'my_tuple(2)', 'weight': 0}, {'text': 'my_tuple.get(2)', 'weight': 0}, {'text': 'my_tuple[3]', 'weight': 0}]",Tuple,Easy
86,tuple เป็นชนิดข้อมูลที่สามารถแก้ไขได้หรือไม่?,"[{'text': 'สามารถแก้ไขได้', 'weight': 0}, {'text': 'ไม่สามารถแก้ไขได้', 'weight': 1}, {'text': 'ขึ้นอยู่กับการใช้งาน', 'weight': 0}, {'text': 'ไม่แน่ใจ', 'weight': 0}]",Tuple,Medium
87,การสร้าง tuple ที่มีสมาชิกเดียวใน Python จำเป็นต้องมีสัญลักษณ์อะไร?,"[{'text': ',', 'weight': 0}, {'text': '.', 'weight': 0}, {'text': ',', 'weight': 1}, {'text': ';', 'weight': 0}]",Tuple,Medium
88,เราสามารถแปลง list เป็น tuple ได้โดยใช้ฟังก์ชันใด?,"[{'text': 'tuple()', 'weight': 1}, {'text': 'list()', 'weight': 0}, {'text': 'set()', 'weight': 0}, {'text': 'dict()', 'weight': 0}]",Tuple,Medium
89,เราสามารถแปลง tuple เป็น list ได้โดยใช้ฟังก์ชันใด?,"[{'text': 'list()', 'weight': 1}, {'text': 'tuple()', 'weight': 0}, {'text': 'set()', 'weight': 0}, {'text': 'dict()', 'weight': 0}]",Tuple,Medium
90,ฟังก์ชันใดที่ใช้สำหรับการค้นหาตำแหน่งของสมาชิกใน tuple?,"[{'text': 'index()', 'weight': 1}, {'text': 'find()', 'weight': 0}, {'text': 'search()', 'weight': 0}, {'text': 'locate()', 'weight': 0}]",Tuple,Hard
91,เราสามารถลบสมาชิกออกจาก tuple ได้หรือไม่?,"[{'text': 'สามารถลบได้', 'weight': 0}, {'text': 'ไม่สามารถลบได้', 'weight': 1}, {'text': 'ขึ้นอยู่กับการใช้งาน', 'weight': 0}, {'text': 'ไม่แน่ใจ', 'weight': 0}]",Tuple,Hard
92,ฟังก์ชันใดที่ใช้สำหรับการนับจำนวนที่สมาชิกใน tuple?,"[{'text': 'count()', 'weight': 1}, {'text': 'len()', 'weight': 0}, {'text': 'num()', 'weight': 0}, {'text': 'size()', 'weight': 0}]",Tuple,Hard
93,การสร้าง list comprehension ในภาษา Python จะใช้รูปแบบใด,"[{'text': '[x for x in range(5)]', 'weight': 1}, {'text': '{x: x for x in range(5)}', 'weight': 0}, {'text': '(x for x in range(5))', 'weight': 0}, {'text': '{x for x in range(5)}', 'weight': 0}]",List Comprehension,Easy
94,"ผลลัพธ์ของโค้ดต่อไปนี้คืออะไร my_list = [1, 2, 3, 4, 5] print(my_list[-1])","[{'text': '1', 'weight': 0}, {'text': '5', 'weight': 1}, {'text': '0', 'weight': 0}, {'text': '6', 'weight': 0}]",Lists,Easy
95,การเข้าถึงสมาชิกของ list ใน Python เริ่มที่ดัชนีใด,"[{'text': '0', 'weight': 1}, {'text': '1', 'weight': 0}, {'text': '-1', 'weight': 0}, {'text': 'None', 'weight': 0}]",Lists,Easy
96,วิธีการเพิ่มสมาชิกใหม่เข้าไปใน list คือ,"[{'text': 'append', 'weight': 1}, {'text': 'insert', 'weight': 0.5}, {'text': 'add', 'weight': 0}, {'text': 'push', 'weight': 0}]",Lists,Medium
97,list comprehension สามารถใช้เงื่อนไข if เพิ่มเติมได้หรือไม่,"[{'text': 'สามารถ', 'weight': 1}, {'text': 'ไม่สามารถ', 'weight': 0}]",List Comprehension,Medium
98,การลบสมาชิกออกจาก list สามารถทำได้โดยใช้ method อะไร,"[{'text': 'remove', 'weight': 1}, {'text': 'delete', 'weight': 0}, {'text': 'pop', 'weight': 0.5}, {'text': 'clear', 'weight': 0}]",Lists,Medium
99,list comprehension สามารถใช้ในการสร้าง list ที่มีสมาชิกซ้ำๆ ได้หรือไม่,"[{'text': 'สามารถ', 'weight': 1}, {'text': 'ไม่สามารถ', 'weight': 0}]",List Comprehension,Medium
100,การสลับตำแหน่งสมาชิกของ list สามารถทำได้โดยใช้ method อะไร,"[{'text': 'reverse', 'weight': 1}, {'text': 'sort', 'weight': 0}, {'text': 'shuffle', 'weight': 0}, {'text': 'swap', 'weight': 0}]",Lists,Hard
101,การรวม list หลายๆ อันเข้าเป็น list เดียวสามารถทำได้โดยใช้ operator อะไร,"[{'text': '+', 'weight': 1}, {'text': '*', 'weight': 0}, {'text': '/', 'weight': 0}, {'text': '-', 'weight': 0}]",Lists,Hard
102,การแปลง list เป็น string สามารถทำได้โดยใช้ method อะไร,"[{'text': 'join', 'weight': 1}, {'text': 'split', 'weight': 0}, {'text': 'strip', 'weight': 0}, {'text': 'format', 'weight': 0}]",Lists,Hard
103,ฟังก์ชันในภาษาไพธอนสามารถรับค่าอะไรได้บ้าง?,"[{'text': 'ตัวเลข', 'weight': 0.25}, {'text': 'ข้อความ', 'weight': 0.25}, {'text': 'ทั้งหมดข้างต้น', 'weight': 1}, {'text': 'ไม่สามารถรับค่าอะไรได้', 'weight': 0}]",Function Inputs,Easy
104,คำสั่งใดใช้ในการเรียกใช้งานฟังก์ชันในภาษาไพธอน?,"[{'text': 'call()', 'weight': 0}, {'text': 'run()', 'weight': 0}, {'text': 'ชื่อฟังก์ชันตามด้วยวงเล็บ', 'weight': 1}, {'text': 'execute()', 'weight': 0}]",Calling Functions,Easy
105,ฟังก์ชันในภาษาไพธอนสามารถคืนค่าได้หลายอย่างพร้อมกันหรือไม่?,"[{'text': 'ไม่สามารถคืนค่าได้หลายอย่างพร้อมกัน', 'weight': 0}, {'text': 'สามารถคืนค่าได้หลายอย่างพร้อมกัน', 'weight': 1}, {'text': 'ขึ้นอยู่กับขนาดของฟังก์ชัน', 'weight': 0}, {'text': 'ขึ้นอยู่กับการกำหนดค่าเริ่มต้น', 'weight': 0}]",Function Returns,Medium
106,ฟังก์ชันในภาษาไพธอนสามารถมีพารามิเตอร์เริ่มต้นได้หรือไม่?,"[{'text': 'ไม่สามารถมีพารามิเตอร์เริ่มต้น', 'weight': 0}, {'text': 'สามารถมีพารามิเตอร์เริ่มต้น', 'weight': 1}, {'text': 'ขึ้นอยู่กับขนาดของฟังก์ชัน', 'weight': 0}, {'text': 'ขึ้นอยู่กับการกำหนดค่าเริ่มต้น', 'weight': 0}]",Function Parameters,Medium
107,ฟังก์ชันในภาษาไพธอนสามารถเรียกใช้งานฟังก์ชันภายในตัวเองได้หรือไม่?,"[{'text': 'ไม่สามารถเรียกใช้งานฟังก์ชันภายในตัวเอง', 'weight': 0}, {'text': 'สามารถเรียกใช้งานฟังก์ชันภายในตัวเอง', 'weight': 1}, {'text': 'ขึ้นอยู่กับขนาดของฟังก์ชัน', 'weight': 0}, {'text': 'ขึ้นอยู่กับการกำหนดค่าเริ่มต้น', 'weight': 0}]",Recursive Functions,Medium
108,ฟังก์ชันในภาษาไพธอนสามารถเปลี่ยนแปลงค่าของตัวแปรภายนอกได้หรือไม่?,"[{'text': 'ไม่สามารถเปลี่ยนแปลงค่าของตัวแปรภายนอก', 'weight': 0}, {'text': 'สามารถเปลี่ยนแปลงค่าของตัวแปรภายนอก', 'weight': 1}, {'text': 'ขึ้นอยู่กับขนาดของฟังก์ชัน', 'weight': 0}, {'text': 'ขึ้นอยู่กับการกำหนดค่าเริ่มต้น', 'weight': 0}]",Function Scope,Hard
109,ฟังก์ชันในภาษาไพธอนสามารถเป็นสมาชิกของโครงสร้างข้อมูลอื่นๆ ได้หรือไม่?,"[{'text': 'ไม่สามารถเป็นสมาชิกของโครงสร้างข้อมูลอื่นๆ', 'weight': 0}, {'text': 'สามารถเป็นสมาชิกของโครงสร้างข้อมูลอื่นๆ', 'weight': 1}, {'text': 'ขึ้นอยู่กับขนาดของฟังก์ชัน', 'weight': 0}, {'text': 'ขึ้นอยู่กับการกำหนดค่าเริ่มต้น', 'weight': 0}]",Function as Data,Hard
110,ฟังก์ชันในภาษาไพธอนสามารถใช้เป็นตัวกรองข้อมูลได้หรือไม่?,"[{'text': 'ไม่สามารถใช้เป็นตัวกรองข้อมูล', 'weight': 0}, {'text': 'สามารถใช้เป็นตัวกรองข้อมูล', 'weight': 1}, {'text': 'ขึ้นอยู่กับขนาดของฟังก์ชัน', 'weight': 0}, {'text': 'ขึ้นอยู่กับการกำหนดค่าเริ่มต้น', 'weight': 0}]",Function as Filter,Hard
111,ฟังก์ชันในภาษาไพธอนสามารถใช้เป็นตัวแปลงข้อมูลได้หรือไม่?,"[{'text': 'ไม่สามารถใช้เป็นตัวแปลงข้อมูล', 'weight': 0}, {'text': 'สามารถใช้เป็นตัวแปลงข้อมูล', 'weight': 1}, {'text': 'ขึ้นอยู่กับขนาดของฟังก์ชัน', 'weight': 0}, {'text': 'ขึ้นอยู่กับการกำหนดค่าเริ่มต้น', 'weight': 0}]",Function as Transformer,Hard
112,ฟังก์ชันในภาษาไพธอนสามารถใช้เป็นตัวสร้างข้อมูลได้หรือไม่?,"[{'text': 'ไม่สามารถใช้เป็นตัวสร้างข้อมูล', 'weight': 0}, {'text': 'สามารถใช้เป็นตัวสร้างข้อมูล', 'weight': 1}, {'text': 'ขึ้นอยู่กับขนาดของฟังก์ชัน', 'weight': 0}, {'text': 'ขึ้นอยู่กับการกำหนดค่าเริ่มต้น', 'weight': 0}]",Function as Generator,Hard
113,คำสั่ง loop ในภาษา Python ที่ใช้สำหรับการวนซ้ำคือ?,"[{'text': 'for', 'weight': 1}, {'text': 'while', 'weight': 0.75}, {'text': 'if', 'weight': 0}, {'text': 'else', 'weight': 0}]",Loops,Easy
114,การใช้ loop for ในภาษา Python สามารถวนซ้ำได้กี่รอบ?,"[{'text': 'ไม่จำกัด', 'weight': 1}, {'text': '10 รอบ', 'weight': 0}, {'text': '100 รอบ', 'weight': 0}, {'text': '1000 รอบ', 'weight': 0}]",Loops,Easy
115,ใน loop while ควรจะมีการเพิ่มหรือลดค่าของตัวแปรที่ใช้เป็นเงื่อนไขอย่างไร?,"[{'text': 'เพิ่มหรือลดค่าในทุกๆ รอบ', 'weight': 1}, {'text': 'ไม่ควรเปลี่ยนแปลงค่า', 'weight': 0}, {'text': 'เพิ่มค่าเฉพาะรอบแรก', 'weight': 0}, {'text': 'ลดค่าเฉพาะรอบสุดท้าย', 'weight': 0}]",Loops,Medium
116,คำสั่ง break ในภาษา Python ใช้สำหรับ?,"[{'text': 'ออกจาก loop ทันที', 'weight': 1}, {'text': 'วนซ้ำ loop อีกครั้ง', 'weight': 0}, {'text': 'ไปที่ส่วนอื่นของโปรแกรม', 'weight': 0}, {'text': 'หยุดการทำงานของโปรแกรม', 'weight': 0}]",Loops,Medium
117,คำสั่ง continue ในภาษา Python ใช้สำหรับ?,"[{'text': 'ข้ามไปยังรอบถัดไปของ loop', 'weight': 1}, {'text': 'ออกจาก loop ทันที', 'weight': 0}, {'text': 'วนซ้ำ loop อีกครั้ง', 'weight': 0}, {'text': 'หยุดการทำงานของโปรแกรม', 'weight': 0}]",Loops,Medium
118,ในการใช้ loop for ในภาษา Python เราสามารถวนซ้ำผ่าน list หรือ tuple ได้โดยตรง?,"[{'text': 'สามารถ', 'weight': 1}, {'text': 'ไม่สามารถ', 'weight': 0}, {'text': 'บางกรณี', 'weight': 0}, {'text': 'ขึ้นอยู่กับขนาดของ list หรือ tuple', 'weight': 0}]",Loops,Easy
119,ในการใช้ loop while ในภาษา Python เราต้องกำหนดเงื่อนไขในการวนซ้ำอย่างไร?,"[{'text': 'เป็นคำสั่งที่ต้องการให้ true', 'weight': 1}, {'text': 'เป็นคำสั่งที่ต้องการให้ false', 'weight': 0}, {'text': 'ไม่ต้องกำหนดเงื่อนไข', 'weight': 0}, {'text': 'ขึ้นอยู่กับความต้องการของผู้เขียน', 'weight': 0}]",Loops,Medium
120,ใน loop for ถ้าเราต้องการวนซ้ำผ่าน range ของตัวเลข เราสามารถทำได้โดยใช้คำสั่ง?,"[{'text': 'range()', 'weight': 1}, {'text': 'len()', 'weight': 0}, {'text': 'enumerate()', 'weight': 0}, {'text': 'zip()', 'weight': 0}]",Loops,Medium
121,การวนซ้ำผ่าน dictionary ในภาษา Python สามารถทำได้โดยใช้ loop?,"[{'text': 'for', 'weight': 1}, {'text': 'while', 'weight': 0}, {'text': 'if', 'weight': 0}, {'text': 'else', 'weight': 0}]",Loops,Hard
122,การเขียนโปรแกรมภาษา Python จะใช้คำสั่ง if เพื่อทำอะไร?,"[{'text': 'เพื่อสร้างฟังก์ชัน', 'weight': 0}, {'text': 'เพื่อทำการวนซ้ำ', 'weight': 0}, {'text': 'เพื่อตรวจสอบเงื่อนไข', 'weight': 1}, {'text': 'เพื่อสร้างคลาส', 'weight': 0}]",Control Flow,Easy
123,คำสั่ง elif ใน Python ใช้เพื่ออะไร?,"[{'text': 'เพื่อตรวจสอบเงื่อนไขหลัก', 'weight': 0}, {'text': 'เพื่อตรวจสอบเงื่อนไขที่สอง', 'weight': 1}, {'text': 'เพื่อสร้างฟังก์ชัน', 'weight': 0}, {'text': 'เพื่อทำการวนซ้ำ', 'weight': 0}]",Control Flow,Medium
124,คำสั่ง else ใน Python ใช้เพื่ออะไร?,"[{'text': 'เพื่อตรวจสอบเงื่อนไขหลัก', 'weight': 0}, {'text': 'เพื่อทำการวนซ้ำ', 'weight': 0}, {'text': 'เพื่อสร้างฟังก์ชัน', 'weight': 0}, {'text': 'เพื่อทำงานเมื่อเงื่อนไขไม่เป็นจริง', 'weight': 1}]",Control Flow,Easy
125,การเขียนโปรแกรมภาษา Python จะใช้คำสั่ง for เพื่อทำอะไร?,"[{'text': 'เพื่อตรวจสอบเงื่อนไข', 'weight': 0}, {'text': 'เพื่อทำการวนซ้ำ', 'weight': 1}, {'text': 'เพื่อสร้างฟังก์ชัน', 'weight': 0}, {'text': 'เพื่อสร้างคลาส', 'weight': 0}]",Control Flow,Easy
126,คำสั่ง break ใน Python ใช้เพื่ออะไร?,"[{'text': 'เพื่อยุติการทำงานของ loop', 'weight': 1}, {'text': 'เพื่อเริ่มการทำงานของ loop', 'weight': 0}, {'text': 'เพื่อตรวจสอบเงื่อนไข', 'weight': 0}, {'text': 'เพื่อสร้างฟังก์ชัน', 'weight': 0}]",Control Flow,Medium
127,คำสั่ง continue ใน Python ใช้เพื่ออะไร?,"[{'text': 'เพื่อยุติการทำงานของ loop', 'weight': 0}, {'text': 'เพื่อข้ามไปยังรอบถัดไปของ loop', 'weight': 1}, {'text': 'เพื่อตรวจสอบเงื่อนไข', 'weight': 0}, {'text': 'เพื่อสร้างฟังก์ชัน', 'weight': 0}]",Control Flow,Medium
128,การเขียนโปรแกรมภาษา Python จะใช้คำสั่ง while เพื่อทำอะไร?,"[{'text': 'เพื่อตรวจสอบเงื่อนไข', 'weight': 0}, {'text': 'เพื่อทำการวนซ้ำ', 'weight': 1}, {'text': 'เพื่อสร้างฟังก์ชัน', 'weight': 0}, {'text': 'เพื่อสร้างคลาส', 'weight': 0}]",Control Flow,Medium
129,คำสั่ง pass ใน Python ใช้เพื่ออะไร?,"[{'text': 'เพื่อทำการวนซ้ำ', 'weight': 0}, {'text': 'เพื่อตรวจสอบเงื่อนไข', 'weight': 0}, {'text': 'เพื่อสร้างฟังก์ชัน', 'weight': 0}, {'text': 'เพื่อไม่ทำอะไรและผ่านไปยังบรรทัดถัดไป', 'weight': 1}]",Control Flow,Hard
130,คำสั่ง try-except-finally ใน Python ใช้เพื่ออะไร?,"[{'text': 'เพื่อตรวจสอบเงื่อนไข', 'weight': 0}, {'text': 'เพื่อทำการวนซ้ำ', 'weight': 0}, {'text': 'เพื่อจัดการกับข้อผิดพลาด', 'weight': 1}, {'text': 'เพื่อสร้างฟังก์ชัน', 'weight': 0}]",Control Flow,Hard
131,ตัวแปรในภาษา Python สามารถเก็บค่าได้กี่ชนิด?,"[{'text': '2 ชนิด', 'weight': 0}, {'text': '3 ชนิด', 'weight': 0.25}, {'text': 'หลายชนิด', 'weight': 1}, {'text': 'ไม่จำกัด', 'weight': 0.5}]",Variables and Data Types,Easy
132,ตัวอย่างของตัวแปรแบบอักขระใน Python คืออะไร?,"[{'text': '123', 'weight': 0}, {'text': ""'Hello, World!'"", 'weight': 1}, {'text': '123.45', 'weight': 0.25}, {'text': 'True', 'weight': 0.5}]",Variables and Data Types,Easy
133,การแปลงตัวแปรจากชนิดหนึ่งเป็นอีกชนิดหนึ่งใน Python ทำได้โดยการใช้ฟังก์ชันอะไร?,"[{'text': 'type()', 'weight': 0.25}, {'text': 'convert()', 'weight': 0}, {'text': 'int(), float(), str() ฯลฯ', 'weight': 1}, {'text': 'change()', 'weight': 0.5}]",Variables and Data Types,Medium
134,ตัวอย่างของตัวแปรแบบจำนวนเต็มใน Python คืออะไร?,"[{'text': '123.45', 'weight': 0}, {'text': ""'Hello, World!'"", 'weight': 0.25}, {'text': '123', 'weight': 1}, {'text': 'True', 'weight': 0.5}]",Variables and Data Types,Easy
135,การสร้างตัวแปรใน Python สามารถทำได้โดยการใช้สัญลักษณ์อะไร?,"[{'text': '=', 'weight': 1}, {'text': '==', 'weight': 0}, {'text': '<>', 'weight': 0.25}, {'text': '!=', 'weight': 0.5}]",Variables and Data Types,Easy
136,ตัวอย่างของตัวแปรแบบตรรกศาสตร์ใน Python คืออะไร?,"[{'text': '123', 'weight': 0}, {'text': ""'Hello, World!'"", 'weight': 0.25}, {'text': 'True', 'weight': 1}, {'text': '123.45', 'weight': 0.5}]",Variables and Data Types,Easy
137,การตรวจสอบชนิดของตัวแปรใน Python สามารถทำได้โดยการใช้ฟังก์ชันอะไร?,"[{'text': 'type()', 'weight': 1}, {'text': 'check_type()', 'weight': 0}, {'text': 'isinstance()', 'weight': 0.5}, {'text': 'typeof()', 'weight': 0.25}]",Variables and Data Types,Medium
138,ตัวอย่างของตัวแปรแบบจำนวนจริงใน Python คืออะไร?,"[{'text': '123', 'weight': 0}, {'text': ""'Hello, World!'"", 'weight': 0.25}, {'text': '123.45', 'weight': 1}, {'text': 'True', 'weight': 0.5}]",Variables and Data Types,Easy
139,การกำหนดค่าเริ่มต้นให้กับตัวแปรใน Python สามารถทำได้โดยการใช้สัญลักษณ์อะไร?,"[{'text': '=', 'weight': 1}, {'text': '==', 'weight': 0}, {'text': '<>', 'weight': 0.25}, {'text': '!=', 'weight': 0.5}]",Variables and Data Types,Easy
