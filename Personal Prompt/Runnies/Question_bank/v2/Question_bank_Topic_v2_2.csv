Question,Choice,Topic,Level
Context Manager คืออะไร?,"[{'text': 'คลาสพิเศษที่ช่วยจัดการทรัพยากรใน Python', 'weight': 1}, {'text': 'ฟังก์ชันที่ใช้เพื่อจัดการทรัพยากร', 'weight': 0.25}, {'text': 'โมดูลที่ใช้เพื่อจัดการทรัพยากร', 'weight': 0}, {'text': 'ไม่มีความหมายใดๆ', 'weight': 0}]",Context Manager,Easy
วัตถุประสงค์ของ Context Manager คืออะไร?,"[{'text': 'เพื่อจัดการทรัพยากร เช่น การเปิด/ปิดไฟล์ หรือการเชื่อมต่อฐานข้อมูล', 'weight': 1}, {'text': 'เพื่อเพิ่มความเร็วในการทำงานของโปรแกรม', 'weight': 0}, {'text': 'เพื่อลดขนาดของโค้ด', 'weight': 0}, {'text': 'เพื่อเพิ่มความปลอดภัยในการเขียนโปรแกรม', 'weight': 0.25}]",Context Manager,Medium
ตัวอย่างการใช้งาน Context Manager คืออะไร?,"[{'text': ""with open('file.txt', 'r') as file:"", 'weight': 1}, {'text': ""file = open('file.txt', 'r')"", 'weight': 0.25}, {'text': 'import contextmanager', 'weight': 0}, {'text': 'from contextlib import contextmanager', 'weight': 0.5}]",Context Manager,Medium
Context Manager สามารถใช้กับทรัพยากรใดบ้าง?,"[{'text': 'ไฟล์, ฐานข้อมูล, โซคเก็ต, ล็อก', 'weight': 1}, {'text': 'ไฟล์, ฐานข้อมูล', 'weight': 0.5}, {'text': 'ล็อก, โซคเก็ต', 'weight': 0.25}, {'text': 'ไม่สามารถใช้กับทรัพยากรใดๆ', 'weight': 0}]",Context Manager,Medium
การทำงานของ Context Manager มีขั้นตอนใดบ้าง?,"[{'text': '__enter__ และ __exit__', 'weight': 1}, {'text': '__init__ และ __del__', 'weight': 0.25}, {'text': '__str__ และ __repr__', 'weight': 0}, {'text': '__add__ และ __sub__', 'weight': 0}]",Context Manager,Hard
ความสำคัญของ Context Manager คืออะไร?,"[{'text': 'ช่วยลดความซับซ้อนในการจัดการทรัพยากร', 'weight': 1}, {'text': 'ช่วยเพิ่มความเร็วในการทำงานของโปรแกรม', 'weight': 0}, {'text': 'ช่วยลดขนาดของโค้ด', 'weight': 0}, {'text': 'ช่วยเพิ่มความปลอดภัยในการเขียนโปรแกรม', 'weight': 0.25}]",Context Manager,Medium
การใช้งาน Context Manager มีข้อจำกัดใดบ้าง?,"[{'text': 'ไม่สามารถใช้กับทรัพยากรที่ไม่สนับสนุน', 'weight': 1}, {'text': 'สามารถใช้กับทุกทรัพยากร', 'weight': 0}, {'text': 'ไม่สามารถใช้กับทรัพยากรที่มีขนาดใหญ่', 'weight': 0.25}, {'text': 'ไม่สามารถใช้กับทรัพยากรที่มีความซับซ้อน', 'weight': 0.5}]",Context Manager,Hard
Context Manager สามารถใช้ร่วมกับทรัพยากรใดบ้าง?,"[{'text': 'ไฟล์, ฐานข้อมูล, โซคเก็ต, ล็อก', 'weight': 1}, {'text': 'ไฟล์, ฐานข้อมูล', 'weight': 0.5}, {'text': 'ล็อก, โซคเก็ต', 'weight': 0.25}, {'text': 'ไม่สามารถใช้ร่วมกับทรัพยากรใดๆ', 'weight': 0}]",Context Manager,Medium
Context Manager มีประโยชน์อย่างไร?,"[{'text': 'ช่วยลดความซับซ้อนในการจัดการทรัพยากร', 'weight': 1}, {'text': 'ช่วยเพิ่มความเร็วในการทำงานของโปรแกรม', 'weight': 0}, {'text': 'ช่วยลดขนาดของโค้ด', 'weight': 0}, {'text': 'ไม่มีประโยชน์ใดๆ', 'weight': 0}]",Context Manager,Easy
ต้องการใช้ Decorator เพื่อเพิ่มฟังก์ชันให้กับฟังก์ชันอื่นๆ ใน Python ควรใช้คำสั่งอะไร?,"[{'text': '@decorator_name', 'weight': 1}, {'text': 'def decorator_name:', 'weight': 0}, {'text': 'import decorator_name', 'weight': 0}, {'text': 'from decorator import *', 'weight': 0}]",การใช้งานเบื้องต้นของ Decorator,Easy
เมื่อเรียกใช้ฟังก์ชันที่ถูกตกแต่งด้วย Decorator จะเกิดอะไรขึ้น?,"[{'text': 'ฟังก์ชันจะถูกเรียกใช้โดยตรง', 'weight': 0}, {'text': 'ฟังก์ชันจะถูกแทนที่ด้วย Decorator', 'weight': 0}, {'text': 'ฟังก์ชันจะถูกเรียกใช้ผ่าน Decorator', 'weight': 1}, {'text': 'ไม่มีการทำงานใดๆ เกิดขึ้น', 'weight': 0}]",การทำงานของ Decorator,Medium
ฟังก์ชันใดใน Python ที่ถือว่าเป็น Decorator?,"[{'text': 'len()', 'weight': 0}, {'text': 'type()', 'weight': 0}, {'text': 'classmethod()', 'weight': 0.5}, {'text': 'staticmethod()', 'weight': 0.5}]",การใช้งานเบื้องต้นของ Decorator,Medium
คำสั่งใดที่ใช้สำหรับการสร้าง Decorator ใน Python?,"[{'text': 'def', 'weight': 0}, {'text': 'class', 'weight': 0}, {'text': '@', 'weight': 1}, {'text': 'import', 'weight': 0}]",การใช้งานเบื้องต้นของ Decorator,Easy
ฟังก์ชันใดที่สามารถใช้เป็น Decorator ใน Python?,"[{'text': 'ฟังก์ชันที่รับค่า argument เพียง 1 ตัว', 'weight': 0}, {'text': 'ฟังก์ชันที่ไม่รับค่า argument ใดๆ', 'weight': 0}, {'text': 'ฟังก์ชันที่รับค่า argument เป็นจำนวนมาก', 'weight': 1}, {'text': 'ฟังก์ชันที่ไม่คืนค่า', 'weight': 0}]",การใช้งานเบื้องต้นของ Decorator,Medium
การใช้งาน Decorator มีข้อดีอย่างไร?,"[{'text': 'เพิ่มความซับซ้อนของโค้ด', 'weight': 0}, {'text': 'ลดความสามารถในการแก้ไขโค้ด', 'weight': 0}, {'text': 'ช่วยให้โค้ดมีความกระชับและอ่านง่าย', 'weight': 1}, {'text': 'ทำให้การทำงานของโปรแกรมช้าลง', 'weight': 0}]",การใช้งานเบื้องต้นของ Decorator,Medium
การตกแต่งฟังก์ชันด้วย Decorator สามารถทำได้กับฟังก์ชันใดบ้าง?,"[{'text': 'ฟังก์ชันที่ไม่มีการคืนค่า', 'weight': 0}, {'text': 'ฟังก์ชันที่มีการคืนค่า', 'weight': 1}, {'text': 'ฟังก์ชันที่รับค่า argument เพียง 1 ตัว', 'weight': 0}, {'text': 'ฟังก์ชันที่ไม่รับค่า argument ใดๆ', 'weight': 0}]",การใช้งานเบื้องต้นของ Decorator,Hard
การตกแต่งฟังก์ชันด้วย Decorator สามารถทำได้กับคลาสใดบ้าง?,"[{'text': 'คลาสที่ไม่มี __init__ method', 'weight': 0}, {'text': 'คลาสที่มี __init__ method', 'weight': 1}, {'text': 'คลาสที่มีเฉพาะ static method', 'weight': 0}, {'text': 'คลาสที่ไม่มี method ใดๆ', 'weight': 0}]",การใช้งานเบื้องต้นของ Decorator,Hard
ฟังก์ชันใดใน Python ที่ถือว่าเป็น Decorator แบบ built-in?,"[{'text': 'classmethod()', 'weight': 0.5}, {'text': 'staticmethod()', 'weight': 0.5}, {'text': 'property()', 'weight': 0}, {'text': 'all of the above', 'weight': 1}]",การใช้งานเบื้องต้นของ Decorator,Hard
การตกแต่งฟังก์ชันด้วย Decorator สามารถทำได้กับฟังก์ชันใดบ้าง?,"[{'text': 'ฟังก์ชันที่ไม่มีการคืนค่า', 'weight': 1}, {'text': 'ฟังก์ชันที่มีการคืนค่า', 'weight': 1}, {'text': 'ฟังก์ชันที่รับค่า argument เพียง 1 ตัว', 'weight': 1}, {'text': 'ฟังก์ชันที่ไม่รับค่า argument ใดๆ', 'weight': 1}]",การใช้งานเบื้องต้นของ Decorator,Hard
การใช้งาน iterators ใน Python คืออะไร?,"[{'text': 'การวนลูปผ่านข้อมูลที่มีอยู่', 'weight': 1}, {'text': 'การสร้างฟังก์ชันที่สามารถเรียกใช้ได้หลายครั้ง', 'weight': 0}, {'text': 'การแปลงข้อมูลจากชนิดข้อมูลหนึ่งเป็นอีกชนิดข้อมูลหนึ่ง', 'weight': 0}, {'text': 'การตรวจสอบความถูกต้องของข้อมูล', 'weight': 0}]",Iterators,Easy
วิธีการสร้าง iterator ใน Python คืออะไร?,"[{'text': 'การใช้ฟังก์ชัน iter()', 'weight': 1}, {'text': 'การใช้ฟังก์ชัน next()', 'weight': 0}, {'text': 'การใช้ keyword yield', 'weight': 0}, {'text': 'การใช้ loop for', 'weight': 0}]",Iterators,Medium
ความแตกต่างระหว่าง iterators และ generators ใน Python คืออะไร?,"[{'text': 'generators สามารถสร้างข้อมูลได้ในขณะที่ iterators ไม่สามารถ', 'weight': 1}, {'text': 'iterators สามารถสร้างข้อมูลได้ในขณะที่ generators ไม่สามารถ', 'weight': 0}, {'text': 'generators และ iterators ทั้งคู่สามารถสร้างข้อมูลได้', 'weight': 0}, {'text': 'generators และ iterators ทั้งคู่ไม่สามารถสร้างข้อมูลได้', 'weight': 0}]",Iterators_and_Generators,Hard
วัตถุประสงค์ของการใช้ generators ใน Python คืออะไร?,"[{'text': 'เพื่อลดการใช้ทรัพยากรในการจัดเก็บข้อมูล', 'weight': 1}, {'text': 'เพื่อเพิ่มความเร็วในการประมวลผล', 'weight': 0}, {'text': 'เพื่อลดขนาดของโค้ด', 'weight': 0}, {'text': 'เพื่อเพิ่มความซับซ้อนของโค้ด', 'weight': 0}]",Generators,Medium
คำสั่งไหนใน Python ที่ใช้สำหรับการสร้าง generators?,"[{'text': 'yield', 'weight': 1}, {'text': 'return', 'weight': 0}, {'text': 'print', 'weight': 0}, {'text': 'break', 'weight': 0}]",Generators,Easy
ฟังก์ชันไหนใน Python ที่ใช้สำหรับการสร้าง iterators?,"[{'text': 'iter()', 'weight': 1}, {'text': 'next()', 'weight': 0}, {'text': 'len()', 'weight': 0}, {'text': 'type()', 'weight': 0}]",Iterators,Medium
วิธีการวนลูปผ่าน iterators ใน Python คืออะไร?,"[{'text': 'การใช้ loop for', 'weight': 1}, {'text': 'การใช้ฟังก์ชัน next()', 'weight': 0}, {'text': 'การใช้ฟังก์ชัน iter()', 'weight': 0}, {'text': 'การใช้ keyword yield', 'weight': 0}]",Iterators,Easy
ความสำคัญของการใช้ iterators และ generators ใน Python คืออะไร?,"[{'text': 'เพื่อการประหยัดทรัพยากรและเพิ่มความเร็วในการประมวลผล', 'weight': 1}, {'text': 'เพื่อเพิ่มความซับซ้อนของโค้ด', 'weight': 0}, {'text': 'เพื่อลดขนาดของโค้ด', 'weight': 0}, {'text': 'เพื่อเพิ่มความยืดหยุ่นของโค้ด', 'weight': 0}]",Iterators_and_Generators,Hard
การใช้ iterators และ generators มีข้อจำกัดอะไรบ้าง?,"[{'text': 'ไม่สามารถวนลูปผ่านข้อมูลได้หลายครั้ง', 'weight': 1}, {'text': 'สามารถวนลูปผ่านข้อมูลได้หลายครั้ง', 'weight': 0}, {'text': 'สามารถใช้งานได้กับข้อมูลชนิดใดๆ', 'weight': 0}, {'text': 'สามารถใช้งานได้กับข้อมูลชนิด String เท่านั้น', 'weight': 0}]",Iterators_and_Generators,Medium
วิธีการตรวจสอบว่า object เป็น iterators หรือไม่ใน Python คืออะไร?,"[{'text': 'การใช้ฟังก์ชัน hasattr() และตรวจสอบว่ามี method __iter__ หรือไม่', 'weight': 1}, {'text': 'การใช้ฟังก์ชัน isinstance() และตรวจสอบว่าเป็นชนิด iterator หรือไม่', 'weight': 0}, {'text': 'การใช้ฟังก์ชัน type() และตรวจสอบว่าเป็นชนิด iterator หรือไม่', 'weight': 0}, {'text': 'การใช้ฟังก์ชัน len() และตรวจสอบว่าเป็นชนิด iterator หรือไม่', 'weight': 0}]",Iterators,Hard
การสร้างคลาสใหม่ในภาษา Python จำเป็นต้องใช้คำสั่งใด?,"[{'text': 'class', 'weight': 1}, {'text': 'object', 'weight': 0}, {'text': 'instantiate', 'weight': 0}, {'text': 'inherit', 'weight': 0}]",Class Creation,Easy
เมื่อเราสร้าง object จากคลาสใดๆ ในภาษา Python จะเกิดอะไรขึ้น?,"[{'text': 'การสร้าง instance ของคลาสนั้นๆ', 'weight': 1}, {'text': 'การลบคลาสนั้นๆ', 'weight': 0}, {'text': 'การแก้ไขคลาสนั้นๆ', 'weight': 0}, {'text': 'ไม่มีอะไรเกิดขึ้น', 'weight': 0}]",Object Instantiation,Easy
วิธีการที่ใช้สืบทอดคุณสมบัติจากคลาสหนึ่งไปยังคลาสอื่นในภาษา Python คือ?,"[{'text': 'inheritance', 'weight': 1}, {'text': 'polymorphism', 'weight': 0}, {'text': 'encapsulation', 'weight': 0}, {'text': 'abstraction', 'weight': 0}]",Inheritance,Medium
การกำหนดค่าเริ่มต้นให้กับ attribute ของคลาสในภาษา Python ทำได้โดยการใช้คำสั่งใด?,"[{'text': '__init__', 'weight': 1}, {'text': '__str__', 'weight': 0}, {'text': '__repr__', 'weight': 0}, {'text': '__del__', 'weight': 0}]",Constructor,Medium
การเขียนโค้ดเพื่อให้ object สามารถแสดงผลลัพธ์เป็น string ได้ ใช้ method ใด?,"[{'text': '__str__', 'weight': 1}, {'text': '__repr__', 'weight': 0.5}, {'text': '__init__', 'weight': 0}, {'text': '__del__', 'weight': 0}]",String Representation,Medium
การสร้าง method ที่สามารถทำงานได้กับหลายประเภทของข้อมูลในภาษา Python เรียกว่าอะไร?,"[{'text': 'polymorphism', 'weight': 1}, {'text': 'inheritance', 'weight': 0}, {'text': 'encapsulation', 'weight': 0}, {'text': 'abstraction', 'weight': 0}]",Polymorphism,Hard
การสร้าง method ที่ไม่สามารถเข้าถึงได้จากภายนอกคลาสในภาษา Python ใช้วิธีการใด?,"[{'text': 'encapsulation', 'weight': 1}, {'text': 'inheritance', 'weight': 0}, {'text': 'polymorphism', 'weight': 0}, {'text': 'abstraction', 'weight': 0}]",Encapsulation,Hard
การสร้างคลาสที่ไม่มีการ implement method แต่สามารถสืบทอดไปยังคลาสอื่นได้ในภาษา Python เรียกว่าอะไร?,"[{'text': 'abstract class', 'weight': 1}, {'text': 'interface', 'weight': 0.5}, {'text': 'concrete class', 'weight': 0}, {'text': 'nested class', 'weight': 0}]",Abstract Class,Hard
การสร้าง attribute หรือ method ที่ไม่สามารถเปลี่ยนแปลงได้ในภาษา Python ใช้วิธีการใด?,"[{'text': 'immutable', 'weight': 1}, {'text': 'mutable', 'weight': 0}, {'text': 'public', 'weight': 0}, {'text': 'private', 'weight': 0}]",Immutability,Hard
การสร้าง method ที่สามารถทำงานได้กับ object หลายๆ ตัวในภาษา Python เรียกว่าอะไร?,"[{'text': 'static method', 'weight': 1}, {'text': 'class method', 'weight': 0.5}, {'text': 'instance method', 'weight': 0}, {'text': 'built-in method', 'weight': 0}]",Static Method,Hard
การนำเข้าโมดูลในภาษา Python สามารถทำได้หลายวิธี วิธีที่ถูกต้องคือ,"[{'text': 'ใช้คำสั่ง import', 'weight': 1}, {'text': 'ใช้คำสั่ง load', 'weight': 0}, {'text': 'ใช้คำสั่ง include', 'weight': 0}, {'text': 'ใช้คำสั่ง require', 'weight': 0}]",Modules and Imports,Easy
เมื่อเรียกใช้ฟังก์ชันจากโมดูล math ใน Python ควรใช้คำสั่งแบบใด?,"[{'text': 'import math', 'weight': 0.5}, {'text': 'from math import *', 'weight': 0.5}, {'text': 'load math', 'weight': 0}, {'text': 'include math', 'weight': 0}]",Modules and Imports,Medium
โมดูลที่มีอยู่ใน Python Standard Library คือ?,"[{'text': 'math', 'weight': 1}, {'text': 'custom_module', 'weight': 0}, {'text': 'external_module', 'weight': 0}, {'text': 'third_party_module', 'weight': 0}]",Modules and Imports,Easy
เมื่อต้องการนำเข้าเฉพาะฟังก์ชัน sin จากโมดูล math ควรใช้คำสั่งแบบใด?,"[{'text': 'from math import sin', 'weight': 1}, {'text': 'import math.sin', 'weight': 0}, {'text': 'from math import *', 'weight': 0.25}, {'text': 'import math', 'weight': 0}]",Modules and Imports,Medium
การสร้างโมดูลของตนเองใน Python สามารถทำได้โดยการสร้างไฟล์.py ที่มีชื่อ?,"[{'text': 'ตามที่เราต้องการ', 'weight': 1}, {'text': 'ต้องเป็นชื่อที่เฉพาะเจาะจง', 'weight': 0}, {'text': 'ไม่สามารถสร้างโมดูลของตนเองได้', 'weight': 0}, {'text': 'ต้องเป็นชื่อที่เริ่มต้นด้วย _', 'weight': 0}]",Modules and Imports,Medium
การใช้คำสั่ง from... import * จะทำให้เกิดผลกระทบอย่างไร?,"[{'text': 'อาจทำให้เกิดการชนชื่อฟังก์ชันหรือตัวแปร', 'weight': 1}, {'text': 'จะทำให้โปรแกรมทำงานเร็วขึ้น', 'weight': 0}, {'text': 'จะทำให้โปรแกรมทำงานช้าลง', 'weight': 0}, {'text': 'ไม่มีผลกระทบใดๆ', 'weight': 0}]",Modules and Imports,Hard
การนำเข้าโมดูลใน Python สามารถทำได้หลายวิธี วิธีที่ไม่ถูกต้องคือ,"[{'text': 'ใช้คำสั่ง load', 'weight': 1}, {'text': 'ใช้คำสั่ง import', 'weight': 0}, {'text': 'ใช้คำสั่ง include', 'weight': 1}, {'text': 'ใช้คำสั่ง require', 'weight': 1}]",Modules and Imports,Medium
โมดูลไหนบ้างที่มีอยู่ใน Python Standard Library?,"[{'text': 'math, random, time', 'weight': 1}, {'text': 'custom_module, external_module', 'weight': 0}, {'text': 'third_party_module, user_module', 'weight': 0}, {'text': 'all of the above', 'weight': 0}]",Modules and Imports,Hard
การนำเข้าโมดูลทั้งหมดใน Python Standard Library สามารถทำได้โดยใช้คำสั่ง?,"[{'text': 'ไม่สามารถทำได้', 'weight': 1}, {'text': 'import *', 'weight': 0}, {'text': 'from python import *', 'weight': 0}, {'text': 'import all', 'weight': 0}]",Modules and Imports,Medium
การใช้คำสั่ง try-except ในภาษา Python มีประโยชน์อย่างไร?,"[{'text': 'เพื่อควบคุมการทำงานของโปรแกรมให้ไม่เกิด Error', 'weight': 1}, {'text': 'เพื่อเพิ่มความเร็วในการทำงานของโปรแกรม', 'weight': 0}, {'text': 'เพื่อลดขนาดของโค้ด', 'weight': 0}, {'text': 'เพื่อสร้างฟังก์ชันใหม่', 'weight': 0}]",ErrorHandling,Easy
คำสั่งไหนที่ใช้สำหรับการจัดการ Error ในภาษา Python?,"[{'text': 'try-except', 'weight': 1}, {'text': 'for loop', 'weight': 0}, {'text': 'while loop', 'weight': 0}, {'text': 'if statement', 'weight': 0}]",ErrorHandling,Easy
ถ้าไม่มีการจัดการ Error ในโค้ด Python อาจจะเกิดอะไรขึ้น?,"[{'text': 'โปรแกรมอาจจะหยุดทำงานและแสดง Error Message', 'weight': 1}, {'text': 'โปรแกรมจะทำงานต่อไปโดยไม่แสดง Error', 'weight': 0}, {'text': 'โปรแกรมจะทำงานช้าลง', 'weight': 0}, {'text': 'โปรแกรมจะใช้หน่วยความจำมากขึ้น', 'weight': 0}]",ErrorHandling,Medium
คำสั่ง except ในภาษา Python ใช้สำหรับอะไร?,"[{'text': 'รับ Error ที่เกิดขึ้นและทำการประมวลผลต่อ', 'weight': 1}, {'text': 'สร้าง Error ใหม่', 'weight': 0}, {'text': 'ลบ Error ที่เกิดขึ้น', 'weight': 0}, {'text': 'แสดง Error Message', 'weight': 0}]",ErrorHandling,Medium
คำสั่ง else ใน block try-except ใช้สำหรับอะไร?,"[{'text': 'ประมวลผลโค้ดเมื่อไม่เกิด Error', 'weight': 1}, {'text': 'ประมวลผลโค้ดเมื่อเกิด Error', 'weight': 0}, {'text': 'หยุดการทำงานของโปรแกรม', 'weight': 0}, {'text': 'เรียกฟังก์ชันใหม่', 'weight': 0}]",ErrorHandling,Medium
คำสั่ง finally ใน block try-except ใช้สำหรับอะไร?,"[{'text': 'ประมวลผลโค้ดทุกครั้ง ไม่ว่าจะเกิด Error หรือไม่', 'weight': 1}, {'text': 'ประมวลผลโค้ดเฉพาะเมื่อเกิด Error', 'weight': 0}, {'text': 'ประมวลผลโค้ดเฉพาะเมื่อไม่เกิด Error', 'weight': 0}, {'text': 'หยุดการทำงานของโปรแกรม', 'weight': 0}]",ErrorHandling,Hard
การสร้าง custom exception ใน Python ทำได้โดยการสร้าง class ที่สืบทอดจากอะไร?,"[{'text': 'Exception', 'weight': 1}, {'text': 'Error', 'weight': 0}, {'text': 'CustomError', 'weight': 0}, {'text': 'MyException', 'weight': 0}]",ErrorHandling,Hard
การใช้คำสั่ง raise ในภาษา Python มีประโยชน์อย่างไร?,"[{'text': 'เพื่อสร้างและยกเลิก Error ใหม่', 'weight': 1}, {'text': 'เพื่อเพิ่มความเร็วในการทำงานของโปรแกรม', 'weight': 0}, {'text': 'เพื่อลดขนาดของโค้ด', 'weight': 0}, {'text': 'เพื่อสร้างฟังก์ชันใหม่', 'weight': 0}]",ErrorHandling,Medium
การเขียนโค้ด try-except-finally ในภาษา Python สามารถจัดการ Error ได้ทั้งหมดกี่ประเภท?,"[{'text': '3 ประเภท', 'weight': 1}, {'text': '2 ประเภท', 'weight': 0}, {'text': '1 ประเภท', 'weight': 0}, {'text': 'ไม่สามารถจัดการ Error ได้', 'weight': 0}]",ErrorHandling,Hard
การทำงานของคำสั่ง print() ในภาษา Python คืออะไร?,"[{'text': 'แสดงข้อความบนหน้าจอ', 'weight': 1}, {'text': 'รับข้อมูลจากผู้ใช้', 'weight': 0}, {'text': 'คำนวณผลรวมของค่า', 'weight': 0}, {'text': 'ตรวจสอบเงื่อนไขที่กำหนด', 'weight': 0}]",Input and Output,Easy
ฟังก์ชันใดในภาษา Python ที่ใช้รับข้อมูลจากผู้ใช้?,"[{'text': 'print()', 'weight': 0}, {'text': 'input()', 'weight': 1}, {'text': 'len()', 'weight': 0}, {'text': 'type()', 'weight': 0}]",Input and Output,Easy
ถ้าเราต้องการให้ผู้ใช้ป้อนข้อมูลเข้ามาทางคีย์บอร์ด เราควรใช้คำสั่งใด?,"[{'text': ""print('Message')"", 'weight': 0}, {'text': ""input('Message')"", 'weight': 1}, {'text': ""len('Message')"", 'weight': 0}, {'text': ""type('Message')"", 'weight': 0}]",Input and Output,Easy
คำสั่งไหนในภาษา Python ที่ใช้สำหรับการแสดงผลลัพธ์?,"[{'text': 'print()', 'weight': 1}, {'text': 'input()', 'weight': 0}, {'text': 'len()', 'weight': 0}, {'text': 'type()', 'weight': 0}]",Input and Output,Easy
"ถ้าเราต้องการแสดงข้อความ 'Hello, World!' บนหน้าจอ ควรใช้คำสั่งใด?","[{'text': ""print('Hello, World!')"", 'weight': 1}, {'text': ""input('Hello, World!')"", 'weight': 0}, {'text': ""len('Hello, World!')"", 'weight': 0}, {'text': ""type('Hello, World!')"", 'weight': 0}]",Input and Output,Easy
การทำงานของฟังก์ชัน input() ในภาษา Python คืออะไร?,"[{'text': 'แสดงข้อความบนหน้าจอ', 'weight': 0}, {'text': 'รับข้อมูลจากผู้ใช้', 'weight': 1}, {'text': 'คำนวณผลรวมของค่า', 'weight': 0}, {'text': 'ตรวจสอบเงื่อนไขที่กำหนด', 'weight': 0}]",Input and Output,Medium
เราสามารถใช้ฟังก์ชัน print() เพื่อแสดงผลลัพธ์ของการคำนวณได้หรือไม่?,"[{'text': 'ไม่สามารถ', 'weight': 0}, {'text': 'สามารถ', 'weight': 1}, {'text': 'ขึ้นอยู่กับเงื่อนไข', 'weight': 0}, {'text': 'ต้องใช้ฟังก์ชันอื่น', 'weight': 0}]",Input and Output,Medium
ถ้าเราต้องการรับข้อมูลที่เป็นตัวเลขจากผู้ใช้ เราควรทำอย่างไร?,"[{'text': 'ใช้ฟังก์ชัน input() และไม่ต้องทำอะไรเพิ่มเติม', 'weight': 0}, {'text': 'ใช้ฟังก์ชัน input() และแปลงข้อมูลเป็นตัวเลขด้วย int() หรือ float()', 'weight': 1}, {'text': 'ใช้ฟังก์ชัน print() และไม่ต้องทำอะไรเพิ่มเติม', 'weight': 0}, {'text': 'ใช้ฟังก์ชัน len() และไม่ต้องทำอะไรเพิ่มเติม', 'weight': 0}]",Input and Output,Hard
ถ้าเราต้องการแสดงผลลัพธ์ที่มีการจัดรูปแบบ เช่น การเว้นวรรคหรือขึ้นบรรทัดใหม่ เราควรใช้คำสั่งใด?,"[{'text': ""print('Message')"", 'weight': 0}, {'text': ""print('Message', end=' ')"", 'weight': 0.5}, {'text': ""print('Message', sep=' ', end='\n\n')"", 'weight': 1}, {'text': ""print('Message', file=sys.stdout)"", 'weight': 0}]",Input and Output,Hard
การทำงานของคำสั่ง input() เมื่อมีผู้ใช้ป้อนข้อมูลเข้ามา คืออะไร?,"[{'text': 'แสดงข้อความที่ผู้ใช้ป้อน', 'weight': 0}, {'text': 'รับข้อมูลที่ผู้ใช้ป้อนและเก็บไว้ในตัวแปร', 'weight': 1}, {'text': 'คำนวณผลรวมของค่าที่ผู้ใช้ป้อน', 'weight': 0}, {'text': 'ตรวจสอบเงื่อนไขที่กำหนดจากข้อมูลที่ผู้ใช้ป้อน', 'weight': 0}]",Input and Output,Hard
เซตในภาษา Python คืออะไร?,"[{'text': 'ชนิดของข้อมูลที่สามารถเก็บค่าได้หลายๆ ค่า', 'weight': 0}, {'text': 'ชนิดของข้อมูลที่ไม่สามารถมีค่าซ้ำกัน', 'weight': 1}, {'text': 'ชนิดของข้อมูลที่สามารถเก็บค่าเป็นลำดับ', 'weight': 0}, {'text': 'ฟังก์ชันที่ใช้ในการประมวลผลข้อมูล', 'weight': 0}]",Basic Set,Easy
การสร้างเซตในภาษา Python สามารถทำได้โดยใช้สัญลักษณ์อะไร?,"[{'text': '()', 'weight': 0}, {'text': '[]', 'weight': 0}, {'text': '{}', 'weight': 1}, {'text': '<>', 'weight': 0}]",Set Creation,Easy
เซตในภาษา Python มีลักษณะสำคัญอย่างไร?,"[{'text': 'สามารถเก็บค่าเป็นลำดับ', 'weight': 0}, {'text': 'ไม่สามารถมีค่าซ้ำกัน', 'weight': 1}, {'text': 'สามารถเปลี่ยนแปลงค่าได้', 'weight': 0}, {'text': 'สามารถเก็บค่าเป็นแบบอ้างอิง', 'weight': 0}]",Set Properties,Medium
"ถ้าเรามีเซต A = {1, 2, 3} และ B = {3, 4, 5} ผลลัพธ์ของการรวมเซต A และ B จะเป็นอย่างไร?","[{'text': '{1, 2, 3, 4, 5}', 'weight': 1}, {'text': '{3}', 'weight': 0}, {'text': '{1, 2, 4, 5}', 'weight': 0}, {'text': '{3, 6, 8}', 'weight': 0}]",Set Operations,Medium
"ถ้าเรามีเซต A = {1, 2, 3} และ B = {3, 4, 5} ผลลัพธ์ของการหาความแตกต่างของเซต A และ B จะเป็นอย่างไร?","[{'text': '{1, 2, 4, 5}', 'weight': 1}, {'text': '{3}', 'weight': 0}, {'text': '{1, 2, 3, 4, 5}', 'weight': 0}, {'text': '{3, 6, 8}', 'weight': 0}]",Set Operations,Medium
"ถ้าเรามีเซต A = {1, 2, 3} และ B = {3, 4, 5} ผลลัพธ์ของการหาข้อมูลที่ซ้ำกันของเซต A และ B จะเป็นอย่างไร?","[{'text': '{3}', 'weight': 1}, {'text': '{1, 2, 3, 4, 5}', 'weight': 0}, {'text': '{1, 2, 4, 5}', 'weight': 0}, {'text': '{3, 6, 8}', 'weight': 0}]",Set Operations,Medium
วิธีการเพิ่มข้อมูลเข้าไปในเซตในภาษา Python คืออะไร?,"[{'text': 'ใช้ฟังก์ชัน append', 'weight': 0}, {'text': 'ใช้ฟังก์ชัน add', 'weight': 1}, {'text': 'ใช้ฟังก์ชัน insert', 'weight': 0}, {'text': 'ใช้ฟังก์ชัน extend', 'weight': 0}]",Set Operations,Medium
วิธีการลบข้อมูลออกจากเซตในภาษา Python คืออะไร?,"[{'text': 'ใช้ฟังก์ชัน remove', 'weight': 1}, {'text': 'ใช้ฟังก์ชัน delete', 'weight': 0}, {'text': 'ใช้ฟังก์ชัน discard', 'weight': 0}, {'text': 'ใช้ฟังก์ชัน pop', 'weight': 0}]",Set Operations,Medium
เซตในภาษา Python สามารถทำอะไรบ้าง?,"[{'text': 'สามารถเก็บค่าเป็นลำดับและสามารถเปลี่ยนแปลงค่าได้', 'weight': 0}, {'text': 'สามารถหาความแตกต่างและความเหมือนกันของเซต', 'weight': 1}, {'text': 'สามารถแปลงเป็นชนิดข้อมูลอื่นได้', 'weight': 0}, {'text': 'สามารถทำการคำนวณทางคณิตศาสตร์ได้', 'weight': 0}]",Set Applications,Hard
เซตในภาษา Python มีข้อจำกัดอะไรบ้าง?,"[{'text': 'ไม่สามารถเก็บค่าเป็นลำดับ', 'weight': 1}, {'text': 'สามารถเปลี่ยนแปลงค่าได้', 'weight': 0}, {'text': 'ไม่สามารถมีค่าซ้ำกัน', 'weight': 1}, {'text': 'สามารถทำการคำนวณทางคณิตศาสตร์ได้', 'weight': 0}]",Set Limitations,Hard
การสร้าง Dictionary ในภาษา Python สามารถทำได้โดยใช้คำสั่งใด?,"[{'text': 'dict()', 'weight': 1}, {'text': 'Dictionary()', 'weight': 0}, {'text': 'dictionary()', 'weight': 0}, {'text': 'create_dict()', 'weight': 0}]",Dictionary,Easy
วิธีการเข้าถึงค่าใน Dictionary คืออะไร?,"[{'text': 'ใช้คีย์', 'weight': 1}, {'text': 'ใช้ค่า', 'weight': 0}, {'text': 'ใช้ทั้งคีย์และค่า', 'weight': 0}, {'text': 'ไม่สามารถเข้าถึงได้', 'weight': 0}]",Dictionary,Easy
เมื่อใช้วิธีการเข้าถึงค่าใน Dictionary ผ่านคีย์ที่ไม่มีอยู่ จะเกิดอะไรขึ้น?,"[{'text': 'จะแสดงข้อความ Error', 'weight': 1}, {'text': 'จะแสดงค่า None', 'weight': 0}, {'text': 'จะแสดงค่า Default', 'weight': 0}, {'text': 'ไม่มีอะไรเกิดขึ้น', 'weight': 0}]",Dictionary,Medium
การเพิ่มคู่ค่า-คีย์ใหม่ใน Dictionary สามารถทำได้โดยใช้วิธีการใด?,"[{'text': ""การใช้สัญลักษณ์ ['คีย์'] = 'ค่า'"", 'weight': 1}, {'text': ""การใช้คำสั่ง dict.add('คีย์', 'ค่า')"", 'weight': 0}, {'text': ""การใช้คำสั่ง dict.append('คีย์', 'ค่า')"", 'weight': 0}, {'text': 'ไม่สามารถเพิ่มคู่ค่า-คีย์ใหม่ได้', 'weight': 0}]",Dictionary,Medium
การลบคู่ค่า-คีย์ใน Dictionary สามารถทำได้โดยใช้วิธีการใด?,"[{'text': ""การใช้คำสั่ง del dict['คีย์']"", 'weight': 1}, {'text': ""การใช้คำสั่ง dict.remove('คีย์')"", 'weight': 0}, {'text': ""การใช้คำสั่ง dict.delete('คีย์')"", 'weight': 0}, {'text': 'ไม่สามารถลบคู่ค่า-คีย์ได้', 'weight': 0}]",Dictionary,Medium
วิธีการวน loop ผ่าน Dictionary ทั้งหมดคืออะไร?,"[{'text': 'การใช้คำสั่ง for key in dict:', 'weight': 1}, {'text': 'การใช้คำสั่ง for value in dict.values():', 'weight': 0.5}, {'text': 'การใช้คำสั่ง for item in dict.items():', 'weight': 0.5}, {'text': 'ไม่สามารถวน loop ผ่าน Dictionary ได้', 'weight': 0}]",Dictionary,Hard
วิธีการตรวจสอบว่าคีย์มีอยู่ใน Dictionary หรือไม่คืออะไร?,"[{'text': ""การใช้คำสั่ง 'คีย์' in dict"", 'weight': 1}, {'text': ""การใช้คำสั่ง dict.has_key('คีย์')"", 'weight': 0}, {'text': ""การใช้คำสั่ง dict.contains('คีย์')"", 'weight': 0}, {'text': 'ไม่สามารถตรวจสอบได้', 'weight': 0}]",Dictionary,Medium
การคัดลอก Dictionary สามารถทำได้โดยใช้วิธีการใด?,"[{'text': 'การใช้คำสั่ง dict_new = dict.copy()', 'weight': 1}, {'text': 'การใช้คำสั่ง dict_new = dict.clone()', 'weight': 0}, {'text': 'การใช้คำสั่ง dict_new = dict dup()', 'weight': 0}, {'text': 'ไม่สามารถคัดลอก Dictionary ได้', 'weight': 0}]",Dictionary,Medium
การค้นหาค่าที่มากที่สุดหรือน้อยที่สุดใน Dictionary สามารถทำได้โดยใช้วิธีการใด?,"[{'text': 'การใช้คำสั่ง max(dict.values()) และ min(dict.values())', 'weight': 1}, {'text': 'การใช้คำสั่ง dict.max() และ dict.min()', 'weight': 0}, {'text': 'การใช้คำสั่ง dict.find_max() และ dict.find_min()', 'weight': 0}, {'text': 'ไม่สามารถค้นหาค่าที่มากที่สุดหรือน้อยที่สุดได้', 'weight': 0}]",Dictionary,Hard
การเรียงลำดับ Dictionary สามารถทำได้โดยใช้วิธีการใด?,"[{'text': 'การใช้คำสั่ง sorted(dict.items())', 'weight': 1}, {'text': 'การใช้คำสั่ง dict.sort()', 'weight': 0}, {'text': 'การใช้คำสั่ง dict.order()', 'weight': 0}, {'text': 'ไม่สามารถเรียงลำดับ Dictionary ได้', 'weight': 0}]",Dictionary,Hard
การสร้าง tuple ในภาษา Python สามารถทำได้โดยการใช้สัญลักษณ์ใด,"[{'text': '()', 'weight': 1}, {'text': '[]', 'weight': 0}, {'text': '{}', 'weight': 0}, {'text': '<>', 'weight': 0}]",Tuple,Easy
คำสั่งใดที่ใช้ในการเข้าถึงสมาชิกของ tuple,"[{'text': 'print()', 'weight': 0}, {'text': 'len()', 'weight': 0}, {'text': 'tuple[index]', 'weight': 1}, {'text': 'tuple.key', 'weight': 0}]",Tuple,Medium
คุณสามารถแก้ไขสมาชิกของ tuple ได้หรือไม่,"[{'text': 'ไม่สามารถแก้ไข', 'weight': 1}, {'text': 'สามารถแก้ไข', 'weight': 0}, {'text': 'ขึ้นอยู่กับขนาดของ tuple', 'weight': 0}, {'text': 'ขึ้นอยู่กับค่าของสมาชิก', 'weight': 0}]",Tuple,Medium
คำสั่งใดที่ใช้ในการรวม tuple หลายๆ อัน,"[{'text': 'tuple1 + tuple2', 'weight': 1}, {'text': 'tuple1 - tuple2', 'weight': 0}, {'text': 'tuple1 * tuple2', 'weight': 0}, {'text': 'tuple1 / tuple2', 'weight': 0}]",Tuple,Medium
"การสร้าง tuple ที่มีสมาชิกเดียว จำเป็นต้องมีคอมม่า (,) ท้ายสุดหรือไม่","[{'text': 'จำเป็น', 'weight': 1}, {'text': 'ไม่จำเป็น', 'weight': 0}, {'text': 'ขึ้นอยู่กับขนาดของ tuple', 'weight': 0}, {'text': 'ขึ้นอยู่กับค่าของสมาชิก', 'weight': 0}]",Tuple,Medium
คำสั่งใดที่ใช้ในการตรวจสอบว่ามีสมาชิกใดๆ ใน tuple หรือไม่,"[{'text': 'in', 'weight': 1}, {'text': 'not in', 'weight': 0.5}, {'text': 'is', 'weight': 0}, {'text': 'is not', 'weight': 0}]",Tuple,Hard
คำสั่งใดที่ใช้ในการสลับตำแหน่งของสมาชิกใน tuple,"[{'text': 'reverse()', 'weight': 1}, {'text': 'sorted()', 'weight': 0}, {'text': 'shuffle()', 'weight': 0}, {'text': 'swap()', 'weight': 0}]",Tuple,Hard
คำสั่งใดที่ใช้ในการแปลง tuple เป็น list,"[{'text': 'list()', 'weight': 1}, {'text': 'tuple()', 'weight': 0}, {'text': 'str()', 'weight': 0}, {'text': 'int()', 'weight': 0}]",Tuple,Medium
คำสั่งใดที่ใช้ในการหาค่าสมาชิกที่ซ้ำกันมากที่สุดใน tuple,"[{'text': 'max()', 'weight': 0}, {'text': 'min()', 'weight': 0}, {'text': 'count()', 'weight': 0.5}, {'text': 'Counter()', 'weight': 1}]",Tuple,Hard
คำสั่งใดที่ใช้ในการหาค่าสมาชิกที่มีค่าน้อยที่สุดใน tuple,"[{'text': 'min()', 'weight': 1}, {'text': 'max()', 'weight': 0}, {'text': 'sum()', 'weight': 0}, {'text': 'len()', 'weight': 0}]",Tuple,Medium
การสร้าง list ในภาษา Python สามารถทำได้โดยการใช้สัญลักษณ์อะไร,"[{'text': '()', 'weight': 0}, {'text': '[]', 'weight': 1}, {'text': '{}', 'weight': 0}, {'text': '<>', 'weight': 0}]",Basic of List,Easy
คำสั่งไหนที่ใช้เพื่อเพิ่มสมาชิกเข้าไปใน list,"[{'text': 'append', 'weight': 1}, {'text': 'insert', 'weight': 0.5}, {'text': 'extend', 'weight': 0.25}, {'text': 'remove', 'weight': 0}]",List Methods,Easy
วิธีการเข้าถึงสมาชิกของ list คือ,"[{'text': 'ด้วยการใช้ index ที่เป็นเลข', 'weight': 1}, {'text': 'ด้วยการใช้ key ที่เป็นตัวอักษร', 'weight': 0}, {'text': 'ด้วยการใช้ function', 'weight': 0}, {'text': 'ด้วยการใช้ loop', 'weight': 0}]",Basic of List,Easy
list ใน Python เป็นแบบ,"[{'text': 'mutable', 'weight': 1}, {'text': 'immutable', 'weight': 0}, {'text': 'tuple', 'weight': 0}, {'text': 'set', 'weight': 0}]",Basic of List,Easy
เมื่อเรียกใช้ฟังก์ชัน sort() กับ list จะเกิดอะไรขึ้น,"[{'text': 'จะเรียงลำดับสมาชิกใน list จากน้อยไปมาก', 'weight': 1}, {'text': 'จะเรียงลำดับสมาชิกใน list จากมากไปน้อย', 'weight': 0.5}, {'text': 'จะไม่มีผลกระทบใดๆต่อ list', 'weight': 0}, {'text': 'จะทำให้ list ว่าง', 'weight': 0}]",List Methods,Medium
การลบสมาชิกออกจาก list สามารถทำได้โดยการใช้คำสั่ง,"[{'text': 'remove', 'weight': 1}, {'text': 'pop', 'weight': 0.5}, {'text': 'del', 'weight': 0.25}, {'text': 'clear', 'weight': 0}]",List Methods,Medium
การสลับตำแหน่งสมาชิกใน list สามารถทำได้โดยการใช้คำสั่ง,"[{'text': 'reverse', 'weight': 1}, {'text': 'sort', 'weight': 0.5}, {'text': 'shuffle', 'weight': 0.25}, {'text': 'swap', 'weight': 0}]",List Methods,Medium
การคัดลอก list สามารถทำได้โดยการใช้คำสั่ง,"[{'text': 'copy', 'weight': 1}, {'text': 'clone', 'weight': 0.5}, {'text': 'duplicate', 'weight': 0.25}, {'text': 'replicate', 'weight': 0}]",List Methods,Medium
การรวม list หลายๆอันเข้าด้วยกันสามารถทำได้โดยการใช้คำสั่ง,"[{'text': 'extend', 'weight': 1}, {'text': 'append', 'weight': 0.5}, {'text': 'join', 'weight': 0.25}, {'text': 'merge', 'weight': 0}]",List Methods,Hard
การตรวจสอบว่าสมาชิกใดๆอยู่ใน list หรือไม่สามารถทำได้โดยการใช้คำสั่ง,"[{'text': 'in', 'weight': 1}, {'text': 'exists', 'weight': 0.5}, {'text': 'find', 'weight': 0.25}, {'text': 'search', 'weight': 0}]",List Methods,Hard
ฟังก์ชันในภาษา Python สามารถรับค่าอะไรได้บ้าง?,"[{'text': 'ค่าเดียว', 'weight': 0}, {'text': 'ค่าหลายๆ ค่า', 'weight': 1}, {'text': 'ไม่สามารถรับค่าใดๆ', 'weight': 0}, {'text': 'ขึ้นอยู่กับโปรแกรมนั้นๆ', 'weight': 0}]",Function Arguments,Easy
คำสั่งไหนใช้สำหรับการเรียกฟังก์ชันใน Python?,"[{'text': 'call()', 'weight': 0}, {'text': 'run()', 'weight': 0}, {'text': 'ชื่อฟังก์ชันตามด้วยวงเล็บ', 'weight': 1}, {'text': 'execute()', 'weight': 0}]",Calling a Function,Easy
การสร้างฟังก์ชันใน Python จะต้องมีคำสั่งใด?,"[{'text': 'print()', 'weight': 0}, {'text': 'def', 'weight': 1}, {'text': 'function', 'weight': 0}, {'text': 'create()', 'weight': 0}]",Defining a Function,Medium
ฟังก์ชันใน Python สามารถคืนค่าได้หรือไม่?,"[{'text': 'ไม่สามารถคืนค่า', 'weight': 0}, {'text': 'สามารถคืนค่าได้', 'weight': 1}, {'text': 'ขึ้นอยู่กับโปรแกรมนั้นๆ', 'weight': 0}, {'text': 'ไม่แน่ใจ', 'weight': 0}]",Function Return,Medium
ฟังก์ชันใน Python สามารถรับค่า default ได้หรือไม่?,"[{'text': 'ไม่สามารถรับค่า default', 'weight': 0}, {'text': 'สามารถรับค่า default ได้', 'weight': 1}, {'text': 'ขึ้นอยู่กับโปรแกรมนั้นๆ', 'weight': 0}, {'text': 'ไม่แน่ใจ', 'weight': 0}]",Function Default Arguments,Medium
ฟังก์ชันใน Python สามารถรับค่า keyword argument ได้หรือไม่?,"[{'text': 'ไม่สามารถรับค่า keyword argument', 'weight': 0}, {'text': 'สามารถรับค่า keyword argument ได้', 'weight': 1}, {'text': 'ขึ้นอยู่กับโปรแกรมนั้นๆ', 'weight': 0}, {'text': 'ไม่แน่ใจ', 'weight': 0}]",Function Keyword Arguments,Hard
ฟังก์ชันใน Python สามารถรับค่า variable-length argument ได้หรือไม่?,"[{'text': 'ไม่สามารถรับค่า variable-length argument', 'weight': 0}, {'text': 'สามารถรับค่า variable-length argument ได้', 'weight': 1}, {'text': 'ขึ้นอยู่กับโปรแกรมนั้นๆ', 'weight': 0}, {'text': 'ไม่แน่ใจ', 'weight': 0}]",Function Variable-Length Arguments,Hard
ฟังก์ชันใน Python สามารถทำอะไรได้บ้าง?,"[{'text': 'เพียงแค่แสดงผล', 'weight': 0}, {'text': 'สามารถประมวลผลและคืนค่า', 'weight': 1}, {'text': 'สามารถทำได้เฉพาะในบางกรณี', 'weight': 0}, {'text': 'ไม่สามารถทำอะไร', 'weight': 0}]",Function Purpose,Easy
ฟังก์ชันใน Python สามารถถูกเรียกซ้ำได้หรือไม่?,"[{'text': 'ไม่สามารถถูกเรียกซ้ำ', 'weight': 0}, {'text': 'สามารถถูกเรียกซ้ำได้', 'weight': 1}, {'text': 'ขึ้นอยู่กับโปรแกรมนั้นๆ', 'weight': 0}, {'text': 'ไม่แน่ใจ', 'weight': 0}]",Function Reusability,Medium
ฟังก์ชันใน Python สามารถรับค่า argument หลายๆ ค่าได้หรือไม่?,"[{'text': 'ไม่สามารถรับค่า argument หลายๆ ค่า', 'weight': 0}, {'text': 'สามารถรับค่า argument หลายๆ ค่าได้', 'weight': 1}, {'text': 'ขึ้นอยู่กับโปรแกรมนั้นๆ', 'weight': 0}, {'text': 'ไม่แน่ใจ', 'weight': 0}]",Function Multiple Arguments,Medium
คำสั่งวน loop ที่ใช้ในการวนซ้ำๆ กับข้อมูลที่อยู่ใน list คือ?,"[{'text': 'for', 'weight': 1}, {'text': 'while', 'weight': 0}, {'text': 'if', 'weight': 0}, {'text': 'else', 'weight': 0}]",Loops,Easy
การทำงานของ loop while คือ?,"[{'text': 'วนซ้ำๆ จนกว่าเงื่อนไขจะเป็น false', 'weight': 1}, {'text': 'วนซ้ำๆ จนกว่าเงื่อนไขจะเป็น true', 'weight': 0}, {'text': 'วนซ้ำๆ เพียงครั้งเดียว', 'weight': 0}, {'text': 'วนซ้ำๆ ไม่มีเงื่อนไข', 'weight': 0}]",Loops,Medium
ถ้าเราต้องการให้ loop for วนซ้ำๆ กับข้อมูลใน list เราสามารถทำได้โดยการใช้คำสั่ง?,"[{'text': 'for item in list:', 'weight': 1}, {'text': 'while item in list:', 'weight': 0}, {'text': 'if item in list:', 'weight': 0}, {'text': 'else item in list:', 'weight': 0}]",Loops,Easy
คำสั่ง break ใน loop มีหน้าที่อะไร?,"[{'text': 'หยุดการวน loop ทันที', 'weight': 1}, {'text': 'วน loop ต่อไป', 'weight': 0}, {'text': 'วน loop กลับไปยังจุดเริ่มต้น', 'weight': 0}, {'text': 'ไม่มีผลต่อการวน loop', 'weight': 0}]",Loops,Medium
คำสั่ง continue ใน loop มีหน้าที่อะไร?,"[{'text': 'วน loop กลับไปยังจุดเริ่มต้น', 'weight': 1}, {'text': 'หยุดการวน loop ทันที', 'weight': 0}, {'text': 'วน loop ต่อไป', 'weight': 0}, {'text': 'ไม่มีผลต่อการวน loop', 'weight': 0}]",Loops,Medium
ในการวน loop ผ่าน list เราสามารถใช้คำสั่ง range() เพื่อกำหนดจำนวนครั้งที่ต้องการวนได้หรือไม่?,"[{'text': 'ใช่', 'weight': 1}, {'text': 'ไม่ใช่', 'weight': 0}]",Loops,Easy
ถ้าเราใช้ loop for และ loop while ร่วมกัน จะเกิดอะไรขึ้น?,"[{'text': 'การวน loop จะไม่ทำงาน', 'weight': 0.5}, {'text': 'การวน loop จะทำงานสลับกัน', 'weight': 0.5}, {'text': 'การวน loop จะทำงานพร้อมกัน', 'weight': 0}, {'text': 'ไม่มีผลต่อการวน loop', 'weight': 0}]",Loops,Hard
ในการวน loop ผ่าน dictionary เราสามารถใช้คำสั่ง items() เพื่อวนผ่านคู่ key-value ได้หรือไม่?,"[{'text': 'ใช่', 'weight': 1}, {'text': 'ไม่ใช่', 'weight': 0}]",Loops,Medium
คำสั่ง pass ใน loop มีหน้าที่อะไร?,"[{'text': 'ไม่มีการกระทำใดๆ', 'weight': 1}, {'text': 'หยุดการวน loop ทันที', 'weight': 0}, {'text': 'วน loop กลับไปยังจุดเริ่มต้น', 'weight': 0}, {'text': 'วน loop ต่อไป', 'weight': 0}]",Loops,Medium
การใช้คำสั่ง if ในภาษา Python ใช้สำหรับอะไร?,"[{'text': 'การวนลูป', 'weight': 0}, {'text': 'การตรวจสอบเงื่อนไข', 'weight': 1}, {'text': 'การรับข้อมูลจากผู้ใช้', 'weight': 0}, {'text': 'การแสดงผล', 'weight': 0}]",Control Flow,Easy
คำสั่ง elif ในภาษา Python ใช้สำหรับอะไร?,"[{'text': 'การตรวจสอบเงื่อนไขหลัก', 'weight': 0}, {'text': 'การตรวจสอบเงื่อนไขเพิ่มเติม', 'weight': 1}, {'text': 'การวนลูป', 'weight': 0}, {'text': 'การแสดงผล', 'weight': 0}]",Control Flow,Medium
คำสั่ง else ในภาษา Python ใช้สำหรับอะไร?,"[{'text': 'การตรวจสอบเงื่อนไขหลัก', 'weight': 0}, {'text': 'การทำงานเมื่อเงื่อนไขไม่ตรง', 'weight': 1}, {'text': 'การวนลูป', 'weight': 0}, {'text': 'การแสดงผล', 'weight': 0}]",Control Flow,Medium
การใช้คำสั่ง for ในภาษา Python ใช้สำหรับอะไร?,"[{'text': 'การตรวจสอบเงื่อนไข', 'weight': 0}, {'text': 'การวนลูป', 'weight': 1}, {'text': 'การรับข้อมูลจากผู้ใช้', 'weight': 0}, {'text': 'การแสดงผล', 'weight': 0}]",Control Flow,Easy
การใช้คำสั่ง while ในภาษา Python ใช้สำหรับอะไร?,"[{'text': 'การตรวจสอบเงื่อนไข', 'weight': 0}, {'text': 'การวนลูป', 'weight': 1}, {'text': 'การรับข้อมูลจากผู้ใช้', 'weight': 0}, {'text': 'การแสดงผล', 'weight': 0}]",Control Flow,Medium
การใช้คำสั่ง break ในภาษา Python ใช้สำหรับอะไร?,"[{'text': 'การวนลูป', 'weight': 0}, {'text': 'การออกจากลูป', 'weight': 1}, {'text': 'การตรวจสอบเงื่อนไข', 'weight': 0}, {'text': 'การแสดงผล', 'weight': 0}]",Control Flow,Medium
การใช้คำสั่ง continue ในภาษา Python ใช้สำหรับอะไร?,"[{'text': 'การวนลูป', 'weight': 0}, {'text': 'การข้ามไปยังรอบถัดไป', 'weight': 1}, {'text': 'การตรวจสอบเงื่อนไข', 'weight': 0}, {'text': 'การแสดงผล', 'weight': 0}]",Control Flow,Medium
การใช้คำสั่ง pass ในภาษา Python ใช้สำหรับอะไร?,"[{'text': 'การตรวจสอบเงื่อนไข', 'weight': 0}, {'text': 'การวนลูป', 'weight': 0}, {'text': 'การไม่ทำอะไร', 'weight': 1}, {'text': 'การแสดงผล', 'weight': 0}]",Control Flow,Hard
การใช้คำสั่ง try-except-finally ในภาษา Python ใช้สำหรับอะไร?,"[{'text': 'การตรวจสอบเงื่อนไข', 'weight': 0}, {'text': 'การวนลูป', 'weight': 0}, {'text': 'การจัดการข้อผิดพลาด', 'weight': 1}, {'text': 'การแสดงผล', 'weight': 0}]",Control Flow,Hard
การกำหนดค่าให้กับตัวแปรในภาษา Python สามารถทำได้โดยการใช้สัญลักษณ์อะไร?,"[{'text': '=', 'weight': 1}, {'text': ',', 'weight': 0}, {'text': ';', 'weight': 0}, {'text': ':', 'weight': 0}]",Variables_and_DataTypes,Easy
ตัวอย่างของตัวแปรในภาษา Python คืออะไร?,"[{'text': ""name = 'John'"", 'weight': 1}, {'text': 'age 30', 'weight': 0}, {'text': 'city; Bangkok', 'weight': 0}, {'text': 'height : 180', 'weight': 0}]",Variables_and_DataTypes,Easy
"ในภาษา Python, ตัวแปรที่มีค่าเป็นจำนวนเต็มจะถูกจัดอยู่ในประเภทข้อมูลอะไร?","[{'text': 'string', 'weight': 0}, {'text': 'float', 'weight': 0}, {'text': 'int', 'weight': 1}, {'text': 'bool', 'weight': 0}]",Variables_and_DataTypes,Medium
ตัวอย่างของค่าที่เป็นประเภทข้อมูล string ในภาษา Python คืออะไร?,"[{'text': '123', 'weight': 0}, {'text': ""'Hello, World!'"", 'weight': 1}, {'text': 'True', 'weight': 0}, {'text': '3.14', 'weight': 0}]",Variables_and_DataTypes,Easy
"ในการทำงานกับข้อมูลประเภท list ในภาษา Python, เราสามารถใช้วิธีการไหนในการเข้าถึงสมาชิกใน list?","[{'text': 'ด้วยการใช้สัญลักษณ์.', 'weight': 0}, {'text': 'ด้วยการใช้สัญลักษณ์ []', 'weight': 1}, {'text': 'ด้วยการใช้สัญลักษณ์ {}', 'weight': 0}, {'text': 'ด้วยการใช้สัญลักษณ์ {}', 'weight': 0}]",Variables_and_DataTypes,Medium
การแปลงข้อมูลจากประเภท int เป็นประเภท float ในภาษา Python สามารถทำได้โดยใช้ฟังก์ชันอะไร?,"[{'text': 'str()', 'weight': 0}, {'text': 'int()', 'weight': 0}, {'text': 'float()', 'weight': 1}, {'text': 'bool()', 'weight': 0}]",Variables_and_DataTypes,Medium
"ในภาษา Python, การตรวจสอบว่าตัวแปรมีค่าเป็น None หรือไม่สามารถทำได้โดยใช้คำสั่งอะไร?","[{'text': 'is not None', 'weight': 1}, {'text': '== None', 'weight': 0.5}, {'text': '= None', 'weight': 0}, {'text': '!= None', 'weight': 0.5}]",Variables_and_DataTypes,Medium
ตัวอย่างของค่าที่เป็นประเภทข้อมูล bool ในภาษา Python คืออะไร?,"[{'text': '123', 'weight': 0}, {'text': ""'Hello, World!'"", 'weight': 0}, {'text': 'True', 'weight': 1}, {'text': '3.14', 'weight': 0}]",Variables_and_DataTypes,Easy
"ในภาษา Python, การกำหนดค่าเริ่มต้นให้กับตัวแปรสามารถทำได้โดยการใช้วิธีการไหน?","[{'text': 'การกำหนดค่าในทันที', 'weight': 1}, {'text': 'การใช้คำสั่ง input()', 'weight': 0}, {'text': 'การใช้คำสั่ง print()', 'weight': 0}, {'text': 'การใช้คำสั่ง len()', 'weight': 0}]",Variables_and_DataTypes,Medium
